{"version":3,"names":["_orient","require","computeDimensions","_ref","maxWidth","maxHeight","width","height","processImage","_ref2","file","type","thumbnailMaxWidth","thumbnailMaxHeight","enableThumbnails","logger","isAvatar","startsWith","_promise","default","resolve","Blob","reject","img","Image","onload","onerror","src","URL","createObjectURL","then","fileDimensions","_pick2","info","size","thumbnailDimensions","canvas","document","createElement","ctx","getContext","orientation","orient","x","y","parts","toDataURL","split","byteString","atob","buffer","ArrayBuffer","length","view","DataView","i","setUint8","charCodeAt"],"sources":["process-image.browser.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {pick} from 'lodash';\n\nimport {orient} from './orient';\n/* eslint-env browser */\n\n/**\n * Determins the dimensions of an image\n * @param {Object} constraints\n * @param {Number} constraints.width\n * @param {Number} constraints.height\n * @param {Number} maxWidth\n * @param {Number} maxHeight\n * @returns {Object}\n */\nfunction computeDimensions({width, height}, maxWidth, maxHeight) {\n  if (height > width) {\n    if (height > maxHeight) {\n      width = (width * maxHeight) / height;\n      height = maxHeight;\n    }\n\n    if (width > maxWidth) {\n      height = (height * maxWidth) / width;\n      width = maxWidth;\n    }\n  } else {\n    if (width > maxWidth) {\n      height = (height * maxWidth) / width;\n      width = maxWidth;\n    }\n\n    if (height > maxHeight) {\n      width = (width * maxHeight) / height;\n      height = maxHeight;\n    }\n  }\n\n  return {height, width};\n}\n\n/**\n * Measures an image file and produces a thumbnail for it\n * @param {Object} options\n * @param {Blob|ArrayBuffer} options.file\n * @param {Number} options.thumbnailMaxWidth\n * @param {Number} options.thumbnailMaxHeight\n * @param {Boolean} options.enableThumbnails\n * @param {Object} options.logger\n * @param {Boolean} options.isAvatar\n * @returns {Promise<Array>} Buffer, Dimensions, thumbnailDimensions\n */\nexport default function processImage({\n  file,\n  type,\n  thumbnailMaxWidth,\n  thumbnailMaxHeight,\n  enableThumbnails,\n  logger,\n  isAvatar,\n}) {\n  if (!type || !type.startsWith('image')) {\n    return Promise.resolve();\n  }\n\n  file = file instanceof Blob ? file : new Blob([file]);\n\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n\n    img.onload = function onload() {\n      resolve(img);\n    };\n    img.onerror = reject;\n    img.src = URL.createObjectURL(file);\n  }).then((img) => {\n    const fileDimensions = pick(img, 'height', 'width');\n\n    if (isAvatar) {\n      // only if image is a profile avatar\n      logger.info('dimensions will be set for avatar image');\n      const size =\n        fileDimensions.height > fileDimensions.width ? fileDimensions.height : fileDimensions.width;\n\n      fileDimensions.height = size;\n      fileDimensions.width = size;\n    }\n    if (!enableThumbnails) {\n      logger.info('thumbnails not enabled');\n\n      return [null, fileDimensions, null];\n    }\n    const thumbnailDimensions = computeDimensions(\n      fileDimensions,\n      thumbnailMaxWidth,\n      thumbnailMaxHeight\n    );\n\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const {width, height} = thumbnailDimensions;\n\n    // explanation of orientation:\n    // https://stackoverflow.com/questions/20600800/js-client-side-exif-orientation-rotate-and-mirror-jpeg-images\n    if (file.orientation && file.orientation > 4) {\n      canvas.width = height;\n      canvas.height = width;\n      thumbnailDimensions.width = height;\n      thumbnailDimensions.height = width;\n    } else {\n      canvas.width = thumbnailDimensions.width;\n      canvas.height = thumbnailDimensions.height;\n    }\n\n    orient(\n      {\n        orientation: file && file.orientation ? file.orientation : '',\n        img,\n        x: 0,\n        y: 0,\n        width,\n        height,\n        ctx,\n      },\n      file\n    );\n\n    const parts = canvas.toDataURL('image/png').split(',');\n    // Thumbnail uploads were failing with common/base64 decoding\n    const byteString = atob(parts[1]);\n\n    const buffer = new ArrayBuffer(byteString.length);\n    const view = new DataView(buffer);\n\n    for (let i = 0; i < byteString.length; i += 1) {\n      view.setUint8(i, byteString.charCodeAt(i));\n    }\n\n    return [buffer, fileDimensions, thumbnailDimensions];\n  });\n}\n"],"mappings":"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"}