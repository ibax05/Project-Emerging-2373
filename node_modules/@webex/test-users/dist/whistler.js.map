{"version":3,"names":["_btoa","_interopRequireDefault","require","_httpCore","ownKeys","object","enumerableOnly","keys","_Object$keys","_Object$getOwnPropertySymbols","symbols","filter","sym","_Object$getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","Object","forEach","key","_defineProperty2","default","_Object$getOwnPropertyDescriptors","_Object$defineProperties","_Object$defineProperty","getClientCredentials","_ref","clientId","clientSecret","orgId","idbrokerUrl","machineAccount","machinePassword","request","method","uri","concat","json","body","uid","password","then","res","form","assertion","BearerToken","grant_type","scope","self_contained_token","client_id","client_secret","headers","authorization","btoa","token_type","access_token","createTestUser","options","undefined","process","env","WEBEX_CLIENT_ID","WEBEX_CLIENT_SECRET","WHISTLER_MACHINE_ACCOUNT","WHISTLER_MACHINE_PASSWORD","IDBROKER_BASE_URL","WHISTLER_TEST_ORG_ID","whistlerServiceUrl","WHISTLER_API_SERVICE_URL","reservationGroup","userScopes","Error","qs","isAccessTokenRequired","responseMetaData","ciPassword","emailAddress","name","displayName","webExUserName","token","ciAccessToken","reservationUrl","removeTestUser"],"sources":["whistler.js"],"sourcesContent":["import btoa from 'btoa';\nimport {request} from '@webex/http-core';\n\n/**\n * Fetches credentials/access_token to talk to the whistler endpoint\n *\n * @param {Object} options\n * @param {string} options.clientId\n * @param {string} options.clientSecret\n * @param {string} options.idbrokerUrl\n * @param {string} options.orgId\n * @param {string} options.machineAccount\n * @param {string} options.machinePassword\n * @private\n * @returns {Promise<string>}\n */\nconst getClientCredentials = ({\n  clientId,\n  clientSecret,\n  orgId,\n  idbrokerUrl,\n  machineAccount,\n  machinePassword,\n}) =>\n  request({\n    method: 'POST',\n    uri: `${idbrokerUrl}/idb/token/${orgId}/v2/actions/GetBearerToken/invoke`,\n    json: true,\n    body: {\n      uid: machineAccount,\n      password: machinePassword,\n    },\n  })\n    .then((res) =>\n      request({\n        method: 'POST',\n        uri: `${idbrokerUrl}/idb/oauth2/v1/access_token`,\n        json: true,\n        form: {\n          assertion: res.body.BearerToken,\n          grant_type: 'urn:ietf:params:oauth:grant-type:saml2-bearer',\n          scope: 'webexsquare:get_conversation webexsquare:admin',\n          self_contained_token: true,\n          client_id: clientId,\n          client_secret: clientSecret,\n        },\n        headers: {\n          // Note: we can't request's auth hash here because this endpoint expects\n          // us to send the auth header *without including \"Basic \"* before the\n          // token string\n          // authorization: `Basic + ${btoa(`${clientId}:${clientSecret}`)}`\n          authorization: btoa(`${clientId}:${clientSecret}`),\n        },\n      })\n    )\n    .then((res) => `${res.body.token_type} ${res.body.access_token}`);\n\n/**\n * @typedef {Object} TestUserObject\n * @property {string} password\n * @property {string} emailAddress\n * @property {string} displayName\n * @property {string} token\n * @property {string} reservationUrl\n * @property {object} responseMetaData - whistler given properties\n */\n\n/**\n * @typedef {Object} CreateUserOptions\n * @param {Object} [options]\n * @param {string} [whistlerServiceUrl] defaults to WHISTLER_API_SERVICE_URL\n * @param {string} [options.clientId] defaults to WEBEX_CLIENT_ID\n * @param {string} [options.clientSecret] defaults to WEBEX_CLIENT_SECRET\n * @param {string} [options.idbrokerUrl] defaults to IDBROKER_BASE_URL\n * @param {string} [options.orgId] organization ID to create the user under\n * @param {string} [options.machineAccount] defaults to WHISTLER_MACHINE_ACCOUNT\n * @param {string} [options.machinePassword] defaults to WHISTLER_MACHINE_PASSWORD\n */\n\n/**\n * Creates a test user\n * @param {CreateUserOptions} options\n * @returns {Promise.<TestUserObject>}\n */\nexport default function createTestUser(options = {}) {\n  const clientId = options.clientId || process.env.WEBEX_CLIENT_ID;\n  const clientSecret = options.clientSecret || process.env.WEBEX_CLIENT_SECRET;\n  const machineAccount = options.machineAccount || process.env.WHISTLER_MACHINE_ACCOUNT;\n  const machinePassword = options.machinePassword || process.env.WHISTLER_MACHINE_PASSWORD;\n  const idbrokerUrl = options.idbrokerUrl || process.env.IDBROKER_BASE_URL;\n  const orgId = options.orgId || process.env.WHISTLER_TEST_ORG_ID;\n  const whistlerServiceUrl = options.whistlerServiceUrl || process.env.WHISTLER_API_SERVICE_URL;\n  const {reservationGroup, userScopes} = options;\n\n  if (!clientId) {\n    throw new Error('options.clientId or process.env.WEBEX_CLIENT_ID must be defined');\n  }\n\n  if (!clientSecret) {\n    throw new Error('options.clientSecret or process.env.WEBEX_CLIENT_SECRET must be defined');\n  }\n\n  if (!machineAccount) {\n    throw new Error(\n      'options.machineAccount or process.env.WHISTLER_MACHINE_ACCOUNT must be defined'\n    );\n  }\n\n  if (!machinePassword) {\n    throw new Error(\n      'options.machinePassword or process.env.WHISTLER_MACHINE_PASSWORD must be defined'\n    );\n  }\n  if (!idbrokerUrl) {\n    throw new Error('options.idbrokerUrl or process.env.IDBROKER_BASE_URL must be defined');\n  }\n\n  if (!orgId) {\n    throw new Error('options.orgId or process.env.WHISTLER_TEST_ORG_ID must be defined');\n  }\n\n  if (!whistlerServiceUrl) {\n    throw new Error(\n      'options.whistlerServiceUrl or process.env.WHISTLER_API_SERVICE_URL must be defined'\n    );\n  }\n\n  // For reservation groups and user scopes\n  // Please check https://confluence-eng-gpk2.cisco.com/conf/pages/viewpage.action?spaceKey=LOCUS&title=Whistler+APIs#WhistlerAPIs-GET/reservations/testUser\n  return getClientCredentials({\n    clientId,\n    clientSecret,\n    machineAccount,\n    machinePassword,\n    idbrokerUrl,\n    orgId,\n  })\n    .then((authorization) =>\n      request({\n        method: 'GET',\n        uri: `${whistlerServiceUrl}/reservations/testUser`,\n        qs: {\n          reservationGroup,\n          userScopes,\n          isAccessTokenRequired: true,\n        },\n        headers: {\n          authorization,\n        },\n      })\n    )\n    .then((res) => ({\n      password: res.body.responseMetaData.ciPassword,\n      emailAddress: res.body.responseMetaData.name,\n      displayName: res.body.responseMetaData.webExUserName,\n      token: res.body.responseMetaData.ciAccessToken,\n      reservationUrl: res.body.reservationUrl,\n      ...res.body.responseMetaData,\n    }));\n}\n\n/**\n *\n * @param {Object} options\n * @returns {Promise}\n */\nexport function removeTestUser(options = {}) {\n  return request({\n    method: 'DELETE',\n    headers: {\n      authorization: `Bearer ${options.token}`,\n    },\n    uri: options.reservationUrl,\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,SAAA,GAAAD,OAAA;AAAyC,SAAAE,QAAAC,MAAA,EAAAC,cAAA,QAAAC,IAAA,GAAAC,YAAA,CAAAH,MAAA,OAAAI,6BAAA,QAAAC,OAAA,GAAAD,6BAAA,CAAAJ,MAAA,GAAAC,cAAA,KAAAI,OAAA,GAAAA,OAAA,CAAAC,MAAA,WAAAC,GAAA,WAAAC,gCAAA,CAAAR,MAAA,EAAAO,GAAA,EAAAE,UAAA,OAAAP,IAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,IAAA,EAAAG,OAAA,YAAAH,IAAA;AAAA,SAAAU,cAAAC,MAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAF,CAAA,UAAAG,MAAA,WAAAF,SAAA,CAAAD,CAAA,IAAAC,SAAA,CAAAD,CAAA,QAAAA,CAAA,OAAAf,OAAA,CAAAmB,MAAA,CAAAD,MAAA,OAAAE,OAAA,WAAAC,GAAA,QAAAC,gBAAA,CAAAC,OAAA,EAAAT,MAAA,EAAAO,GAAA,EAAAH,MAAA,CAAAG,GAAA,SAAAG,iCAAA,GAAAC,wBAAA,CAAAX,MAAA,EAAAU,iCAAA,CAAAN,MAAA,KAAAlB,OAAA,CAAAmB,MAAA,CAAAD,MAAA,GAAAE,OAAA,WAAAC,GAAA,IAAAK,sBAAA,CAAAZ,MAAA,EAAAO,GAAA,EAAAZ,gCAAA,CAAAS,MAAA,EAAAG,GAAA,iBAAAP,MAAA;AAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMa,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAAC,IAAA;EAAA,IACxBC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IACRC,YAAY,GAAAF,IAAA,CAAZE,YAAY;IACZC,KAAK,GAAAH,IAAA,CAALG,KAAK;IACLC,WAAW,GAAAJ,IAAA,CAAXI,WAAW;IACXC,cAAc,GAAAL,IAAA,CAAdK,cAAc;IACdC,eAAe,GAAAN,IAAA,CAAfM,eAAe;EAAA,OAEf,IAAAC,iBAAO,EAAC;IACNC,MAAM,EAAE,MAAM;IACdC,GAAG,KAAAC,MAAA,CAAKN,WAAW,iBAAAM,MAAA,CAAcP,KAAK,sCAAmC;IACzEQ,IAAI,EAAE,IAAI;IACVC,IAAI,EAAE;MACJC,GAAG,EAAER,cAAc;MACnBS,QAAQ,EAAER;IACZ;EACF,CAAC,CAAC,CACCS,IAAI,CAAC,UAACC,GAAG;IAAA,OACR,IAAAT,iBAAO,EAAC;MACNC,MAAM,EAAE,MAAM;MACdC,GAAG,KAAAC,MAAA,CAAKN,WAAW,gCAA6B;MAChDO,IAAI,EAAE,IAAI;MACVM,IAAI,EAAE;QACJC,SAAS,EAAEF,GAAG,CAACJ,IAAI,CAACO,WAAW;QAC/BC,UAAU,EAAE,+CAA+C;QAC3DC,KAAK,EAAE,gDAAgD;QACvDC,oBAAoB,EAAE,IAAI;QAC1BC,SAAS,EAAEtB,QAAQ;QACnBuB,aAAa,EAAEtB;MACjB,CAAC;MACDuB,OAAO,EAAE;QACP;QACA;QACA;QACA;QACAC,aAAa,EAAE,IAAAC,aAAI,KAAAjB,MAAA,CAAIT,QAAQ,OAAAS,MAAA,CAAIR,YAAY;MACjD;IACF,CAAC,CAAC;EAAA,EACH,CACAa,IAAI,CAAC,UAACC,GAAG;IAAA,UAAAN,MAAA,CAAQM,GAAG,CAACJ,IAAI,CAACgB,UAAU,OAAAlB,MAAA,CAAIM,GAAG,CAACJ,IAAI,CAACiB,YAAY;EAAA,CAAE,CAAC;AAAA;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACe,SAASC,cAAcA,CAAA,EAAe;EAAA,IAAdC,OAAO,GAAA3C,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA4C,SAAA,GAAA5C,SAAA,MAAG,CAAC,CAAC;EACjD,IAAMa,QAAQ,GAAG8B,OAAO,CAAC9B,QAAQ,IAAIgC,OAAO,CAACC,GAAG,CAACC,eAAe;EAChE,IAAMjC,YAAY,GAAG6B,OAAO,CAAC7B,YAAY,IAAI+B,OAAO,CAACC,GAAG,CAACE,mBAAmB;EAC5E,IAAM/B,cAAc,GAAG0B,OAAO,CAAC1B,cAAc,IAAI4B,OAAO,CAACC,GAAG,CAACG,wBAAwB;EACrF,IAAM/B,eAAe,GAAGyB,OAAO,CAACzB,eAAe,IAAI2B,OAAO,CAACC,GAAG,CAACI,yBAAyB;EACxF,IAAMlC,WAAW,GAAG2B,OAAO,CAAC3B,WAAW,IAAI6B,OAAO,CAACC,GAAG,CAACK,iBAAiB;EACxE,IAAMpC,KAAK,GAAG4B,OAAO,CAAC5B,KAAK,IAAI8B,OAAO,CAACC,GAAG,CAACM,oBAAoB;EAC/D,IAAMC,kBAAkB,GAAGV,OAAO,CAACU,kBAAkB,IAAIR,OAAO,CAACC,GAAG,CAACQ,wBAAwB;EAC7F,IAAOC,gBAAgB,GAAgBZ,OAAO,CAAvCY,gBAAgB;IAAEC,UAAU,GAAIb,OAAO,CAArBa,UAAU;EAEnC,IAAI,CAAC3C,QAAQ,EAAE;IACb,MAAM,IAAI4C,KAAK,CAAC,iEAAiE,CAAC;EACpF;EAEA,IAAI,CAAC3C,YAAY,EAAE;IACjB,MAAM,IAAI2C,KAAK,CAAC,yEAAyE,CAAC;EAC5F;EAEA,IAAI,CAACxC,cAAc,EAAE;IACnB,MAAM,IAAIwC,KAAK,CACb,gFAAgF,CACjF;EACH;EAEA,IAAI,CAACvC,eAAe,EAAE;IACpB,MAAM,IAAIuC,KAAK,CACb,kFAAkF,CACnF;EACH;EACA,IAAI,CAACzC,WAAW,EAAE;IAChB,MAAM,IAAIyC,KAAK,CAAC,sEAAsE,CAAC;EACzF;EAEA,IAAI,CAAC1C,KAAK,EAAE;IACV,MAAM,IAAI0C,KAAK,CAAC,mEAAmE,CAAC;EACtF;EAEA,IAAI,CAACJ,kBAAkB,EAAE;IACvB,MAAM,IAAII,KAAK,CACb,oFAAoF,CACrF;EACH;;EAEA;EACA;EACA,OAAO9C,oBAAoB,CAAC;IAC1BE,QAAQ,EAARA,QAAQ;IACRC,YAAY,EAAZA,YAAY;IACZG,cAAc,EAAdA,cAAc;IACdC,eAAe,EAAfA,eAAe;IACfF,WAAW,EAAXA,WAAW;IACXD,KAAK,EAALA;EACF,CAAC,CAAC,CACCY,IAAI,CAAC,UAACW,aAAa;IAAA,OAClB,IAAAnB,iBAAO,EAAC;MACNC,MAAM,EAAE,KAAK;MACbC,GAAG,KAAAC,MAAA,CAAK+B,kBAAkB,2BAAwB;MAClDK,EAAE,EAAE;QACFH,gBAAgB,EAAhBA,gBAAgB;QAChBC,UAAU,EAAVA,UAAU;QACVG,qBAAqB,EAAE;MACzB,CAAC;MACDtB,OAAO,EAAE;QACPC,aAAa,EAAbA;MACF;IACF,CAAC,CAAC;EAAA,EACH,CACAX,IAAI,CAAC,UAACC,GAAG;IAAA,OAAA/B,aAAA;MACR6B,QAAQ,EAAEE,GAAG,CAACJ,IAAI,CAACoC,gBAAgB,CAACC,UAAU;MAC9CC,YAAY,EAAElC,GAAG,CAACJ,IAAI,CAACoC,gBAAgB,CAACG,IAAI;MAC5CC,WAAW,EAAEpC,GAAG,CAACJ,IAAI,CAACoC,gBAAgB,CAACK,aAAa;MACpDC,KAAK,EAAEtC,GAAG,CAACJ,IAAI,CAACoC,gBAAgB,CAACO,aAAa;MAC9CC,cAAc,EAAExC,GAAG,CAACJ,IAAI,CAAC4C;IAAc,GACpCxC,GAAG,CAACJ,IAAI,CAACoC,gBAAgB;EAAA,CAC5B,CAAC;AACP;;AAEA;AACA;AACA;AACA;AACA;AACO,SAASS,cAAcA,CAAA,EAAe;EAAA,IAAd1B,OAAO,GAAA3C,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA4C,SAAA,GAAA5C,SAAA,MAAG,CAAC,CAAC;EACzC,OAAO,IAAAmB,iBAAO,EAAC;IACbC,MAAM,EAAE,QAAQ;IAChBiB,OAAO,EAAE;MACPC,aAAa,YAAAhB,MAAA,CAAYqB,OAAO,CAACuB,KAAK;IACxC,CAAC;IACD7C,GAAG,EAAEsB,OAAO,CAACyB;EACf,CAAC,CAAC;AACJ"}