{"version":3,"names":["makeStateDataType","Constructor","name","Error","dataType","set","newVal","parent","val","type","undefined","compare","currentValue","onChange","previousVal","attributeName","stopListening","_getCachedEventBubblingHandler","listenTo","prop","test"],"sources":["make-state-datatype.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n// Reminder: any class using this function must have something like the\n// following in its initialize method:\n//\n// // HACK to deal with the fact that AmpersandState#dataTypes#set is a pure\n// // function.\n// this._dataTypes = cloneDeep(this._dataTypes);\n// Object.keys(this._dataTypes).forEach((key) => {\n//   if (this._dataTypes[key].set) {\n//     this._dataTypes[key].set = this._dataTypes[key].set.bind(this);\n//   }\n// });\n// // END HACK\n\n/**\n * Creates an ampersand state object that wires its event handlers like a an\n * ampersand child\n * @param {Function} Constructor\n * @param {string} name\n * @returns {Object}\n */\nexport default function makeStateDataType(Constructor, name) {\n  if (!Constructor || !name) {\n    throw new Error('missing parameter for makeStateDataType');\n  }\n\n  return {\n    dataType: {\n      set: function set(newVal) {\n        // newVal.parent = this;\n        if (newVal instanceof Constructor) {\n          newVal.parent = this;\n\n          return {\n            val: newVal,\n            type: name,\n          };\n        }\n\n        // We only want to construct the new instance if we have some set of\n        // attributes (even an empty object) to base it on. This is to deal with\n        // the unexpected side effect that AmpState#unset will create a new\n        // instance.\n        return {\n          val: newVal ? new Constructor(newVal, {parent: this}) : undefined,\n          type: name,\n        };\n      },\n      compare: function compare(currentValue, newVal) {\n        return currentValue === newVal;\n      },\n      onChange: function onChange(newVal, previousVal, attributeName) {\n        // Copied from ampersand-state.js\n        // if this has changed we want to also handle\n        // event propagation\n        if (previousVal) {\n          this.stopListening(\n            previousVal,\n            'all',\n            this._getCachedEventBubblingHandler(attributeName)\n          );\n        }\n\n        if (newVal) {\n          this.listenTo(newVal, 'all', this._getCachedEventBubblingHandler(attributeName));\n        }\n      },\n    },\n    prop: {\n      /**\n       * This is a really unfortunate hack to deal with ampersand`s decision to\n       * make the dateType#set function pure. The only function called with the\n       * scope of the parent at set time seems to be test\n       * @param {AmpersandState} newVal\n       * @returns {boolean}\n       */\n      test: function test(newVal) {\n        if (!newVal) {\n          return false;\n        }\n        newVal.parent = this;\n\n        return false;\n      },\n      type: name,\n    },\n  };\n}\n"],"mappings":";;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,iBAAiBA,CAACC,WAAW,EAAEC,IAAI,EAAE;EAC3D,IAAI,CAACD,WAAW,IAAI,CAACC,IAAI,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;EAC5D;EAEA,OAAO;IACLC,QAAQ,EAAE;MACRC,GAAG,EAAE,SAASA,GAAGA,CAACC,MAAM,EAAE;QACxB;QACA,IAAIA,MAAM,YAAYL,WAAW,EAAE;UACjCK,MAAM,CAACC,MAAM,GAAG,IAAI;UAEpB,OAAO;YACLC,GAAG,EAAEF,MAAM;YACXG,IAAI,EAAEP;UACR,CAAC;QACH;;QAEA;QACA;QACA;QACA;QACA,OAAO;UACLM,GAAG,EAAEF,MAAM,GAAG,IAAIL,WAAW,CAACK,MAAM,EAAE;YAACC,MAAM,EAAE;UAAI,CAAC,CAAC,GAAGG,SAAS;UACjED,IAAI,EAAEP;QACR,CAAC;MACH,CAAC;MACDS,OAAO,EAAE,SAASA,OAAOA,CAACC,YAAY,EAAEN,MAAM,EAAE;QAC9C,OAAOM,YAAY,KAAKN,MAAM;MAChC,CAAC;MACDO,QAAQ,EAAE,SAASA,QAAQA,CAACP,MAAM,EAAEQ,WAAW,EAAEC,aAAa,EAAE;QAC9D;QACA;QACA;QACA,IAAID,WAAW,EAAE;UACf,IAAI,CAACE,aAAa,CAChBF,WAAW,EACX,KAAK,EACL,IAAI,CAACG,8BAA8B,CAACF,aAAa,CAAC,CACnD;QACH;QAEA,IAAIT,MAAM,EAAE;UACV,IAAI,CAACY,QAAQ,CAACZ,MAAM,EAAE,KAAK,EAAE,IAAI,CAACW,8BAA8B,CAACF,aAAa,CAAC,CAAC;QAClF;MACF;IACF,CAAC;IACDI,IAAI,EAAE;MACJ;AACN;AACA;AACA;AACA;AACA;AACA;MACMC,IAAI,EAAE,SAASA,IAAIA,CAACd,MAAM,EAAE;QAC1B,IAAI,CAACA,MAAM,EAAE;UACX,OAAO,KAAK;QACd;QACAA,MAAM,CAACC,MAAM,GAAG,IAAI;QAEpB,OAAO,KAAK;MACd,CAAC;MACDE,IAAI,EAAEP;IACR;EACF,CAAC;AACH"}