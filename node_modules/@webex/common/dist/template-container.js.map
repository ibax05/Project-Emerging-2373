{"version":3,"names":["_util","_interopRequireDefault","require","make","_len","arguments","length","containers","Array","_key","TopContainer","shift","data","_weakMap","default","sizes","ChildContainer","apply","name","concat","map","container","join","Container","_classCallCheck2","_len2","args","_key2","set","_construct2","_createClass2","key","get","value","add","clear","ret","_delete","mine","_len3","keys","_key3","delete","next","size","_len4","_key4","undefined","has","overwrite","_len5","_key5","insert","inspect","util","depth","_len6","_key6","push","TypeError"],"sources":["template-container.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport util from 'util';\n\n/**\n * Factory which produces a multi-keyed container based on the provided set of\n * constructors\n * @param {mixed} containers\n * @returns {Container}\n */\nfunction make(...containers) {\n  const TopContainer = containers.shift();\n\n  const data = new WeakMap();\n  const sizes = new WeakMap();\n\n  const ChildContainer = containers.length > 1 ? make(...containers) : containers[0];\n\n  const name = `(${[TopContainer.name]\n    .concat(containers.map((container) => container.name))\n    .join(', ')})`;\n\n  /**\n   * Container that wraps an arbitrary set of tupples to their values\n   */\n  class Container {\n    /**\n     * @constructs Container\n     */\n    constructor(...args) {\n      data.set(this, new TopContainer(...args));\n      sizes.set(this, 0);\n    }\n\n    /**\n     * getter for .size\n     * @returns {number}\n     */\n    get size() {\n      return sizes.get(this);\n    }\n\n    /**\n     * Identical to Container#set() but leads slightly more intuitive code when\n     * the container is based on a Set rather than a Map.\n     * @returns {Container}\n     */\n    add(...args) {\n      return this.set(...args);\n    }\n\n    /**\n     * Removes all items from the container\n     * @returns {undefined}\n     */\n    clear() {\n      const ret = data.get(this).clear();\n\n      sizes.set(this, 0);\n\n      return ret;\n    }\n\n    /**\n     * Removes the specified item to the container\n     * @param {mixed} key\n     * @param {Array<mixed>} keys\n     * @returns {boolean}\n     */\n    delete(key, ...keys) {\n      const mine = data.get(this);\n\n      if (!keys.length) {\n        return mine.delete(key);\n      }\n\n      const next = mine.get(key);\n\n      if (!next) {\n        return false;\n      }\n\n      const ret = next.delete(...keys);\n\n      if (ret) {\n        sizes.set(this, sizes.get(this) - 1);\n      }\n\n      if (next.size === 0) {\n        mine.delete(key);\n      }\n\n      return ret;\n    }\n\n    /**\n     * Retrieves the specified item from the container\n     * @param {mixed} key\n     * @param {Array<mixed>} keys\n     * @returns {mixed}\n     */\n    get(key, ...keys) {\n      const mine = data.get(this);\n\n      if (!mine.get) {\n        return mine;\n      }\n\n      if (!keys.length) {\n        return mine.get(key);\n      }\n\n      const next = mine.get(key);\n\n      if (!next) {\n        return undefined;\n      }\n\n      if (!next.get) {\n        return next;\n      }\n\n      return next.get(...keys);\n    }\n\n    /**\n     * Indicates whether the container holds the specified item\n     * @param {mixed} key\n     * @param {Array<mixed>} keys\n     * @returns {Boolean}\n     */\n    has(...args) {\n      return typeof this.get(...args) !== 'undefined';\n    }\n\n    /**\n     * Stores the specified item in the container\n     * @param {mixed} key\n     * @param {Array<mixed>} args\n     * @param {mixed} value\n     * @returns {Container}\n     */\n    set(...args) {\n      let overwrite = false;\n\n      if (this.has(...args)) {\n        overwrite = true;\n      }\n      const mine = data.get(this);\n\n      const key = args.shift();\n\n      if (!mine.get) {\n        insert(mine, key, ...args);\n\n        return this;\n      }\n\n      let next = mine.get(key);\n\n      if (!next) {\n        if (!ChildContainer) {\n          insert(mine, key, ...args);\n\n          return this;\n        }\n        next = new ChildContainer();\n        insert(mine, key, next);\n      }\n      insert(next, ...args);\n\n      if (!overwrite) {\n        sizes.set(this, sizes.get(this) + 1);\n      }\n\n      return this;\n    }\n\n    /**\n     * @private\n     * @returns {string}\n     */\n    inspect() {\n      return `Container${name} {\n  ${util.inspect(data.get(this), {depth: null})}\n}`;\n    }\n  }\n\n  return Container;\n}\n\n/**\n * Inserts into an arbitrary container\n * @param {Map|WeakMap|Set|WeakSet} container\n * @param {Array<mixed>} args\n * @private\n * @returns {undefined}\n */\nfunction insert(container, ...args) {\n  if (container.add) {\n    container.add(...args);\n\n    return;\n  }\n\n  if (container.set) {\n    container.set(...args);\n\n    return;\n  }\n\n  if (container.push) {\n    container.push(...args);\n\n    return;\n  }\n  throw new TypeError('Could not determine how to insert into the specified container');\n}\nexport {make as default};\n"],"mappings":"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"}