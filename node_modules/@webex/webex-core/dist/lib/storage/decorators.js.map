{"version":3,"names":["_common","require","_errors","persist","_len","arguments","length","args","Array","_key","apply","key","decider","persistDecorator","target","prop","descriptor","TypeError","value","_wrap2","default","persistExecutor","fn","_this","_len2","initializeArgs","_key2","ret","_apply","changeEvent","concat","on","_debounce2","shouldPersist","Reflect","_promise","resolve","boundedStorage","put","prepareInitialize","M","_map","S","_set","BlockingKeyMap","make","blockingKeys","waitForValue","Error","waitForValueDecorator","add","waitForValueExecutor","_this2","_len3","_key3","keys","get","all","_toConsumableArray2","map","k","waitFor","then","_typeof2","prototype","inited","identifyTarget","namespace","stack","id","has","initialize","applyInit","_len4","_key4","init","self","getNamespace","webex","_identity2","_this3","_len5","_key5","set","_curry2","logger","debug","parent","_defineProperty2","toLowerCase","_result2","handle","reason","NotFoundError","process","env","NODE_ENV","toString","includes","error","reject","promises","forEach","push","catch","delete","size","loaded"],"sources":["decorators.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint no-invalid-this: [0] */\n\nimport {curry, debounce, identity, result, wrap} from 'lodash';\nimport {make} from '@webex/common';\n\nimport {NotFoundError} from './errors';\n\n/**\n * Stores the result of fn before returning it\n * @param  {string} key\n * @private\n * @returns {Promise} resolves with the result of fn\n */\nexport function persist(...args) {\n  if (args.length === 3) {\n    return persist('@')(...args);\n  }\n\n  const [key, decider] = args;\n\n  return function persistDecorator(target, prop, descriptor) {\n    if (prop !== 'initialize') {\n      // Once we have class-based alternative to AmpersandState, it should be\n      // detected here.\n      throw new TypeError(\n        '@persist can only currently be applied to AmpersandState objects or their derivatives and must be applied to the initialize method'\n      );\n    }\n\n    descriptor.value = wrap(descriptor.value, function persistExecutor(fn, ...initializeArgs) {\n      const ret = Reflect.apply(fn, this, initializeArgs);\n      const changeEvent = key === '@' ? 'change' : `change:${key}`;\n\n      // Some scenarios will lead to lots of change events on a single tick; we\n      // really only care about writing once things have stopped changing. with\n      // a debounce of zero, we're effectively coalescing all the changes\n      // triggered by a single call to set() and commiting them on the next tick\n      // eslint-disable-next-line no-invalid-this\n      this.on(\n        changeEvent,\n        debounce(() => {\n          const shouldPersist = !decider || Reflect.apply(decider, this, ...initializeArgs);\n\n          if (!shouldPersist) {\n            return Promise.resolve();\n          }\n          if (key === '@') {\n            // eslint-disable-next-line no-invalid-this\n            return this.boundedStorage.put(key, this);\n          }\n\n          // eslint-disable-next-line no-invalid-this\n          return this.boundedStorage.put(key, this[key]);\n        }, 0)\n      );\n\n      return ret;\n    });\n\n    prepareInitialize(target, prop);\n  };\n}\n\nconst M = Map;\nconst S = Set;\nconst BlockingKeyMap = make(M, M, S);\nconst blockingKeys = new BlockingKeyMap();\n\n/**\n * Prevents fn from executing until key has been (attempted to be) loaded\n * @param {string} key\n * @param {Function} fn\n * @private\n * @returns {Promise} result of fn\n */\nexport function waitForValue(key) {\n  if (!key) {\n    throw new Error('`key` is required');\n  }\n\n  return function waitForValueDecorator(target, prop, descriptor) {\n    blockingKeys.add(target, prop, key);\n    descriptor.value = wrap(descriptor.value, function waitForValueExecutor(fn, ...args) {\n      const keys = blockingKeys.get(target, prop);\n\n      return Promise.all([...keys].map((k) => this.boundedStorage.waitFor(k))).then(() =>\n        Reflect.apply(fn, this, args)\n      );\n    });\n\n    // This *should* make decorators compatible with AmpersandState class\n    // definitions\n    if (typeof target === 'object' && !target.prototype) {\n      target[prop] = descriptor.value;\n    }\n\n    prepareInitialize(target, prop);\n\n    return descriptor;\n  };\n}\n\nconst inited = new Set();\n\n/**\n * finds a means of identitying the `target` param passed to\n * `prepareInitialize()`. When possible, avoids duplicate `init()` calls if\n * namespaces collide\n *\n * @param {Object|Constructor} target\n * @private\n * @returns {String|Constructor}\n */\nfunction identifyTarget(target) {\n  if (target.namespace) {\n    return target.namespace;\n  }\n\n  return target;\n}\n\nconst stack = new Set();\n\n/**\n * @param {Function} target\n * @param {string} prop\n * @private\n * @returns {undefined}\n */\nfunction prepareInitialize(target, prop) {\n  const id = identifyTarget(target);\n\n  if (!inited.has(id)) {\n    inited.add(id);\n    if (target.initialize) {\n      target.initialize = wrap(target.initialize, function applyInit(fn, ...args) {\n        const ret = Reflect.apply(fn, this, args);\n\n        Reflect.apply(init, this, args);\n\n        return ret;\n      });\n\n      return;\n    }\n\n    target.initialize = init;\n  }\n\n  /**\n   * @private\n   * @returns {undefined}\n   */\n  function init() {\n    const self = this;\n    const namespace = this.getNamespace();\n\n    this.webex.initialize = wrap(\n      this.webex.initialize || identity,\n      function applyInit(fn, ...args) {\n        // Call webex's initalize method first\n        // Reminder: in order for MockWebex to accept initial storage data, the\n        // wrapped initialize() must be invoked before attempting to load data.\n        // Reminder: context here is `webex`, not `self`.\n        stack.add(namespace);\n        Reflect.apply(fn, this, args);\n\n        // Then prepare a function for setting values retrieved from storage\n        const set = curry((key, value) => {\n          this.logger.debug(`storage:(${namespace}): got \\`${key}\\` for first time`);\n          if (key === '@') {\n            self.parent.set({\n              [namespace.toLowerCase()]: value,\n            });\n          } else if (result(self[key], 'isState')) {\n            self[key].set(value);\n          } else {\n            self.set(key, value);\n          }\n          this.logger.debug(`storage:(${namespace}): set \\`${key}\\` for first time`);\n        });\n\n        // And prepare an error handler for when those keys can't be found\n        const handle = curry((key, reason) => {\n          if (\n            reason instanceof NotFoundError ||\n            (process.env.NODE_ENV !== 'production' &&\n              reason.toString().includes('MockNotFoundError'))\n          ) {\n            this.logger.debug(`storage(${namespace}): no data for \\`${key}\\`, continuing`);\n\n            return Promise.resolve();\n          }\n          this.logger.error(`storage(${namespace}): failed to init \\`${key}\\``, reason);\n\n          return Promise.reject(reason);\n        });\n\n        // Iterate over the list of keys marked as blocking via `@waitForValue`\n        const keys = blockingKeys.get(target, prop);\n        const promises = [];\n\n        keys.forEach((key) => {\n          promises.push(this.boundedStorage.get(namespace, key).then(set(key)).catch(handle(key)));\n        });\n\n        Promise.all(promises).then(() => {\n          stack.delete(namespace);\n          if (stack.size === 0) {\n            this.loaded = true;\n          }\n        });\n      }\n    );\n  }\n}\n"],"mappings":"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"}