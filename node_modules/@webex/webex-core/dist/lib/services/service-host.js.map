{"version":3,"names":["_url","_interopRequireDefault","require","_constants","ServiceHost","pto","_classCallCheck2","default","validate","catalog","defaultUri","hostGroup","id","priority","uri","failed","replaced","_createClass2","key","get","includes","split","urlObj","Url","parse","host","concat","port","format","value","setStatus","_ref","undefined","polyGenerate","_ref2","name","url","_ref3","throwError","msg","Error","SERVICE_CATALOGS","length","exports"],"sources":["service-host.js"],"sourcesContent":["import Url from 'url';\n\nimport {SERVICE_CATALOGS} from './constants';\n\n/**\n * The parameter transfer object for {@link ServiceHost#constructor}.\n *\n * @typedef {Object} ServiceHostConstructorPTO\n * @property {string} ServiceHostConstructorPTO.catalog - The host's catalog.\n * @property {string} ServiceHostConstructorPTO.defaultUri - The host's default.\n * @property {string} ServiceHostConstructorPTO.hostGroup - The host's group.\n * @property {string} ServiceHostConstructorPTO.id - The host's clusterId.\n * @property {number} ServiceHostConstructorPTO.priority - The host's priority.\n * @property {string} ServiceHostConstructorPTO.uri - The host's uri.\n */\n\n/**\n * The parameter transfer object for {@link ServiceHost#polyGenerate}.\n *\n * @typedef {Object} ServiceHostPolyGeneratePTO\n * @property {string} ServiceHostPolyGeneratePTO.catalog - The target catalog.\n * @property {string} ServiceHostPolyGeneratePTO.name - The service name.\n * @property {string} ServiceHostPolyGeneratePTO.url - The service url.\n */\n\n/**\n * @class\n * @classdesc - Manages a single service host and its associated data.\n */\nexport default class ServiceHost {\n  /**\n   * Generate a new {@link ServiceHost}.\n   *\n   * @public\n   * @constructor\n   * @memberof ServiceHost\n   * @param {ServiceHostConstructorPTO} pto\n   */\n  constructor(pto) {\n    // Validate the parameter transfer object.\n    ServiceHost.validate(pto);\n\n    // Map the parameter transfer object to the class object.\n    /**\n     * The catalog name that the {@link ServiceHost} is associated with.\n     *\n     * @instance\n     * @type {string}\n     * @public\n     * @memberof ServiceHost\n     */\n    this.catalog = pto.catalog;\n\n    /**\n     * The default URI for the {@link ServiceHost}.\n     *\n     * @instance\n     * @type {string}\n     * @public\n     * @memberof ServiceHost\n     */\n    this.default = pto.defaultUri;\n\n    /**\n     * The host group that the {@link ServiceHost} is associated with.\n     *\n     * @instance\n     * @type {string}\n     * @public\n     * @memberof ServiceHost\n     */\n    this.hostGroup = pto.hostGroup;\n\n    /**\n     * The cluster ID of the {@link ServiceHost}.\n     *\n     * @instance\n     * @type {string}\n     * @public\n     * @memberof ServiceHost\n     */\n    this.id = pto.id;\n\n    /**\n     * The priority value of the {@link ServiceHost}. The lower the number, the\n     * higher the priority.\n     *\n     * @instance\n     * @type {number}\n     * @public\n     * @memberof ServiceHost\n     */\n    this.priority = pto.priority;\n\n    /**\n     * The host uri of the {@link ServiceHost}.\n     *\n     * @instance\n     * @type {string}\n     * @public\n     * @memberof ServiceHost\n     */\n    this.uri = pto.uri;\n\n    // Generate flags.\n    /**\n     * If the {@link ServiceHost} is marked as failed.\n     *\n     * @instance\n     * @type {boolean}\n     * @protected\n     * @memberof ServiceHost\n     */\n    this.failed = false;\n\n    /**\n     * If the {@link ServiceHost} is marked as replaced.\n     *\n     * @instance\n     * @type {boolean}\n     * @protected\n     * @memberof ServiceHost\n     */\n    this.replaced = false;\n  }\n\n  /**\n   * If the {@link ServiceHost} is in an active state.\n   *\n   * @public\n   * @memberof ServiceHost\n   * @type {boolean} - `true` if the service is active and usable.\n   */\n  get active() {\n    // Validate that the `ServiceHost` was not marked as failed or replaced.\n    return !this.failed && !this.replaced;\n  }\n\n  /**\n   * If the host is local to the user's cluster.\n   *\n   * @public\n   * @memberof ServiceHost\n   * @type {boolean} - If the host is local.\n   */\n  get local() {\n    return this.default.includes(this.hostGroup);\n  }\n\n  /**\n   * The service value.\n   *\n   * @public\n   * @memberof ServiceHost\n   * @type {string} - The service value.\n   */\n  get service() {\n    return this.id.split(':')[3];\n  }\n\n  /**\n   * The formatted url for the host.\n   *\n   * @public\n   * @memberof ServiceHost\n   * @type {string} - The service url.\n   */\n  get url() {\n    // Generate a url object from the default url.\n    const urlObj = Url.parse(this.default);\n\n    // Format the host of the generated url object.\n    urlObj.host = `${this.uri}${urlObj.port ? `:${urlObj.port}` : ''}`;\n\n    // Assign the formatted url to this.\n    return Url.format(urlObj);\n  }\n\n  /**\n   * Set one or more of the status properties of the class object.\n   *\n   * @public\n   * @memberof ServiceHost\n   * @param {Object} pto - The parameter transfer object.\n   * @property {boolean} [pto.failed] - The failed status to set.\n   * @property {boolean} [pto.replaced] - the replaced status to set.\n   * @returns {this}\n   */\n  setStatus({failed, replaced}) {\n    if (failed !== undefined) {\n      this.failed = failed;\n    }\n\n    if (replaced !== undefined) {\n      this.replaced = replaced;\n    }\n\n    return this;\n  }\n\n  /**\n   * Generate a service host using only a catalog, name, and URL.\n   *\n   * @public\n   * @static\n   * @memberof ServiceHost\n   * @param {ServiceHostPolyGeneratePTO} pto\n   * @returns {ServiceHost} - The generated service host.\n   */\n  static polyGenerate({catalog, name, url}) {\n    return new ServiceHost({\n      catalog,\n      defaultUri: url,\n      hostGroup: Url.parse(url).host,\n      id: name ? `poly-head:poly-group:poly-cluster:${name}` : undefined,\n      priority: 1,\n      uri: Url.parse(url).host,\n    });\n  }\n\n  /**\n   * Validate that a constructor parameter transfer object is valid.\n   *\n   * @public\n   * @static\n   * @memberof ServiceHost\n   * @param {ServiceHostConstructorPTO} pto\n   * @throws - If the parameter transfer object is not valid.\n   * @returns {undefined}\n   */\n  static validate({catalog, defaultUri, hostGroup, id, priority, uri}) {\n    // Generate error-throwing method.\n    const throwError = (msg) => {\n      throw new Error(`service-host: invalid constructor parameters, ${msg}`);\n    };\n\n    // Validate the catalog property.\n    if (!SERVICE_CATALOGS.includes(catalog)) {\n      throwError(\"'catalog' must be a string\");\n    }\n\n    // Validate the `defaultUri` property.\n    if (typeof defaultUri !== 'string') {\n      throwError(\"'defaultUri' must be a string\");\n    }\n\n    // Validate the `hostGroup` property.\n    if (typeof hostGroup !== 'string') {\n      throwError(\"'hostGroup' must be a string\");\n    }\n\n    // Validate the `id` property.\n    if (typeof id !== 'string' || id.split(':').length !== 4) {\n      throwError(\"'id' must be a string that contains 3 ':' characters\");\n    }\n\n    // Validate the `priority` property.\n    if (typeof priority !== 'number') {\n      throwError(\"'priority' must be a number\");\n    }\n\n    // Validate the `uri` property.\n    if (typeof uri !== 'string') {\n      throwError(\"'uri' must be a string\");\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA,IAAAA,IAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,UAAA,GAAAD,OAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA,IAIqBE,WAAW;EAC9B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAAA,YAAYC,GAAG,EAAE;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAH,WAAA;IACf;IACAA,WAAW,CAACI,QAAQ,CAACH,GAAG,CAAC;;IAEzB;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACI,OAAO,GAAGJ,GAAG,CAACI,OAAO;;IAE1B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACF,OAAO,GAAGF,GAAG,CAACK,UAAU;;IAE7B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,SAAS,GAAGN,GAAG,CAACM,SAAS;;IAE9B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,EAAE,GAAGP,GAAG,CAACO,EAAE;;IAEhB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAGR,GAAG,CAACQ,QAAQ;;IAE5B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,GAAG,GAAGT,GAAG,CAACS,GAAG;;IAElB;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAG,KAAK;;IAEnB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAG,KAAK;EACvB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE,IAAAC,aAAA,CAAAV,OAAA,EAAAH,WAAA;IAAAc,GAAA;IAAAC,GAAA,EAOA,SAAAA,IAAA,EAAa;MACX;MACA,OAAO,CAAC,IAAI,CAACJ,MAAM,IAAI,CAAC,IA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"}