{"version":3,"names":["_webexPlugin","_interopRequireDefault","require","_webexCore","precedence","error","warn","info","debug","trace","wrapConsoleMethod","level","impls","slice","console","pop","wrappedConsoleMethod","_console","_len","arguments","length","args","Array","_key","process","env","NODE_ENV","webex","internal","device","url","unshift","apply","Logger","WebexPlugin","extend","namespace","log","version","registerPlugin","_default","exports","default"],"sources":["logger.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\nimport WebexPlugin from '../lib/webex-plugin';\nimport {registerPlugin} from '../webex-core';\n\nconst precedence = {\n  error: ['log'],\n  warn: ['error', 'log'],\n  info: ['log'],\n  debug: ['info', 'log'],\n  trace: ['debug', 'info', 'log'],\n};\n\n/**\n * Assigns the specified console method to Logger; uses `precedence` to fallback\n * to other console methods if the current environment doesn't provide the\n * specified level.\n * @param {string} level\n * @returns {Function}\n */\nfunction wrapConsoleMethod(level) {\n  /* eslint no-console: [0] */\n  let impls = precedence[level];\n\n  if (impls) {\n    impls = impls.slice();\n    while (!console[level]) {\n      level = impls.pop();\n    }\n  }\n\n  return function wrappedConsoleMethod(...args) {\n    /* eslint no-invalid-this: [0] */\n    /* istanbul ignore if */\n    if (\n      process.env.NODE_ENV === 'test' &&\n      this.webex &&\n      this.webex.internal.device &&\n      this.webex.internal.device.url\n    ) {\n      args.unshift(this.webex.internal.device.url.slice(-3));\n    }\n    console[level](...args);\n  };\n}\n\nconst Logger = WebexPlugin.extend({\n  namespace: 'Logger',\n  error: wrapConsoleMethod('error'),\n  warn: wrapConsoleMethod('warn'),\n  log: wrapConsoleMethod('log'),\n  info: wrapConsoleMethod('info'),\n  debug: wrapConsoleMethod('debug'),\n  trace: wrapConsoleMethod('trace'),\n});\n\nregisterPlugin('logger', Logger);\n\nexport default Logger;\n"],"mappings":";;;;;;;;AAGA,IAAAA,YAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AAJA;AACA;AACA;;AAIA,IAAME,UAAU,GAAG;EACjBC,KAAK,EAAE,CAAC,KAAK,CAAC;EACdC,IAAI,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC;EACtBC,IAAI,EAAE,CAAC,KAAK,CAAC;EACbC,KAAK,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC;EACtBC,KAAK,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK;AAChC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAChC;EACA,IAAIC,KAAK,GAAGR,UAAU,CAACO,KAAK,CAAC;EAE7B,IAAIC,KAAK,EAAE;IACTA,KAAK,GAAGA,KAAK,CAACC,KAAK,EAAE;IACrB,OAAO,CAACC,OAAO,CAACH,KAAK,CAAC,EAAE;MACtBA,KAAK,GAAGC,KAAK,CAACG,GAAG,EAAE;IACrB;EACF;EAEA,OAAO,SAASC,oBAAoBA,CAAA,EAAU;IAAA,IAAAC,QAAA;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAC1C;IACA;IACA,IACEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,IAC/B,IAAI,CAACC,KAAK,IACV,IAAI,CAACA,KAAK,CAACC,QAAQ,CAACC,MAAM,IAC1B,IAAI,CAACF,KAAK,CAACC,QAAQ,CAACC,MAAM,CAACC,GAAG,EAC9B;MACAT,IAAI,CAACU,OAAO,CAAC,IAAI,CAACJ,KAAK,CAACC,QAAQ,CAACC,MAAM,CAACC,GAAG,CAACjB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD;IACA,CAAAI,QAAA,GAAAH,OAAO,EAACH,KAAK,CAAC,CAAAqB,KAAA,CAAAf,QAAA,EAAII,IAAI,CAAC;EACzB,CAAC;AACH;AAEA,IAAMY,MAAM,GAAGC,oBAAW,CAACC,MAAM,CAAC;EAChCC,SAAS,EAAE,QAAQ;EACnB/B,KAAK,EAAEK,iBAAiB,CAAC,OAAO,CAAC;EACjCJ,IAAI,EAAEI,iBAAiB,CAAC,MAAM,CAAC;EAC/B2B,GAAG,EAAE3B,iBAAiB,CAAC,KAAK,CAAC;EAC7BH,IAAI,EAAEG,iBAAiB,CAAC,MAAM,CAAC;EAC/BF,KAAK,EAAEE,iBAAiB,CAAC,OAAO,CAAC;EACjCD,KAAK,EAAEC,iBAAiB,CAAC,OAAO,CAAC;EAAA4B,OAAA;AACnC,CAAC,CAAC;AAEF,IAAAC,yBAAc,EAAC,QAAQ,EAAEN,MAAM,CAAC;AAAC,IAAAO,QAAA,GAElBP,MAAM;AAAAQ,OAAA,CAAAC,OAAA,GAAAF,QAAA"}