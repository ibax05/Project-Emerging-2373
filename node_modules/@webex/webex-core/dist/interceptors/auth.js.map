{"version":3,"names":["_httpCore","require","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","_Reflect$construct","arguments","apply","_possibleConstructorReturn2","Reflect","sham","Proxy","Boolean","prototype","valueOf","call","e","AuthInterceptor","_Interceptor","_inherits2","_super","_classCallCheck2","_createClass2","key","value","onRequest","options","_this","headers","authorization","_deleteProperty","_promise","resolve","requiresCredentials","then","requires","webex","credentials","getUserToken","token","toString","_this2","addAuthHeader","internal","services","details","getServiceFromUrl","uri","_ref","name","resource","service","api","includes","validateDomains","hasAllowedDomains","isAllowedDomainUrl","waitForService","url","detectedUrl","catch","error","logger","warn","onResponseError","reason","_this3","shouldAttemptReauth","info","canRefresh","refresh","replay","reject","replayCount","config","maxAuthenticationReplays","concat","Error","request","shouldRefreshAccessToken","statusCode","create","Interceptor","exports"],"sources":["auth.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {Interceptor} from '@webex/http-core';\n\n/**\n * @class\n */\nexport default class AuthInterceptor extends Interceptor {\n  /**\n   * @returns {AuthInterceptor}\n   */\n  static create() {\n    return new AuthInterceptor({webex: this});\n  }\n\n  /**\n   * @see {@link Interceptor#onRequest}\n   * @param {Object} options\n   * @returns {Object}\n   */\n  onRequest(options) {\n    options.headers = options.headers || {};\n\n    // If Authorizations is already set, don't overwrite it\n    if ('authorization' in options.headers || 'auth' in options) {\n      // If Authorization is set to null, false, or undefined, delete it to\n      // prevent a CORS preflight.\n      if (!options.headers.authorization) {\n        Reflect.deleteProperty(options.headers, 'authorization');\n      }\n\n      return Promise.resolve(options);\n    }\n\n    return this.requiresCredentials(options).then((requires) => {\n      if (!requires) {\n        return options;\n      }\n\n      return this.webex.credentials.getUserToken().then((token) => {\n        options.headers.authorization = token.toString();\n\n        return options;\n      });\n    });\n  }\n\n  /**\n   * Determines if the provided options object needs an authorization header.\n   *\n   * @param {Object} options\n   * @returns {Promise<boolean>}\n   */\n  requiresCredentials(options) {\n    // Validate that authorization is necessary.\n    if (options.addAuthHeader === false) {\n      return Promise.resolve(false);\n    }\n\n    // Validate that the services plugin has been loaded before proceeding.\n    if (!this.webex.internal.services) {\n      return Promise.resolve(false);\n    }\n\n    // Destructure webex instance to isolate services plugin.\n    const {services} = this.webex.internal;\n\n    // Store the current service details if available and destructure details.\n    const details = services.getServiceFromUrl(options.uri || '');\n    const {name} = details || {};\n    const {resource, uri} = options;\n    const service = options.service || options.api;\n\n    // Unique validation for the u2c service.\n    if ((service && service === 'u2c') || (name && name === 'u2c')) {\n      if ((resource && resource.includes('limited')) || (uri && uri.includes('limited'))) {\n        return Promise.resolve(false);\n      }\n\n      return Promise.resolve(true);\n    }\n\n    // Validate that the allowed domains can be utilized.\n    if (\n      services.validateDomains &&\n      services.hasAllowedDomains() &&\n      uri &&\n      services.isAllowedDomainUrl(uri)\n    ) {\n      return Promise.resolve(true);\n    }\n\n    // Perform an additional validation in case the service does not exist yet.\n    return services\n      .waitForService({name: service, url: uri})\n      .then((detectedUrl) => {\n        // Validate that the url exists in the catalog.\n        if (services.getServiceFromUrl(detectedUrl)) {\n          return true;\n        }\n\n        // Return false to indicate authentication is not required.\n        return false;\n      })\n      .catch((error) => {\n        this.webex.logger.warn(\n          'auth-interceptor: failed to validate service exists in catalog',\n          error\n        );\n\n        return false;\n      });\n  }\n\n  /**\n   * @see {@link Interceptor#onResponseError}\n   * @param {Object} options\n   * @param {Error} reason\n   * @returns {Object}\n   */\n  onResponseError(options, reason) {\n    return this.shouldAttemptReauth(reason, options).then((shouldAttemptReauth) => {\n      if (shouldAttemptReauth) {\n        this.webex.logger.info('auth: received 401, attempting to reauthenticate');\n\n        if (reason.options.headers) {\n          Reflect.deleteProperty(reason.options.headers, 'authorization');\n        }\n\n        if (this.webex.credentials.canRefresh) {\n          return this.webex.credentials.refresh().then(() => this.replay(options));\n        }\n      }\n\n      return Promise.reject(reason);\n    });\n  }\n\n  /**\n   * Replays the request\n   * @param {Object} options\n   * @returns {Object}\n   */\n  replay(options) {\n    if (options.replayCount) {\n      options.replayCount += 1;\n    } else {\n      options.replayCount = 1;\n    }\n\n    if (options.replayCount > this.webex.config.maxAuthenticationReplays) {\n      this.webex.logger.error(\n        `auth: failed after ${this.webex.config.maxAuthenticationReplays} replay attempts`\n      );\n\n      return Promise.reject(\n        new Error(`Failed after ${this.webex.config.maxAuthenticationReplays} replay attempts`)\n      );\n    }\n\n    this.webex.logger.info(`auth: replaying request ${options.replayCount} time`);\n\n    return this.webex.request(options);\n  }\n\n  /**\n   * Indicates whether or not the current request should refresh its access\n   * token in event of a 401\n   * @param {Error} reason\n   * @param {Object} options\n   * @returns {Promise<boolean>}\n   */\n  shouldAttemptReauth(reason, options) {\n    if (options && options.shouldRefreshAccessToken === false) {\n      return Promise.resolve(false);\n    }\n\n    if (reason.statusCode === 401) {\n      return Promise.resolve(true);\n    }\n\n    return Promise.resolve(false);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAIA,IAAAA,SAAA,GAAAC,OAAA;AAA6C,SAAAC,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,OAAAC,gBAAA,CAAAC,OAAA,EAAAN,OAAA,GAAAO,MAAA,MAAAN,yBAAA,QAAAO,SAAA,OAAAH,gBAAA,CAAAC,OAAA,QAAAG,WAAA,EAAAF,MAAA,GAAAG,kBAAA,CAAAN,KAAA,EAAAO,SAAA,EAAAH,SAAA,YAAAD,MAAA,GAAAH,KAAA,CAAAQ,KAAA,OAAAD,SAAA,gBAAAE,2BAAA,CAAAP,OAAA,QAAAC,MAAA;AAAA,SAAAL,0BAAA,eAAAY,OAAA,qBAAAJ,kBAAA,oBAAAA,kBAAA,CAAAK,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAV,kBAAA,CAAAO,OAAA,8CAAAI,CAAA;AAE7C;AACA;AACA;AAFA,IAGqBC,eAAe,0BAAAC,YAAA;EAAA,IAAAC,UAAA,CAAAlB,OAAA,EAAAgB,eAAA,EAAAC,YAAA;EAAA,IAAAE,MAAA,GAAA1B,YAAA,CAAAuB,eAAA;EAAA,SAAAA,gBAAA;IAAA,IAAAI,gBAAA,CAAApB,OAAA,QAAAgB,eAAA;IAAA,OAAAG,MAAA,CAAAb,KAAA,OAAAD,SAAA;EAAA;EAAA,IAAAgB,aAAA,CAAArB,OAAA,EAAAgB,eAAA;IAAAM,GAAA;IAAAC,KAAA;IAQlC;AACF;AACA;AACA;AACA;IACE,SAAAC,UAAUC,OAAO,EAAE;MAAA,IAAAC,KAAA;MACjBD,OAAO,CAACE,OAAO,GAAGF,OAAO,CAACE,OAAO,IAAI,CAAC,CAAC;;MAEvC;MACA,IAAI,eAAe,IAAIF,OAAO,CAACE,OAAO,IAAI,MAAM,IAAIF,OAAO,EAAE;QAC3D;QACA;QACA,IAAI,CAACA,OAAO,CAACE,OAAO,CAACC,aAAa,EAAE;UAClC,IAAAC,eAAA,CAAA7B,OAAA,EAAuByB,OAAO,CAACE,OAAO,EAAE,eAAe,CAAC;QAC1D;QAEA,OAAOG,QAAA,CAAA9B,OAAA,CAAQ+B,OAAO,CAACN,OAAO,CAAC;MACjC;MAEA,OAAO,IAAI,CAACO,mBAAmB,CAACP,OAAO,CAAC,CAACQ,IAAI,CAAC,UAACC,QAAQ,EAAK;QAC1D,IAAI,CAACA,QAAQ,EAAE;UACb,OAAOT,OAAO;QAChB;QAEA,OAAOC,KAAI,CAACS,KAAK,CAACC,WAAW,CAACC,YAAY,EAAE,CAACJ,IAAI,CAAC,UAACK,KAAK,EAAK;UAC3Db,OAAO,CAACE,OAAO,CAACC,aAAa,GAAGU,KAAK,CAACC,QAAQ,EAAE;UAEhD,OAAOd,OAAO;QAChB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAH,GAAA;IAAAC,KAAA,EAMA,SAAAS,oBAAoBP,OAAO,EAAE;MAAA,IAAAe,MAAA;MAC3B;MACA,IAAIf,OAAO,CAACgB,aAAa,KAAK,KAAK,EAAE;QACnC,OAAOX,QAAA,CAAA9B,OAAA,CAAQ+B,OAAO,CAAC,KAAK,CAAC;MAC/B;;MAEA;MACA,IAAI,CAAC,IAAI,CAACI,KAAK,CAACO,QAAQ,CAACC,QAAQ,EAAE;QACjC,OAAOb,QAAA,CAAA9B,OAAA,CAAQ+B,OAAO,CAAC,KAAK,CAAC;MAC/B;;MAEA;MACA,IAAOY,QAAQ,GAAI,IAAI,CAACR,KAAK,CAACO,QAAQ,CAA/BC,QAAQ;;MAEf;MACA,IAAMC,OAAO,GAAGD,QAAQ,CAACE,iBAAiB,CAACpB,OAAO,CAACqB,GAAG,IAAI,EAAE,CAAC;MAC7D,IAAAC,IAAA,GAAeH,OAAO,IAAI,CAAC,CAAC;QAArBI,IAAI,GAAAD,IAAA,CAAJC,IAAI;MACX,IAAOC,QAAQ,GAASxB,OAAO,CAAxBwB,QAAQ;QAAEH,GAAG,GAAIrB,OAAO,CAAdqB,GAAG;MACpB,IAAMI,OAAO,GAAGzB,OAAO,CAACyB,OAAO,IAAIzB,OAAO,CAAC0B,GAAG;;MAE9C;MACA,IAAKD,OAAO,IAAIA,OAAO,KAAK,KAAK,IAAMF,IAAI,IAAIA,IAAI,KAAK,KAAM,EAAE;QAC9D,IAAKC,QAAQ,IAAIA,QAAQ,CAACG,QAAQ,CAAC,SAAS,CAAC,IAAMN,GAAG,IAAIA,GAAG,CAACM,QAAQ,CAAC,SAAS,CAAE,EAAE;UAClF,OAAOtB,QAAA,CAAA9B,OAAA,CAAQ+B,OAAO,CAAC,KAAK,CAAC;QAC/B;QAEA,OAAOD,QAAA,CAAA9B,OAAA,CAAQ+B,OAAO,CAAC,IAAI,CAAC;MAC9B;;MAEA;MACA,IACEY,QAAQ,CAACU,eAAe,IACxBV,QAAQ,CAACW,iBAAiB,EAAE,IAC5BR,GAAG,IACHH,QAAQ,CAACY,kBAAkB,CAACT,GAAG,CAAC,EAChC;QACA,OAAOhB,QAAA,CAAA9B,OAAA,CAAQ+B,OAAO,CAAC,IAAI,CAAC;MAC9B;;MAEA;MACA,OAAOY,QAAQ,CACZa,cAAc,CAAC;QAACR,IAAI,EAAEE,OAAO;QAAEO,GAAG,EAAEX;MAAG,CAAC,CAAC,CACzCb,IAAI,CAAC,UAACyB,WAAW,EAAK;QACrB;QACA,IAAIf,QAAQ,CAACE,iBAAiB,CAACa,WAAW,CAAC,EAAE;UAC3C,OAAO,IAAI;QACb;;QAEA;QACA,OAAO,KAAK;MACd,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;QAChBpB,MAAI,CAACL,KAAK,CAAC0B,MAAM,CAACC,IAAI,CACpB,gEAAgE,EAChEF,KAAK,CACN;QAED,OAAO,KAAK;MACd,CAAC,CAAC;IACN;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAtC,GAAA;IAAAC,KAAA,EAMA,SAAAwC,gBAAgBtC,OAAO,EAAEuC,MAAM,EAAE;MAAA,IAAAC,MAAA;MAC/B,OAAO,IAAI,CAACC,mBAAmB,CAACF,MAAM,EAAEvC,OAAO,CAAC,CAACQ,IAAI,CAAC,UAACiC,mBAAmB,EAAK;QAC7E,IAAIA,mBAAmB,EAAE;UACvBD,MAAI,CAAC9B,KAAK,CAAC0B,MAAM,CAACM,IAAI,CAAC,kDAAkD,CAAC;UAE1E,IAAIH,MAAM,CAACvC,OAAO,CAACE,OAAO,EAAE;YAC1B,IAAAE,eAAA,CAAA7B,OAAA,EAAuBgE,MAAM,CAACvC,OAAO,CAACE,OAAO,EAAE,eAAe,CAAC;UACjE;UAEA,IAAIsC,MAAI,CAAC9B,KAAK,CAACC,WAAW,CAACgC,UAAU,EAAE;YACrC,OAAOH,MAAI,CAAC9B,KAAK,CAACC,WAAW,CAACiC,OAAO,EAAE,CAACpC,IAAI,CAAC;cAAA,OAAMgC,MAAI,CAACK,MAAM,CAAC7C,OAAO,CAAC;YAAA,EAAC;UAC1E;QACF;QAEA,OAAOK,QAAA,CAAA9B,OAAA,CAAQuE,MAAM,CAACP,MAAM,CAAC;MAC/B,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;EAJE;IAAA1C,GAAA;IAAAC,KAAA,EAKA,SAAA+C,OAAO7C,OAAO,EAAE;MACd,IAAIA,OAAO,CAAC+C,WAAW,EAAE;QACvB/C,OAAO,CAAC+C,WAAW,IAAI,CAAC;MAC1B,CAAC,MAAM;QACL/C,OAAO,CAAC+C,WAAW,GAAG,CAAC;MACzB;MAEA,IAAI/C,OAAO,CAAC+C,WAAW,GAAG,IAAI,CAACrC,KAAK,CAACsC,MAAM,CAACC,wBAAwB,EAAE;QACpE,IAAI,CAACvC,KAAK,CAAC0B,MAAM,CAACD,KAAK,uBAAAe,MAAA,CACC,IAAI,CAACxC,KAAK,CAACsC,MAAM,CAACC,wBAAwB,sBACjE;QAED,OAAO5C,QAAA,CAAA9B,OAAA,CAAQuE,MAAM,CACnB,IAAIK,KAAK,iBAAAD,MAAA,CAAiB,IAAI,CAACxC,KAAK,CAACsC,MAAM,CAACC,wBAAwB,sBAAmB,CACxF;MACH;MAEA,IAAI,CAACvC,KAAK,CAAC0B,MAAM,CAACM,IAAI,4BAAAQ,MAAA,CAA4BlD,OAAO,CAAC+C,WAAW,WAAQ;MAE7E,OAAO,IAAI,CAACrC,KAAK,CAAC0C,OAAO,CAACpD,OAAO,CAAC;IACpC;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAH,GAAA;IAAAC,KAAA,EAOA,SAAA2C,oBAAoBF,MAAM,EAAEvC,OAAO,EAAE;MACnC,IAAIA,OAAO,IAAIA,OAAO,CAACqD,wBAAwB,KAAK,KAAK,EAAE;QACzD,OAAOhD,QAAA,CAAA9B,OAAA,CAAQ+B,OAAO,CAAC,KAAK,CAAC;MAC/B;MAEA,IAAIiC,MAAM,CAACe,UAAU,KAAK,GAAG,EAAE;QAC7B,OAAOjD,QAAA,CAAA9B,OAAA,CAAQ+B,OAAO,CAAC,IAAI,CAAC;MAC9B;MAEA,OAAOD,QAAA,CAAA9B,OAAA,CAAQ+B,OAAO,CAAC,KAAK,CAAC;IAC/B;EAAC;IAAAT,GAAA;IAAAC,KAAA;IA9KD;AACF;AACA;IACE,SAAAyD,OAAA,EAAgB;MACd,OAAO,IAAIhE,eAAe,CAAC;QAACmB,KAAK,EAAE;MAAI,CAAC,CAAC;IAC3C;EAAC;EAAA,OAAAnB,eAAA;AAAA,EAN0CiE,qBAAW;AAAAC,OAAA,CAAAlF,OAAA,GAAAgB,eAAA"}