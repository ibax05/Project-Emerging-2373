{"version":3,"names":["OLDER","exports","NEWER","MID","INITIAL","ACTIVITY_TYPES","REPLY","EDIT","REACTION","REACTION_SELF","ROOT","CREATE","TOMBSTONE","DELETE","REPLY_EDIT","REACTION_SUMMARY","REACTION_SELF_SUMMARY","ADD","getActivityType","activity","_activity$parent","_activity$parent2","parent","type","verb","getPublishedDate","arguments","length","undefined","Date","published","getTime","isNewer","activity1","activity2","sortActivitiesByPublishedDate","activities","_sortBy2","default","getParentId","_activity$parent3","id","isRootActivity","act","isReplyActivity","isEditActivity","isCreateActivity","isDeleteActivity","sanitizeActivity","final","_objectSpread","reaction","reactionSelf","replies","getIsActivityOrphaned","getIsReplyEditActivity","parentId","parentActivity","determineActivityType","initialType","isReplyEditActivity","createRootActivity","createReplyActivity","replyAct","replyParent","createEditActivity","editActivity","editActParentObj","parentAct","joinedEditAct","editParent","object","createReplyEditActivity","parentReplyAct","joinedReplyEditActivity"],"sources":["activities.js"],"sourcesContent":["import {sortBy} from 'lodash';\n\nexport const OLDER = 'older';\nexport const NEWER = 'newer';\nexport const MID = 'mid';\nexport const INITIAL = 'initial';\n\nexport const ACTIVITY_TYPES = {\n  REPLY: 'REPLY',\n  EDIT: 'EDIT',\n  REACTION: 'REACTION',\n  REACTION_SELF: 'REACTION_SELF',\n  ROOT: 'ROOT',\n  CREATE: 'CREATE',\n  TOMBSTONE: 'TOMBSTONE',\n  DELETE: 'DELETE',\n  REPLY_EDIT: 'REPLY_EDIT',\n};\n\nconst REPLY = 'reply';\nconst EDIT = 'edit';\nconst REACTION_SUMMARY = 'reactionSummary';\nconst REACTION_SELF_SUMMARY = 'reactionSelfSummary';\nconst CREATE = 'create';\nconst TOMBSTONE = 'tombstone';\nconst DELETE = 'delete';\nconst ADD = 'add';\n\nexport const getActivityType = (activity) => {\n  if (activity.parent?.type === REPLY) {\n    return ACTIVITY_TYPES.REPLY;\n  }\n  if (activity.parent?.type === EDIT) {\n    return ACTIVITY_TYPES.EDIT;\n  }\n  if (activity.verb === ADD || activity.type === REACTION_SUMMARY) {\n    return ACTIVITY_TYPES.REACTION;\n  }\n  if (activity.type === REACTION_SELF_SUMMARY) {\n    return ACTIVITY_TYPES.REACTION_SELF;\n  }\n  if (activity.verb === CREATE) {\n    return ACTIVITY_TYPES.CREATE;\n  }\n  if (activity.verb === TOMBSTONE) {\n    return ACTIVITY_TYPES.TOMBSTONE;\n  }\n  if (activity.verb === DELETE) {\n    return ACTIVITY_TYPES.DELETE;\n  }\n\n  return ACTIVITY_TYPES.ROOT;\n};\n\nexport const getPublishedDate = (activity = {}) => new Date(activity.published).getTime();\n\n/**\n * @param {Object} activity1\n * @param {Object} activity2\n * @returns {boolean} true if first activity is newer than second\n */\nexport const isNewer = (activity1, activity2) =>\n  getPublishedDate(activity1) > getPublishedDate(activity2);\n\nexport const sortActivitiesByPublishedDate = (activities) =>\n  sortBy(activities, (activity) => getPublishedDate(activity));\n\nexport const getParentId = (activity) => activity?.parent?.id;\n\nexport const isRootActivity = (act) => getActivityType(act) === ACTIVITY_TYPES.ROOT;\nexport const isReplyActivity = (act) => getActivityType(act) === ACTIVITY_TYPES.REPLY;\nexport const isEditActivity = (act) => getActivityType(act) === ACTIVITY_TYPES.EDIT;\nexport const isCreateActivity = (act) => getActivityType(act) === ACTIVITY_TYPES.CREATE;\nexport const isDeleteActivity = (act) => getActivityType(act) === ACTIVITY_TYPES.DELETE;\n\nexport const sanitizeActivity = (activity) => {\n  const final = {...activity};\n\n  final.reaction = activity.reaction || {};\n  final.reactionSelf = activity.reactionSelf || {};\n\n  // replies will be spread in order beneath parent, no need to include on final objects\n  delete final.replies;\n\n  return final;\n};\n\nexport const getIsActivityOrphaned = (activity, activities) =>\n  activity.parent && activity.parent.id && !activities[activity.parent.id];\n\nconst getIsReplyEditActivity = (activity, activities) => {\n  const parentId = activity.parent.id;\n  const parentActivity = activities[parentId];\n\n  return parentActivity && isReplyActivity(parentActivity);\n};\n\nexport const determineActivityType = (activity, activities) => {\n  const initialType = getActivityType(activity);\n\n  // edits to a reply, while they are replies themselves, appear in every way as edits\n  // the only way to dermine their status as an edited reply is to find the original reply\n  if (initialType === ACTIVITY_TYPES.EDIT) {\n    const isReplyEditActivity = getIsReplyEditActivity(activity, activities);\n\n    return isReplyEditActivity ? ACTIVITY_TYPES.REPLY_EDIT : initialType;\n  }\n\n  return initialType;\n};\n\nexport const createRootActivity = (activity) => activity;\n\nexport const createReplyActivity = (activity) => {\n  const replyAct = {\n    ...activity,\n    replyParent: activity.parent,\n  };\n\n  return replyAct;\n};\n\nexport const createEditActivity = (editActivity, activities) => {\n  const editActParentObj = editActivity.parent;\n  const parentId = editActParentObj.id;\n  const parentAct = activities[parentId];\n\n  const joinedEditAct = {\n    ...parentAct,\n    id: editActivity.id,\n    parent: editActParentObj,\n    editParent: editActParentObj,\n    object: editActivity.object,\n    published: editActivity.published,\n  };\n\n  return joinedEditAct;\n};\n\n// takes an edit activity whose parent is a reply activity\nexport const createReplyEditActivity = (editActivity, activities) => {\n  const editActParentObj = editActivity.parent;\n  const parentId = editActParentObj.id;\n  const parentReplyAct = activities[parentId];\n\n  const joinedReplyEditActivity = {\n    ...parentReplyAct,\n    id: editActivity.id,\n    parent: editActParentObj,\n    editParent: editActParentObj,\n    replyParent: parentReplyAct.parent,\n    object: editActivity.object,\n    published: editActivity.published,\n  };\n\n  return joinedReplyEditActivity;\n};\n"],"mappings":";;;;;;;;;;;;;;;;;AAEO,IAAMA,KAAK,GAAG,OAAO;AAACC,OAAA,CAAAD,KAAA,GAAAA,KAAA;AACtB,IAAME,KAAK,GAAG,OAAO;AAACD,OAAA,CAAAC,KAAA,GAAAA,KAAA;AACtB,IAAMC,GAAG,GAAG,KAAK;AAACF,OAAA,CAAAE,GAAA,GAAAA,GAAA;AAClB,IAAMC,OAAO,GAAG,SAAS;AAACH,OAAA,CAAAG,OAAA,GAAAA,OAAA;AAE1B,IAAMC,cAAc,GAAG;EAC5BC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,UAAU;EACpBC,aAAa,EAAE,eAAe;EAC9BC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,QAAQ;EAChBC,SAAS,EAAE,WAAW;EACtBC,MAAM,EAAE,QAAQ;EAChBC,UAAU,EAAE;AACd,CAAC;AAACb,OAAA,CAAAI,cAAA,GAAAA,cAAA;AAEF,IAAMC,KAAK,GAAG,OAAO;AACrB,IAAMC,IAAI,GAAG,MAAM;AACnB,IAAMQ,gBAAgB,GAAG,iBAAiB;AAC1C,IAAMC,qBAAqB,GAAG,qBAAqB;AACnD,IAAML,MAAM,GAAG,QAAQ;AACvB,IAAMC,SAAS,GAAG,WAAW;AAC7B,IAAMC,MAAM,GAAG,QAAQ;AACvB,IAAMI,GAAG,GAAG,KAAK;AAEV,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,QAAQ,EAAK;EAAA,IAAAC,gBAAA,EAAAC,iBAAA;EAC3C,IAAI,EAAAD,gBAAA,GAAAD,QAAQ,CAACG,MAAM,cAAAF,gBAAA,uBAAfA,gBAAA,CAAiBG,IAAI,MAAKjB,KAAK,EAAE;IACnC,OAAOD,cAAc,CAACC,KAAK;EAC7B;EACA,IAAI,EAAAe,iBAAA,GAAAF,QAAQ,CAACG,MAAM,cAAAD,iBAAA,uBAAfA,iBAAA,CAAiBE,IAAI,MAAKhB,IAAI,EAAE;IAClC,OAAOF,cAAc,CAACE,IAAI;EAC5B;EACA,IAAIY,QAAQ,CAACK,IAAI,KAAKP,GAAG,IAAIE,QAAQ,CAACI,IAAI,KAAKR,gBAAgB,EAAE;IAC/D,OAAOV,cAAc,CAACG,QAAQ;EAChC;EACA,IAAIW,QAAQ,CAACI,IAAI,KAAKP,qBAAqB,EAAE;IAC3C,OAAOX,cAAc,CAACI,aAAa;EACrC;EACA,IAAIU,QAAQ,CAACK,IAAI,KAAKb,MAAM,EAAE;IAC5B,OAAON,cAAc,CAACM,MAAM;EAC9B;EACA,IAAIQ,QAAQ,CAACK,IAAI,KAAKZ,SAAS,EAAE;IAC/B,OAAOP,cAAc,CAACO,SAAS;EACjC;EACA,IAAIO,QAAQ,CAACK,IAAI,KAAKX,MAAM,EAAE;IAC5B,OAAOR,cAAc,CAACQ,MAAM;EAC9B;EAEA,OAAOR,cAAc,CAACK,IAAI;AAC5B,CAAC;AAACT,OAAA,CAAAiB,eAAA,GAAAA,eAAA;AAEK,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA;EAAA,IAAIN,QAAQ,GAAAO,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,OAAK,IAAIG,IAAI,CAACV,QAAQ,CAACW,SAAS,CAAC,CAACC,OAAO,EAAE;AAAA;;AAEzF;AACA;AACA;AACA;AACA;AAJA9B,OAAA,CAAAwB,gBAAA,GAAAA,gBAAA;AAKO,IAAMO,OAAO,GAAG,SAAVA,OAAOA,CAAIC,SAAS,EAAEC,SAAS;EAAA,OAC1CT,gBAAgB,CAACQ,SAAS,CAAC,GAAGR,gBAAgB,CAACS,SAAS,CAAC;AAAA;AAACjC,OAAA,CAAA+B,OAAA,GAAAA,OAAA;AAErD,IAAMG,6BAA6B,GAAG,SAAhCA,6BAA6BA,CAAIC,UAAU;EAAA,OACtD,IAAAC,QAAA,CAAAC,OAAA,EAAOF,UAAU,EAAE,UAACjB,QAAQ;IAAA,OAAKM,gBAAgB,CAACN,QAAQ,CAAC;EAAA,EAAC;AAAA;AAAClB,OAAA,CAAAkC,6BAAA,GAAAA,6BAAA;AAExD,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAIpB,QAAQ;EAAA,IAAAqB,iBAAA;EAAA,OAAKrB,QAAQ,aAARA,QAAQ,wBAAAqB,iBAAA,GAARrB,QAAQ,CAAEG,MAAM,cAAAkB,iBAAA,uBAAhBA,iBAAA,CAAkBC,EAAE;AAAA;AAACxC,OAAA,CAAAsC,WAAA,GAAAA,WAAA;AAEvD,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,GAAG;EAAA,OAAKzB,eAAe,CAACyB,GAAG,CAAC,KAAKtC,cAAc,CAACK,IAAI;AAAA;AAACT,OAAA,CAAAyC,cAAA,GAAAA,cAAA;AAC7E,IAAME,eAAe,GAAG,SAAlBA,eAAeA,CAAID,GAAG;EAAA,OAAKzB,eAAe,CAACyB,GAAG,CAAC,KAAKtC,cAAc,CAACC,KAAK;AAAA;AAACL,OAAA,CAAA2C,eAAA,GAAAA,eAAA;AAC/E,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIF,GAAG;EAAA,OAAKzB,eAAe,CAACyB,GAAG,CAAC,KAAKtC,cAAc,CAACE,IAAI;AAAA;AAACN,OAAA,CAAA4C,cAAA,GAAAA,cAAA;AAC7E,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIH,GAAG;EAAA,OAAKzB,eAAe,CAACyB,GAAG,CAAC,KAAKtC,cAAc,CAACM,MAAM;AAAA;AAACV,OAAA,CAAA6C,gBAAA,GAAAA,gBAAA;AACjF,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIJ,GAAG;EAAA,OAAKzB,eAAe,CAACyB,GAAG,CAAC,KAAKtC,cAAc,CAACQ,MAAM;AAAA;AAACZ,OAAA,CAAA8C,gBAAA,GAAAA,gBAAA;AAEjF,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAI7B,QAAQ,EAAK;EAC5C,IAAM8B,KAAK,GAAAC,aAAA,KAAO/B,QAAQ,CAAC;EAE3B8B,KAAK,CAACE,QAAQ,GAAGhC,QAAQ,CAACgC,QAAQ,IAAI,CAAC,CAAC;EACxCF,KAAK,CAACG,YAAY,GAAGjC,QAAQ,CAACiC,YAAY,IAAI,CAAC,CAAC;;EAEhD;EACA,OAAOH,KAAK,CAACI,OAAO;EAEpB,OAAOJ,KAAK;AACd,CAAC;AAAChD,OAAA,CAAA+C,gBAAA,GAAAA,gBAAA;AAEK,IAAMM,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAInC,QAAQ,EAAEiB,UAAU;EAAA,OACxDjB,QAAQ,CAACG,MAAM,IAAIH,QAAQ,CAACG,MAAM,CAACmB,EAAE,IAAI,CAACL,UAAU,CAACjB,QAAQ,CAACG,MAAM,CAACmB,EAAE,CAAC;AAAA;AAACxC,OAAA,CAAAqD,qBAAA,GAAAA,qBAAA;AAE3E,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIpC,QAAQ,EAAEiB,UAAU,EAAK;EACvD,IAAMoB,QAAQ,GAAGrC,QAAQ,CAACG,MAAM,CAACmB,EAAE;EACnC,IAAMgB,cAAc,GAAGrB,UAAU,CAACoB,QAAQ,CAAC;EAE3C,OAAOC,cAAc,IAAIb,eAAe,CAACa,cAAc,CAAC;AAC1D,CAAC;AAEM,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIvC,QAAQ,EAAEiB,UAAU,EAAK;EAC7D,IAAMuB,WAAW,GAAGzC,eAAe,CAACC,QAAQ,CAAC;;EAE7C;EACA;EACA,IAAIwC,WAAW,KAAKtD,cAAc,CAACE,IAAI,EAAE;IACvC,IAAMqD,mBAAmB,GAAGL,sBAAsB,CAACpC,QAAQ,EAAEiB,UAAU,CAAC;IAExE,OAAOwB,mBAAmB,GAAGvD,cAAc,CAACS,UAAU,GAAG6C,WAAW;EACtE;EAEA,OAAOA,WAAW;AACpB,CAAC;AAAC1D,OAAA,CAAAyD,qBAAA,GAAAA,qBAAA;AAEK,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAI1C,QAAQ;EAAA,OAAKA,QAAQ;AAAA;AAAClB,OAAA,CAAA4D,kBAAA,GAAAA,kBAAA;AAElD,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAI3C,QAAQ,EAAK;EAC/C,IAAM4C,QAAQ,GAAAb,aAAA,CAAAA,aAAA,KACT/B,QAAQ;IACX6C,WAAW,EAAE7C,QAAQ,CAACG;EAAM,EAC7B;EAED,OAAOyC,QAAQ;AACjB,CAAC;AAAC9D,OAAA,CAAA6D,mBAAA,GAAAA,mBAAA;AAEK,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,YAAY,EAAE9B,UAAU,EAAK;EAC9D,IAAM+B,gBAAgB,GAAGD,YAAY,CAAC5C,MAAM;EAC5C,IAAMkC,QAAQ,GAAGW,gBAAgB,CAAC1B,EAAE;EACpC,IAAM2B,SAAS,GAAGhC,UAAU,CAACoB,QAAQ,CAAC;EAEtC,IAAMa,aAAa,GAAAnB,aAAA,CAAAA,aAAA,KACdkB,SAAS;IACZ3B,EAAE,EAAEyB,YAAY,CAACzB,EAAE;IACnBnB,MAAM,EAAE6C,gBAAgB;IACxBG,UAAU,EAAEH,gBAAgB;IAC5BI,MAAM,EAAEL,YAAY,CAACK,MAAM;IAC3BzC,SAAS,EAAEoC,YAAY,CAACpC;EAAS,EAClC;EAED,OAAOuC,aAAa;AACtB,CAAC;;AAED;AAAApE,OAAA,CAAAgE,kBAAA,GAAAA,kBAAA;AACO,IAAMO,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIN,YAAY,EAAE9B,UAAU,EAAK;EACnE,IAAM+B,gBAAgB,GAAGD,YAAY,CAAC5C,MAAM;EAC5C,IAAMkC,QAAQ,GAAGW,gBAAgB,CAAC1B,EAAE;EACpC,IAAMgC,cAAc,GAAGrC,UAAU,CAACoB,QAAQ,CAAC;EAE3C,IAAMkB,uBAAuB,GAAAxB,aAAA,CAAAA,aAAA,KACxBuB,cAAc;IACjBhC,EAAE,EAAEyB,YAAY,CAACzB,EAAE;IACnBnB,MAAM,EAAE6C,gBAAgB;IACxBG,UAAU,EAAEH,gBAAgB;IAC5BH,WAAW,EAAES,cAAc,CAACnD,MAAM;IAClCiD,MAAM,EAAEL,YAAY,CAACK,MAAM;IAC3BzC,SAAS,EAAEoC,YAAY,CAACpC;EAAS,EAClC;EAED,OAAO4C,uBAAuB;AAChC,CAAC;AAACzE,OAAA,CAAAuE,uBAAA,GAAAA,uBAAA"}