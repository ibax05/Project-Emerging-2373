{"version":3,"names":["_toArray","_interopRequireDefault","require","KEY","_symbol","default","encryptTextProp","_curry2","name","ctx","key","object","transform","encryptJsonProp","transforms","toArray","encryptObject","undefined","_promise","resolve","objectType","concat","_capitalize2","encryptReaction2","reaction2","encryptConversation","conversation","webex","internal","encryption","kms","createUnboundKeys","count","then","keys","k","_isArray2","_has2","kmsMessage","keyUris","includes","uri","push","all","activities","items","reduce","p","activity","encryptionKeyUrl","defaultActivityEncryptionKeyUrl","encryptActivity","_activity$object","created","verb","encryptVerbActivity","maybeEncryptTarget","target","conversationUrl","url","reject","Error","get","updateKey","updateKeyActivity","resource","kmsResourceObjectUrl","logger","warn","prepareActivityKmsMessage","_get2","kro","forEach","replace","keyUrl","_deleteProperty","encryptVerbActivityWithKey","direction","fn","encryptAddActivity","encryptAssignActivity","alias","encryptCreateActivity","encryptPostActivity","encryptShareActivity","encryptCardactionActivity","encryptUpdateActivity","encryptUpdateKeyActivity","encryptComment","comment","encryptContent","content","promises","files","map","item","encryptFile","file","image","scr","encryptSubmit","submit","encryptImageURI","imageURI","encryptPropContent","encryptPropDisplayName","encryptPropInputs","encryptPropLocation","encryptPropScr","encryptScr","encryptText","_stringify","ciphertext","exports"],"sources":["encryption-transforms.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {capitalize, curry, get, has, isArray} from 'lodash';\n\nimport toArray from './to-array';\n\nconst KEY = Symbol('KEY');\n\nconst encryptTextProp = curry((name, ctx, key, object) =>\n  ctx.transform('encryptTextProp', name, key, object)\n);\n\nconst encryptJsonProp = curry((name, ctx, key, object) =>\n  ctx.transform('encryptJsonProp', name, key, object)\n);\n\n// eslint-disable-next-line import/prefer-default-export\nexport const transforms = toArray('outbound', {\n  encryptObject(ctx, key, object) {\n    if (!object) {\n      object = key;\n      key = undefined;\n    }\n\n    if (!object) {\n      return Promise.resolve();\n    }\n\n    if (!object.objectType) {\n      return Promise.resolve();\n    }\n\n    if (key === false) {\n      return Promise.resolve();\n    }\n\n    return ctx.transform(`encrypt${capitalize(object.objectType)}`, key, object);\n  },\n\n  encryptReaction2(ctx, key, reaction2) {\n    return ctx.transform('encryptPropDisplayName', key, reaction2);\n  },\n\n  encryptConversation(ctx, key, conversation) {\n    if (key === false) {\n      return Promise.resolve();\n    }\n\n    return Promise.resolve(\n      key || ctx.webex.internal.encryption.kms.createUnboundKeys({count: 1})\n    ).then((keys) => {\n      const k = isArray(keys) ? keys[0] : keys;\n\n      if (\n        has(conversation, 'kmsMessage.keyUris') &&\n        !conversation.kmsMessage.keyUris.includes(k.uri)\n      ) {\n        conversation.kmsMessage.keyUris.push(k.uri);\n      }\n\n      return Promise.all([\n        // too many implicit returns on the same line is difficult to interpret\n        // eslint-disable-next-line arrow-body-style\n        has(conversation, 'activities.items') &&\n          conversation.activities.items.reduce((p, activity) => {\n            // eslint-disable-next-line max-nested-callbacks\n            return p.then(() => ctx.transform('encryptObject', k, activity));\n          }, Promise.resolve()),\n        ctx.transform('encryptPropDisplayName', k, conversation),\n      ]).then(() => {\n        conversation.encryptionKeyUrl = k.uri || k;\n        // we only want to set the defaultActivityEncryptionKeyUrl if we've\n        // bound a new key\n        if (!key) {\n          conversation.defaultActivityEncryptionKeyUrl =\n            conversation.defaultActivityEncryptionKeyUrl || k.uri || k;\n        }\n      });\n    });\n  },\n\n  encryptActivity(ctx, key, activity) {\n    // Activity is already encrypted\n    if (activity.encryptionKeyUrl || activity.object?.created === 'True') {\n      return Promise.resolve();\n    }\n\n    return ctx.transform(`encrypt${capitalize(activity.verb)}Activity`, key, activity).then(() => {\n      key = key || activity[KEY];\n\n      return ctx.transform('prepareActivityKmsMessage', key, activity);\n    });\n  },\n\n  encryptVerbActivity(ctx, key, activity) {\n    return ctx\n      .transform('maybeEncryptTarget', key, activity)\n      .then(() => {\n        key = key || activity[KEY];\n      })\n      .then(() => ctx.transform('encryptObject', key, activity.object));\n  },\n\n  maybeEncryptTarget(ctx, key, activity) {\n    // This isn't quite right; if we just go by key, we have no guarantee that\n    // we have a proper KRO available for add activities\n    if (key) {\n      return Promise.resolve();\n    }\n\n    if (\n      has(activity, 'target.defaultActivityEncryptionKeyUrl') &&\n      activity.target.defaultActivityEncryptionKeyUrl &&\n      has(activity, 'target.kmsResourceObjectUrl')\n    ) {\n      activity[KEY] = key || activity.target.defaultActivityEncryptionKeyUrl;\n\n      return Promise.resolve();\n    }\n\n    const conversationUrl = activity.target && activity.target.url;\n\n    if (!conversationUrl) {\n      return Promise.reject(\n        new Error(\n          \"Cannot determine encryption key for activity's conversation; no key url or conversation url provided\"\n        )\n      );\n    }\n\n    return ctx.webex.internal.conversation.get({url: conversationUrl}).then((conversation) => {\n      if (!conversation.defaultActivityEncryptionKeyUrl) {\n        return ctx.webex.internal.conversation.updateKey(conversation).then((updateKeyActivity) => {\n          if (updateKeyActivity.kmsMessage.resource) {\n            activity.target.kmsResourceObjectUrl = updateKeyActivity.kmsMessage.resource.uri;\n          }\n          activity[KEY] = activity.target.defaultActivityEncryptionKeyUrl =\n            updateKeyActivity.object.defaultActivityEncryptionKeyUrl;\n        });\n      }\n\n      if (!activity.target.defaultActivityEncryptionKeyUrl) {\n        ctx.webex.logger.warn(\n          'plugin-conversation: downloaded conversation to determine its defaultActivityEncryptionKeyUrl; make sure to pass all encryption related properties when calling Webex.conversation methods.'\n        );\n      }\n\n      if (!activity.target.kmsResourceObjectUrl) {\n        ctx.webex.logger.warn(\n          'plugin-conversation: downloaded conversation to determine its kmsResourceObjectUrl; make sure to pass all encryption related properties when calling Webex.conversation methods.'\n        );\n      }\n\n      activity[KEY] = activity.target.defaultActivityEncryptionKeyUrl =\n        conversation.defaultActivityEncryptionKeyUrl;\n      activity.target.kmsResourceObjectUrl = conversation.kmsResourceObjectUrl;\n\n      return Promise.resolve();\n    });\n  },\n\n  prepareActivityKmsMessage(ctx, key, activity) {\n    if (activity.kmsMessage) {\n      if (!key && activity.verb === 'delete') {\n        key = get(activity, 'target.defaultActivityEncryptionKeyUrl');\n      }\n\n      if (\n        !key &&\n        activity.verb === 'updateKey' &&\n        has(activity, 'object.defaultActivityEncryptionKeyUrl')\n      ) {\n        key = get(activity, 'object.defaultActivityEncryptionKeyUrl');\n      }\n\n      if (\n        !key &&\n        activity.verb === 'leave' &&\n        has(activity, 'target.defaultActivityEncryptionKeyUrl')\n      ) {\n        key = get(activity, 'target.defaultActivityEncryptionKeyUrl');\n      }\n\n      if (key) {\n        const kro = activity.target.kmsResourceObjectUrl;\n\n        ['uri', 'resourceUri'].forEach((k) => {\n          if (activity.kmsMessage[k] && !kro && activity.kmsMessage[k].includes('<KRO>')) {\n            throw new Error('encrypter: cannot determine kro');\n          }\n\n          if (activity.kmsMessage[k]) {\n            activity.kmsMessage[k] = activity.kmsMessage[k].replace('<KRO>', kro);\n            // key may be a key or a key url\n            activity.kmsMessage[k] = activity.kmsMessage[k].replace('<KEYURL>', key.keyUrl || key);\n          }\n        });\n      }\n      // If we made it this far and still don't have an encryption key, assume\n      // this is a conversation that is not encrypted and we're performing an\n      // action that should not encrypt it (e.g. `leave`)\n      else {\n        Reflect.deleteProperty(activity, 'kmsMessage');\n      }\n    }\n  },\n\n  encryptVerbActivityWithKey: {\n    direction: 'outbound',\n    fn(ctx, key, activity) {\n      return ctx.transform('encryptVerbActivity', key, activity).then(() => {\n        key = key || activity[KEY];\n        activity.encryptionKeyUrl = key.uri || key;\n      });\n    },\n  },\n\n  encryptAddActivity: {\n    direction: 'outbound',\n    fn(ctx, key, activity) {\n      if (has(activity, 'object.objectType') && activity.object.objectType === 'reaction2') {\n        return ctx.transform('encryptVerbActivityWithKey', key, activity);\n      }\n\n      return ctx.transform('encryptVerbActivity', key, activity);\n    },\n  },\n\n  encryptAssignActivity: {\n    direction: 'outbound',\n    alias: 'encryptVerbActivityWithKey',\n  },\n\n  encryptCreateActivity: {\n    direction: 'outbound',\n    alias: 'encryptVerbActivity',\n  },\n\n  encryptPostActivity: {\n    direction: 'outbound',\n    alias: 'encryptVerbActivityWithKey',\n  },\n\n  encryptShareActivity: {\n    direction: 'outbound',\n    alias: 'encryptVerbActivityWithKey',\n  },\n\n  encryptCardactionActivity: {\n    direction: 'outbound',\n    alias: 'encryptVerbActivityWithKey',\n  },\n\n  encryptUpdateActivity: {\n    direction: 'outbound',\n    alias: 'encryptVerbActivityWithKey',\n  },\n\n  encryptUpdateKeyActivity: {\n    direction: 'outbound',\n    alias: 'encryptVerbActivity',\n  },\n\n  encryptComment(ctx, key, comment) {\n    return Promise.all([\n      ctx.transform('encryptPropDisplayName', key, comment),\n      ctx.transform('encryptPropContent', key, comment),\n    ]);\n  },\n\n  encryptContent(ctx, key, content) {\n    const promises = content.files.items.map((item) => ctx.transform('encryptObject', key, item));\n\n    promises.push(ctx.transform('encryptPropContent', key, content));\n    promises.push(ctx.transform('encryptPropDisplayName', key, content));\n\n    return Promise.all(promises);\n  },\n\n  encryptFile(ctx, key, file) {\n    if (file.image && !file.image.scr) {\n      return Promise.reject(new Error('`file.image` must have an `scr`'));\n    }\n\n    return Promise.all([\n      ctx.transform('encryptPropScr', key, file),\n      ctx.transform('encryptPropDisplayName', key, file),\n      ctx.transform('encryptPropContent', key, file),\n      file.image && ctx.transform('encryptPropScr', key, file.image),\n    ]);\n  },\n\n  encryptSubmit(ctx, key, submit) {\n    return ctx.transform('encryptPropInputs', key, submit);\n  },\n\n  // TODO is this used for anything other than the now-removed stickies service?\n  encryptImageURI(ctx, key, imageURI) {\n    return ctx.transform('encryptPropLocation', key, imageURI);\n  },\n\n  encryptPropContent: encryptTextProp('content'),\n\n  encryptPropDisplayName: encryptTextProp('displayName'),\n\n  encryptPropInputs: encryptJsonProp('inputs'),\n\n  encryptPropLocation: encryptTextProp('location'),\n\n  encryptPropScr(ctx, key, object) {\n    if (!object.scr) {\n      return Promise.resolve();\n    }\n\n    return ctx.webex.internal.encryption.encryptScr(key, object.scr).then((scr) => {\n      object.scr = scr;\n    });\n  },\n\n  encryptJsonProp(ctx, name, key, object) {\n    if (!object[name]) {\n      return Promise.resolve();\n    }\n\n    return ctx.webex.internal.encryption\n      .encryptText(key.uri || key, JSON.stringify(object[name]))\n      .then((ciphertext) => {\n        object[name] = ciphertext;\n      });\n  },\n\n  encryptTextProp(ctx, name, key, object) {\n    if (!object[name]) {\n      return Promise.resolve();\n    }\n\n    return ctx.webex.internal.encryption\n      .encryptText(key.uri || key, object[name])\n      .then((ciphertext) => {\n        object[name] = ciphertext;\n      });\n  },\n});\n"],"mappings":"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"}