{"version":3,"names":["_querystring","_interopRequireDefault","require","_webexCore","_common","ownKeys","object","enumerableOnly","keys","_Object$keys","_Object$getOwnPropertySymbols","symbols","filter","sym","_Object$getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","Object","forEach","key","_defineProperty2","default","_Object$getOwnPropertyDescriptors","_Object$defineProperties","_Object$defineProperty","Space","WebexPlugin","extend","namespace","list","webex","request","method","api","resource","then","res","body","items","get","space","undefined","spaceId","id","identity","_promise","reject","Error","concat","join","options","passType","pass","type","deviceUrl","internal","device","url","data","verificationInitiation","uri","leave","removeAllDevices","params","base64","toBase64Url","querystring","stringify","verifyOccupant","occupantId","getCurrentBindings","bindConversation","_this","conversation","kmsResourceObjectUrl","kmsMessage","resourceUri","userIds","conversationUrl","_bindConversation","resolve","encodedDeviceUrl","encode","bindingCleanupAfterCall","unbindConversation","_this2","parameters","authId","encryption","kms","prepareRequest","req","wrapped","deleteBinding","_this3","bindingId","version","_default","exports"],"sources":["space.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport querystring from 'querystring';\n\nimport {WebexPlugin} from '@webex/webex-core';\nimport {base64} from '@webex/common';\n\n/**\n * @class\n * @extends {Lyra}\n * @memberof Lyra\n */\nconst Space = WebexPlugin.extend({\n  namespace: 'Lyra',\n\n  /**\n   * Lists lyra spaces associated with user\n   *\n   * @returns {Promise<Array>} spaces\n   */\n  list() {\n    return this.webex\n      .request({\n        method: 'GET',\n        api: 'lyra',\n        resource: '/spaces',\n      })\n      .then((res) => res.body.items);\n  },\n\n  /**\n   * Retrieves a lyra space info\n   * @param {Types~LyraSpace} space\n   * @param {string} space.id\n   * @param {string} space.identity.id\n   * @returns {Promise<LyraSpace>} response body\n   */\n  get(space = {}) {\n    const spaceId = space.id || (space.identity && space.identity.id);\n\n    if (!spaceId) {\n      return Promise.reject(new Error('space.id is required'));\n    }\n\n    return this.webex\n      .request({\n        method: 'GET',\n        api: 'lyra',\n        resource: `/spaces/${spaceId}`,\n      })\n      .then((res) => res.body);\n  },\n\n  /**\n   * Joins a lyra space, update every 10 minutes to keep alive for MANUAL\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @param {object} options\n   * @param {string} options.passType\n   * @param {string} options.data additional data such as proof for ultrasound\n   * @param {string} options.uri use a custom uri\n   * @returns {Promise}\n   */\n  join(space, options) {\n    options = {\n      passType: 'MANUAL',\n      ...options,\n    };\n\n    const body = {\n      pass: {\n        type: options.passType,\n      },\n      deviceUrl: this.webex.internal.device.url,\n    };\n\n    if (options.data) {\n      body.pass.data = options.data;\n    }\n\n    if (options.verificationInitiation) {\n      body.verificationInitiation = options.verificationInitiation;\n    }\n\n    // if options.uri is available use it, since that would have the\n    // complete lyra service URL\n    if (options.uri) {\n      return this.webex.request({\n        method: 'PUT',\n        uri: options.uri,\n        body,\n      });\n    }\n\n    return this.webex.request({\n      method: 'PUT',\n      api: 'lyra',\n      resource: `${space.url}/occupants/@me`,\n      body,\n    });\n  },\n\n  /**\n   * Leaves a lyra space\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @param {object} options\n   * @param {boolean} options.removeAllDevices remove all devices of current user also\n   * @returns {Promise}\n   */\n  leave(space, options = {}) {\n    // all devices are removed by default (when deviceUrl is not supplied)\n    let uri = `${space.url}/occupants/@me`;\n\n    if (!options.removeAllDevices) {\n      const params = {\n        deviceUrl: base64.toBase64Url(this.webex.internal.device.url),\n      };\n\n      uri += `?${querystring.stringify(params)}`;\n    }\n\n    return this.webex.request({\n      method: 'DELETE',\n      api: 'lyra',\n      resource: uri,\n    });\n  },\n\n  /**\n   * Verifies a space occupant (to be used by the lyra device)\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @param {string} occupantId id of user to verify\n   * @returns {Promise}\n   */\n  verifyOccupant(space, occupantId) {\n    const body = {\n      pass: {\n        type: 'VERIFICATION',\n      },\n    };\n\n    return this.webex.request({\n      method: 'PUT',\n      uri: `${space.url}/occupants/${occupantId}`,\n      body,\n    });\n  },\n\n  /**\n   * Gets the state of bindings in this Lyra space\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @returns {Promise<LyraBindings>} bindings response body\n   */\n  getCurrentBindings(space) {\n    return this.webex\n      .request({\n        method: 'GET',\n        uri: `${space.url}/bindings`,\n      })\n      .then((res) => res.body);\n  },\n\n  /**\n   * Binds a conversation to lyra space\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @param {string} space.id\n   * @param {string} space.identity.id\n   * @param {Types~Conversation} conversation\n   * @param {string} conversation.kmsResourceObjectUrl\n   * @param {string} conversation.url\n   * @param {object} options\n   * @param {boolean} options.uri complete lyra service URL\n   * @returns {Promise<LyraBindings>} bindings response body\n   */\n  bindConversation(space = {}, conversation = {}, options = {}) {\n    const spaceId = space.id || (space.identity && space.identity.id);\n\n    if (!space.url) {\n      return Promise.reject(new Error('space.url is required'));\n    }\n\n    if (!spaceId) {\n      return Promise.reject(new Error('space.id is required'));\n    }\n\n    if (!conversation.kmsResourceObjectUrl) {\n      return Promise.reject(new Error('conversation.kmsResourceObjectUrl is required'));\n    }\n\n    if (!conversation.url) {\n      return Promise.reject(new Error('conversation.url is required'));\n    }\n\n    const body = {\n      kmsMessage: {\n        method: 'create',\n        uri: '/authorizations',\n        resourceUri: `${conversation.kmsResourceObjectUrl}`,\n        userIds: [spaceId],\n      },\n      conversationUrl: conversation.url,\n    };\n\n    const request = {\n      method: 'POST',\n      body,\n    };\n\n    // if options.uri is available use it, since that would have the\n    // complete lyra service URL\n    if (options.uri) {\n      request.uri = options.uri;\n    } else {\n      request.api = 'lyra';\n      request.resource = `${space.url}/bindings`;\n    }\n\n    return this._bindConversation(spaceId)\n      .then(() => this.webex.request(request))\n      .then((res) => res.body);\n  },\n\n  /**\n   * Binds a conversation to lyra space by posting capabilities to Lyra.\n   *\n   * Lyra no longer automatically enables binding for a space containing a device with type \"SPARK_BOARD\".\n   * Webexboard now is running the CE code stack which supports posting of capabilities to Lyra.\n   * @param {String} spaceId space ID\n   * @returns {Promise<LyraBindings>} bindings response body\n   */\n  _bindConversation(spaceId) {\n    // Skip until we can bind a conversation to lyra space by posting capabilities to Lyra.\n    /* eslint no-unreachable: 1 */\n    return Promise.resolve();\n\n    // PUT /lyra/api/v1/spaces/{spaceId}/devices/{encodedDeviceUrl}/capabilities\n    const encodedDeviceUrl = base64.encode(this.webex.internal.device.url);\n    const resource = `spaces/${spaceId}/devices/${encodedDeviceUrl}/capabilities`;\n\n    return this.webex.request({\n      method: 'PUT',\n      api: 'lyra',\n      resource,\n      body: {\n        bindingCleanupAfterCall: true,\n      },\n    });\n  },\n\n  /**\n   * Removes binding between a conversation and a lyra space using conversation\n   * url\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @param {string} space.id\n   * @param {string} space.identity.id\n   * @param {Types~Conversation} conversation\n   * @param {string} conversation.kmsResourceObjectUrl\n   * @param {string} conversation.url\n   * @param {object} options\n   * @param {boolean} options.uri complete lyra service URL\n   * @returns {Promise<LyraBindings>} bindings response body\n   */\n  unbindConversation(space = {}, conversation = {}, options = {}) {\n    const spaceId = space.id || (space.identity && space.identity.id);\n\n    if (!space.url) {\n      return Promise.reject(new Error('space.url is required'));\n    }\n\n    if (!spaceId) {\n      return Promise.reject(new Error('space.id is required'));\n    }\n\n    if (!conversation.url) {\n      return Promise.reject(new Error('conversation.url is required'));\n    }\n\n    if (!conversation.kmsResourceObjectUrl) {\n      return Promise.reject(new Error('conversation.kmsResourceObjectUrl is required'));\n    }\n\n    const parameters = {\n      kmsMessage: {\n        method: 'delete',\n        uri: `${conversation.kmsResourceObjectUrl}/authorizations?${querystring.stringify({\n          authId: spaceId,\n        })}`,\n      },\n      conversationUrl: base64.toBase64Url(conversation.url),\n    };\n\n    return this.webex.internal.encryption.kms.prepareRequest(parameters.kmsMessage).then((req) => {\n      parameters.kmsMessage = req.wrapped;\n      // if options.uri is available use it, since that would have the\n      // complete lyra service URL\n      if (options.uri) {\n        return this.webex.request({\n          method: 'DELETE',\n          uri: `${options.uri}?${querystring.stringify(parameters)}`,\n        });\n      }\n\n      return this.webex.request({\n        method: 'DELETE',\n        api: 'lyra',\n        resource: `${space.url}/bindings?${querystring.stringify(parameters)}`,\n      });\n    });\n  },\n\n  /**\n   * Delete a binding using binding id\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @param {string} space.identity.id\n   * @param {object} options\n   * @param {string} options.kmsResourceObjectUrl\n   * @param {string} options.bindingId\n   * @returns {Promise<LyraBindings>} bindings response body\n   */\n  deleteBinding(space = {}, options = {}) {\n    const spaceId = space.id || (space.identity && space.identity.id);\n\n    if (!space.url) {\n      return Promise.reject(new Error('space.url is required'));\n    }\n\n    if (!spaceId) {\n      return Promise.reject(new Error('space.id is required'));\n    }\n\n    if (!options.kmsResourceObjectUrl) {\n      return Promise.reject(new Error('options.kmsResourceObjectUrl is required'));\n    }\n\n    if (!options.bindingId) {\n      return Promise.reject(new Error('options.bindingId is required'));\n    }\n\n    const parameters = {\n      kmsMessage: {\n        method: 'delete',\n        uri: `${options.kmsResourceObjectUrl}/authorizations?${querystring.stringify({\n          authId: spaceId,\n        })}`,\n      },\n    };\n\n    return this.webex.internal.encryption.kms.prepareRequest(parameters.kmsMessage).then((req) => {\n      parameters.kmsMessage = req.wrapped;\n\n      return this.webex.request({\n        method: 'DELETE',\n        uri: `${space.url}/bindings/${options.bindingId}?${querystring.stringify(parameters)}`,\n      });\n    });\n  },\n});\n\nexport default Space;\n"],"mappings":"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"}