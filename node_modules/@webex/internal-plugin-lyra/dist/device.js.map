{"version":3,"names":["_webexCore","require","Device","WebexPlugin","extend","namespace","getAudioState","space","webex","request","method","uri","concat","url","then","res","body","putAudioState","audioState","arguments","length","undefined","deviceUrl","_promise","default","reject","Error","mute","unmute","increaseVolume","decreaseVolume","setVolume","level","version","_default","exports"],"sources":["device.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {WebexPlugin} from '@webex/webex-core';\n\n/**\n * @class\n * @extends {Lyra}\n * @memberof Lyra\n */\nconst Device = WebexPlugin.extend({\n  namespace: 'Lyra',\n\n  /**\n   * Gets the audio state of the device\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @returns {Promise<LyraAudioState>} {volume, microphones, url}\n   */\n  getAudioState(space) {\n    return this.webex\n      .request({\n        method: 'GET',\n        uri: `${space.url}/audio`,\n      })\n      .then((res) => res.body);\n  },\n\n  /**\n   * Updates audio state for lyra device, should be called every 10 minutes or\n   * when mic or volume state is changed\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @param {Types~LyraAudioState} audioState\n   * @param {object} audioState.volume optional\n   * @param {boolean} audioState.volume.level\n   * @param {object} audioState.microphones optional\n   * @param {boolean} audioState.microphones.muted\n   * @param {string} audioState.deviceUrl\n   * @returns {Promise}\n   */\n  putAudioState(space, audioState = {}) {\n    if (!audioState.deviceUrl) {\n      return Promise.reject(new Error('audioState.deviceUrl is required'));\n    }\n\n    return this.webex\n      .request({\n        method: 'PUT',\n        uri: `${space.url}/audio`,\n        body: audioState,\n      })\n      .then((res) => res.body);\n  },\n\n  /**\n   * Mutes lyra device\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @returns {Promise}\n   */\n  mute(space) {\n    return this.webex.request({\n      method: 'POST',\n      uri: `${space.url}/audio/microphones/actions/mute/invoke`,\n    });\n  },\n\n  /**\n   * Unmutes lyra device\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @returns {Promise}\n   */\n  unmute(space) {\n    return this.webex.request({\n      method: 'POST',\n      uri: `${space.url}/audio/microphones/actions/un-mute/invoke`,\n    });\n  },\n\n  /**\n   * Increases lyra device's volume\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @returns {Promise}\n   */\n  increaseVolume(space) {\n    return this.webex.request({\n      method: 'POST',\n      uri: `${space.url}/audio/volume/actions/increase/invoke`,\n    });\n  },\n\n  /**\n   * Decreases lyra device's volume\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @returns {Promise}\n   */\n  decreaseVolume(space) {\n    return this.webex.request({\n      method: 'POST',\n      uri: `${space.url}/audio/volume/actions/decrease/invoke`,\n    });\n  },\n\n  /**\n   * Sets lyra device's volume but should use increase and decrease api instead\n   * @param {Types~LyraSpace} space\n   * @param {string} space.url\n   * @param {integer} level to be set\n   * @returns {Promise}\n   */\n  setVolume(space, level = 0) {\n    return this.webex.request({\n      method: 'POST',\n      uri: `${space.url}/audio/volume/actions/set/invoke`,\n      body: {\n        level,\n      },\n    });\n  },\n});\n\nexport default Device;\n"],"mappings":"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"}