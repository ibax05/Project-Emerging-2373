"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");
var _parseInt2 = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/parse-int"));
var _keys = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/object/keys"));
/*!
 * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.
 */

/* eslint-disable no-invalid-this */
/* eslint-disable func-names */

var shouldToAssert = require('./should-to-assert');

/**
 * @param {Object} chai
 * @returns {undefined}
 */
module.exports = function (chai) {
  var Assertion = chai.Assertion,
    assert = chai.assert;

  /* eslint no-unused-expressions: [0] */

  var uuidPattern = /^[a-f\d]{8}(?:-[a-f\d]{4}){3}-[a-f\d]{12}$/;
  var emailPattern = /^[^\s]+?@[^\s]+?$/;
  Assertion.addProperty('hydraId', function () {
    assert.isString(this._obj);
    assert.notMatch(this._obj, uuidPattern);
  });
  Assertion.addProperty('uuid', function () {
    assert.isString(this._obj);
    assert.match(this._obj, uuidPattern);
  });
  Assertion.addProperty('email', function () {
    assert.isString(this._obj);
    assert.match(this._obj, emailPattern);
  });
  Assertion.addProperty('isoDate', function () {
    assert.isString(this._obj);
    assert.isNotNumber(this._obj);
    assert.notEqual((0, _parseInt2.default)(this._obj, 10).toString(), this._obj);
  });
  Assertion.addMethod('properties', function (properties) {
    var _this = this;
    properties.forEach(function (property) {
      assert.property(_this._obj, property);
    });
  });
  chai.assert.properties = function (obj, properties, msg) {
    new Assertion(obj, msg).to.have.properties(properties);
  };
  Assertion.addMethod('strictProperties', function (properties) {
    var _this2 = this;
    properties.forEach(function (property) {
      assert.property(_this2._obj, property);
    });
    assert.deepEqual((0, _keys.default)(this._obj).sort(), properties.sort());
  });
  chai.assert.strictProperties = function (obj, properties, msg) {
    new Assertion(obj, msg).to.have.strictProperties(properties);
  };
  shouldToAssert(chai, {
    hydraId: 'isHydraID',
    uuid: 'isUUID',
    email: 'isEmail',
    isoDate: 'isISODate'
  });
};
//# sourceMappingURL=primitives.js.map
