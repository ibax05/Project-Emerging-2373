{"version":3,"names":["_require","require","isArray","camelCase","module","exports","shouldToAssert","chai","names","Assertion","keys","_keys","default","forEach","key","assert","computeAssertionName","obj","msg","to","be","a","name","concat"],"sources":["should-to-assert.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nconst {isArray, camelCase} = require('lodash');\n\n/**\n * Converts expect/should assertion definitions into assert definitions\n * @param {Object} chai\n * @param {Object|Array} names if an Object, keys are should assertions and\n * values are assert assertions; if an array, values are should assertions and\n * assert assertions are computed by capitalizing the first letter and\n * prepending \"is\".\n * @returns {undefined}\n */\nmodule.exports = function shouldToAssert(chai, names) {\n  const {Assertion} = chai;\n  /* eslint no-unused-expressions: [0] */\n\n  const keys = isArray(names) ? names : Object.keys(names);\n\n  keys.forEach((key) => {\n    chai.assert[computeAssertionName(key)] = (obj, msg) => {\n      new Assertion(obj, msg).to.be.a[key];\n    };\n  });\n\n  /**\n   * @private\n   * @param {string} key\n   * @returns {string}\n   */\n  function computeAssertionName(key) {\n    const name = names[key];\n\n    if (name) {\n      return name;\n    }\n\n    return camelCase(`is_${key}`);\n  }\n};\n"],"mappings":";;;;AAAA;AACA;AACA;;AAEA,IAAAA,QAAA,GAA6BC,OAAO,CAAC,QAAQ,CAAC;EAAvCC,OAAO,GAAAF,QAAA,CAAPE,OAAO;EAAEC,SAAS,GAAAH,QAAA,CAATG,SAAS;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,SAASC,cAAcA,CAACC,IAAI,EAAEC,KAAK,EAAE;EACpD,IAAOC,SAAS,GAAIF,IAAI,CAAjBE,SAAS;EAChB;;EAEA,IAAMC,IAAI,GAAGR,OAAO,CAACM,KAAK,CAAC,GAAGA,KAAK,GAAG,IAAAG,KAAA,CAAAC,OAAA,EAAYJ,KAAK,CAAC;EAExDE,IAAI,CAACG,OAAO,CAAC,UAACC,GAAG,EAAK;IACpBP,IAAI,CAACQ,MAAM,CAACC,oBAAoB,CAACF,GAAG,CAAC,CAAC,GAAG,UAACG,GAAG,EAAEC,GAAG,EAAK;MACrD,IAAIT,SAAS,CAACQ,GAAG,EAAEC,GAAG,CAAC,CAACC,EAAE,CAACC,EAAE,CAACC,CAAC,CAACP,GAAG,CAAC;IACtC,CAAC;EACH,CAAC,CAAC;;EAEF;AACF;AACA;AACA;AACA;EACE,SAASE,oBAAoBA,CAACF,GAAG,EAAE;IACjC,IAAMQ,IAAI,GAAGd,KAAK,CAACM,GAAG,CAAC;IAEvB,IAAIQ,IAAI,EAAE;MACR,OAAOA,IAAI;IACb;IAEA,OAAOnB,SAAS,OAAAoB,MAAA,CAAOT,GAAG,EAAG;EAC/B;AACF,CAAC"}