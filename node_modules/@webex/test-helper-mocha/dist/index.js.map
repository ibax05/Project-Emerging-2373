{"version":3,"names":["bowser","require","inNode","window","inBrowser","inSpecificBrowser","name","getParser","navigator","userAgent","isBrowser","inFirefox","inSafari","inJenkins","process","env","JENKINS","noop","module","exports","flaky","mochaMethod","envVar","skip","shouldSkip","handleErrorEvent","emitter","fn","r","p","_promise","default","resolve","reject","once","handler","race","then","unbind","catch","reason","add","e","off","err","skipInBrowser","skipInNode","skipInFirefox","skipInSafari","browserOnly","nodeOnly","jenkinsOnly","expectActivity","max","event","activityChecker","msg","timer","clearTimeout","setTimeout","Error","concat","on","result","activity","data","expectExactlyNEvents","count","lastResult","currentCount","expectNEvents","expectEvent","firefoxOnly","maxWaitForEvent","maxWaitForPromise","timeout","promise","snoozeUntil","until","explanation","now","Date","d","_isNan","getTime"],"sources":["index.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nconst bowser = require('bowser');\n\n/**\n * Indicates if we're running in node\n * @returns {boolean}\n * @private\n */\nfunction inNode() {\n  return typeof window === 'undefined';\n}\n\n/**\n * Indicates if we're running in a web browser\n * @returns {boolean}\n * @private\n */\nfunction inBrowser() {\n  return !inNode();\n}\n\n/**\n * Indicates if we are running in the named browser\n * @param {string} name name of the browser\n * @returns {boolean}\n */\nfunction inSpecificBrowser(name) {\n  return window && bowser.getParser(window.navigator.userAgent).isBrowser(name);\n}\n\n/**\n * Indicates if we're running in firefox\n * @returns {boolean}\n * @private\n */\nfunction inFirefox() {\n  return inSpecificBrowser('firefox');\n}\n\n/**\n * Indicates if we're running in safari\n * @returns {boolean}\n * @private\n */\nfunction inSafari() {\n  return inSpecificBrowser('safari');\n}\n\n/**\n * Indicates if we're running on Jenkins\n * @returns {boolean}\n * @private\n */\nfunction inJenkins() {\n  return process.env.JENKINS;\n}\n\n/**\n * noop\n * @returns {undefined}\n * @private\n */\nfunction noop() {\n  // intentionally empty\n}\n\nmodule.exports = {\n  /**\n   * Wrap the desired mochaMethod with `flaky` to indicate it's a flaky test\n   * and exclude it from the test suite.\n   * example:\n   * `flaky(it)('sometimes passes and sometimes failes')`\n   * @param {Function} mochaMethod `it` or `describe`\n   * @param {string} envVar process.env.SKIP_FLAKY_TESTS\n   * @returns {Function} mochaMethod or mochaMethod.skip\n   */\n  flaky: function flaky(mochaMethod, envVar) {\n    // If mochaMethod doesn't have a skip method,\n    // assume the mochaMethod is either a .skip or .only\n    if (!mochaMethod.skip) {\n      return mochaMethod;\n    }\n\n    const shouldSkip = envVar && envVar !== 'false' && !!envVar;\n\n    return shouldSkip ? mochaMethod.skip : mochaMethod;\n  },\n\n  /**\n   * A lot of failures get produced by EventEmitters, which makes them difficult to\n   * detect in tests (they just look like timeouts). This is a test helper that\n   * captures that error and turns it into a rejected promise\n   * @param {EventEmitter} emitter\n   * @param {Function} fn\n   * @returns {Promise}\n   */\n  handleErrorEvent: function handleErrorEvent(emitter, fn) {\n    let r;\n    const p = new Promise((resolve, reject) => {\n      r = reject;\n      emitter.once('error', reject);\n    });\n\n    const handler = Promise.race([p, fn(emitter)])\n      .then(unbind)\n      .catch((reason) => {\n        unbind();\n        throw reason;\n      });\n\n    // Make it possible to add additional emitters\n    handler.add = (e) => e.once('error', r);\n\n    return handler;\n\n    /**\n     * unbinder\n     * @private\n     * @returns {undefined}\n     */\n    function unbind() {\n      try {\n        emitter.off('error', r);\n      } catch (err) {\n        // ignore\n      }\n    }\n  },\n\n  inBrowser,\n\n  inNode,\n\n  /**\n   * Wrap the desired mochaMethod with `skipInBrowser` to prevent the\n   * corresponding test or group of tests from running in a web browser\n   * example:\n   * `skipInBrowser(it)('does a thing that only works in node')`\n   * @param {Function} mochaMethod `it` or `describe`\n   * @returns {Function} mochaMethod or mochaMethod.skip\n   */\n  skipInBrowser: function skipInBrowser(mochaMethod) {\n    // If mochaMethod doesn't have a skip method, assume that mochaMethod is\n    // already either a .skip or a .only\n    if (!mochaMethod.skip) {\n      return mochaMethod;\n    }\n\n    return inBrowser() ? mochaMethod.skip : mochaMethod;\n  },\n\n  /**\n   * Wrap the desired mochaMethod with `skipInNode` to prevent the\n   * corresponding test or group of tests from running in node.\n   * example:\n   * `skipInNode(it)('does a thing that only works in a web browser')`\n   * @param {Function} mochaMethod `it` or `describe`\n   * @returns {Function} mochaMethod or mochaMethod.skip\n   */\n  skipInNode: function skipInNode(mochaMethod) {\n    // If mochaMethod doesn't have a skip method, assume that mochaMethod is\n    // already either a .skip or a .only\n    if (!mochaMethod.skip) {\n      return mochaMethod;\n    }\n\n    return inNode() ? mochaMethod.skip : mochaMethod;\n  },\n\n  /**\n   * Wrap the desired mochaMethod with `skipInFirefox` to prevent the\n   * corresponding test or group of tests from running in Firefox.\n   * example:\n   * `skipInFirefox(it)('does a thing that does not work in Firefox')`\n   * @param {Function} mochaMethod `it` or `describe`\n   * @returns {Function} mochaMethod or mochaMethod.skip\n   */\n  skipInFirefox: function skipInFirefox(mochaMethod) {\n    // If mochaMethod doesn't have a skip method, assume that mochaMethod is\n    // already either a .skip or a .only\n    if (!mochaMethod.skip) {\n      return mochaMethod;\n    }\n\n    return inFirefox() ? mochaMethod.skip : mochaMethod;\n  },\n\n  /**\n   * Wrap the desired mochaMethod with `skipInSafari` to prevent the\n   * corresponding test or group of tests from running in Safari.\n   * example:\n   * `skipInSafari(it)('does a thing that does not work in Safari')`\n   * @param {Function} mochaMethod `it` or `describe`\n   * @returns {Function} mochaMethod or mochaMethod.skip\n   */\n  skipInSafari: function skipInSafari(mochaMethod) {\n    // If mochaMethod doesn't have a skip method, assume that mochaMethod is\n    // already either a .skip or a .only\n    if (!mochaMethod.skip) {\n      return mochaMethod;\n    }\n\n    return inSafari() ? mochaMethod.skip : mochaMethod;\n  },\n\n  /**\n   * Similar to skipInNode in that it prevents the test from running, but goes a\n   * step further to hide it from the list of skipped tests. Should be used when\n   * the test will never be valid in NodeJS\n   * @param {Function} mochaMethod\n   * @returns {Function}\n   */\n  browserOnly: function browserOnly(mochaMethod) {\n    return inBrowser() ? mochaMethod : noop;\n  },\n\n  /**\n   * Similar to skipInBrowser in that it prevents the test from running, but\n   * goes a step further to hide it from the list of skipped tests. Should be\n   * used when the test will never be valid in a Browser\n   * @param {Function} mochaMethod\n   * @returns {Function}\n   */\n  nodeOnly: function nodeOnly(mochaMethod) {\n    return inNode() ? mochaMethod : noop;\n  },\n\n  /**\n   * Similar to skipInBrowser in that it prevents the test from running, but\n   * goes a step further to hide it from the list of skipped tests. Should be\n   * used when the test should be run on Jenkins only\n   * @param {*} mochaMethod\n   * @returns {Functions}\n   */\n  jenkinsOnly: function jenkinsOnly(mochaMethod) {\n    return inJenkins() ? mochaMethod : noop;\n  },\n\n  /**\n   * @param {number} max\n   * @param {string} event\n   * @param {EventEmitter} emitter\n   * @param {function} activityChecker // callback to check if activity matches\n   * @param {string} msg\n   * @returns {Promise<mixed>} Resolves with the activity\n   */\n  expectActivity: function expectActivity(max, event, emitter, activityChecker, msg) {\n    let timer;\n\n    /**\n     * helper\n     * @private\n     * @returns {undefined}\n     */\n    function unbind() {\n      try {\n        clearTimeout(timer);\n        emitter.off(event);\n      } catch (err) {\n        // ignore\n      }\n    }\n\n    return Promise.race([\n      new Promise((resolve, reject) => {\n        timer = setTimeout(() => {\n          reject(new Error(`${event} did not fire within ${max}ms${msg ? `: ${msg}` : ''}`));\n        }, max);\n      }),\n      new Promise((resolve) => {\n        emitter.on(event, (result) => {\n          const {\n            data: {activity},\n          } = result;\n\n          if (activityChecker(activity)) {\n            unbind();\n            resolve(activity);\n          }\n        });\n      }),\n    ]).catch((reason) => {\n      unbind();\n      throw reason;\n    });\n  },\n\n  /**\n   * Returns a promise that resolves after timeout or rejects\n   * when count has been exceeded. Will also reject if count\n   * hasn't been met after timeout\n   * @param {number} max amount of time to wait for events in ms\n   * @param {number} count number of events to expect in timeframe\n   * @param {string} event\n   * @param {EventEmitter} emitter\n   * @returns {Promise}\n   */\n  expectExactlyNEvents: function expectExactlyNEvents(max, count, event, emitter) {\n    let lastResult;\n    let timer;\n\n    let currentCount = 0;\n\n    return Promise.race([\n      new Promise((resolve, reject) => {\n        timer = setTimeout(() => {\n          if (currentCount === count) {\n            resolve(lastResult);\n          } else {\n            reject(\n              new Error(\n                `${event} fired only ${currentCount} times within ${max}ms. expected ${count} times`\n              )\n            );\n          }\n        }, max);\n      }),\n      new Promise((resolve, reject) => {\n        emitter.on(event, fn);\n\n        /**\n         * helper\n         * @private\n         * @param {object} result\n         * @returns {undefined}\n         */\n        function fn(result) {\n          lastResult = result;\n          currentCount += 1;\n          if (currentCount > count) {\n            emitter.off(event, fn);\n            clearTimeout(timer);\n            reject(\n              new Error(\n                `${event} fired ${currentCount} times within ${max}ms. expected ${count} times`\n              )\n            );\n          }\n        }\n      }),\n    ]);\n  },\n\n  /**\n   * Returns a promise that resolves when event is fired count times or rejects\n   * when max expires\n   * @param {number} max\n   * @param {number} count\n   * @param {string} event\n   * @param {EventEmitter} emitter\n   * @returns {Promise}\n   */\n  expectNEvents: function expectNEvents(max, count, event, emitter) {\n    let timer;\n\n    let currentCount = 0;\n\n    return Promise.race([\n      new Promise((resolve, reject) => {\n        timer = setTimeout(() => {\n          reject(\n            new Error(\n              `${event} fired only ${currentCount} times within ${max}ms. expected ${count} times`\n            )\n          );\n        }, max);\n      }),\n      new Promise((resolve) => {\n        emitter.on(event, fn);\n\n        /**\n         * helper\n         * @private\n         * @returns {undefined}\n         */\n        function fn() {\n          currentCount += 1;\n          if (currentCount === count) {\n            emitter.off(event, fn);\n            clearTimeout(timer);\n            resolve();\n          }\n        }\n      }),\n    ]);\n  },\n\n  /**\n   * @param {number} max\n   * @param {string} event\n   * @param {EventEmitter} emitter\n   * @param {string} msg\n   * @returns {Promise<mixed>} Resolves with the results of the event\n   */\n  expectEvent: function expectEvent(max, event, emitter, msg) {\n    let timer;\n\n    return Promise.race([\n      new Promise((resolve, reject) => {\n        timer = setTimeout(() => {\n          reject(new Error(`${event} did not fire within ${max}ms${msg ? `: ${msg}` : ''}`));\n        }, max);\n      }),\n      new Promise((resolve) => {\n        emitter.once(event, (result) => {\n          clearTimeout(timer);\n          resolve(result);\n        });\n      }),\n    ]);\n  },\n\n  /**\n   * Only run the specified test in firefox\n   * @param {Function} mochaMethod\n   * @returns {Function}\n   */\n  firefoxOnly: function firefoxOnly(mochaMethod) {\n    return inFirefox() ? mochaMethod : noop;\n  },\n\n  /**\n   * Waits max ms or until emitter fires event, then resolves\n   * @param {number} max\n   * @param {string} event\n   * @param {EventEmitter} emitter\n   * @returns {Promise<mixed>}\n   */\n  maxWaitForEvent: function maxWaitForEvent(max, event, emitter) {\n    return Promise.race([\n      new Promise((resolve) => {\n        setTimeout(resolve, max);\n      }),\n      new Promise((resolve) => {\n        emitter.once(event, resolve);\n      }),\n    ]);\n  },\n\n  /**\n   * Waits timeout ms or until the promise resolves. Rejects if the timeout is\n   * hit, otherwise resolves\n   * @param {number} timeout\n   * @param {Promise} promise\n   * @returns {Promise<mixed>}\n   */\n  maxWaitForPromise: function maxWaitForPromise(timeout, promise) {\n    return Promise.race([\n      promise,\n      new Promise((resolve, reject) => {\n        setTimeout(() => {\n          reject(new Error(`Timeout of ${timeout} expired before promise completed`));\n        }, timeout);\n      }),\n    ]);\n  },\n\n  /**\n   * Do not execute the specified mochaMethod until we pass the specified date\n   * @param {Date|string} until\n   * @param {string} explanation - Doesn't do anything, but forces you to defend\n   * your decision to snooze a test\n   * @returns {Function}\n   */\n  snoozeUntil: function snoozeUntil(until, explanation) {\n    const now = new Date();\n\n    if (!explanation) {\n      throw new Error('You must defend your decision to snooze this test');\n    }\n\n    const d = new Date(until);\n\n    if (Number.isNaN(d.getTime())) {\n      throw new Error(`\"${until}\" does not appear to a valid date`);\n    }\n\n    const skip = now < d;\n\n    return (mochaMethod) => {\n      if (skip) {\n        return mochaMethod.skip;\n      }\n\n      return mochaMethod;\n    };\n  },\n};\n"],"mappings":"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"}