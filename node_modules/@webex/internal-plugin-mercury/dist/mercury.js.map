{"version":3,"names":["_url","_interopRequireDefault","require","_webexCore","_common","_backoff","_socket","_errors","_dec","_dec2","_obj","ownKeys","object","enumerableOnly","keys","_Object$keys2","_Object$getOwnPropertySymbols","symbols","filter","sym","_Object$getOwnPropertyDescriptor2","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","Object","forEach","key","_defineProperty2","default","_Object$getOwnPropertyDescriptors","_Object$defineProperties","_Object$defineProperty","normalReconnectReasons","Mercury","WebexPlugin","extend","deprecated","namespace","session","connected","type","connecting","socket","localClusterServiceUrls","derived","listening","deps","fn","connect","webSocketUrl","_this","logger","info","_promise","resolve","webex","internal","device","registered","register","then","_connectWithBackoff","disconnect","_this2","backoffCall","abort","removeAllListeners","once","close","listen","stopListening","processRegistrationStatusEvent","message","_applyOverrides","event","headers","headerKeys","_keys","keyPath","_set2","_prepareUrl","_this3","feature","getFeature","haMessagingEnabled","services","convertUrlToPriorityHostUrl","wsUrl","webSharedMercury","url","parse","_assign","query","outboundWireFormat","bufferStates","aliasHttpStatus","mercuryRegistrationStatus","isRegistrationRefreshEnabled","_deleteProperty","_get2","multipleConnections","format","_attemptConnection","socketUrl","callback","_this4","Socket","attemptWSUrl","on","_onclose","_onmessage","_len","args","Array","_key","_emit","concat","all","credentials","getUserToken","_ref","_ref2","_slicedToArray2","token","msg","reject","Error","options","forceCloseDelay","config","pingInterval","pongTimeout","toString","trackingId","sessionId","_now","defaultMercuryOptions","open","metrics","submitClientMetrics","fields","success","tags","action","refresh","catch","reason","code","getNumRetries","retries","UnknownResponse","NotAuthorized","force","BadRequest","Forbidden","warn","ConnectionError","error","markFailedUrl","_this5","call","onComplete","err","undefined","backoff","setStrategy","ExponentialStrategy","initialDelay","backoffTimeReset","maxDelay","backoffTimeMax","maxRetries","failAfter","number","delay","Math","min","strategy_","nextBackoffDelay_","process","env","NODE_ENV","debug","stack","start","trigger","_getEventHandlers","eventType","_eventType$split","split","_eventType$split2","name","handlers","handlerName","_camelCase2","toLowerCase","unset","_reconnect","includes","_this6","envelope","data","ENABLE_MERCURY_LOGGING","reduce","promise","handler","_data$eventType$split","_data$eventType$split2","version","_applyDecoratedDescriptor2","oneFlight","_getOwnPropertyDescriptor","_default","exports"],"sources":["mercury.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport url from 'url';\n\nimport {WebexPlugin} from '@webex/webex-core';\nimport {deprecated, oneFlight} from '@webex/common';\nimport {camelCase, get, set} from 'lodash';\nimport backoff from 'backoff';\n\nimport Socket from './socket';\nimport {\n  BadRequest,\n  Forbidden,\n  NotAuthorized,\n  UnknownResponse,\n  ConnectionError,\n  // NotFound\n} from './errors';\n\nconst normalReconnectReasons = ['idle', 'done (forced)', 'pong not received', 'pong mismatch'];\n\nconst Mercury = WebexPlugin.extend({\n  namespace: 'Mercury',\n\n  session: {\n    connected: {\n      default: false,\n      type: 'boolean',\n    },\n    connecting: {\n      default: false,\n      type: 'boolean',\n    },\n    socket: 'object',\n    localClusterServiceUrls: 'object',\n  },\n\n  derived: {\n    listening: {\n      deps: ['connected'],\n      fn() {\n        return this.connected;\n      },\n    },\n  },\n\n  @oneFlight\n  connect(webSocketUrl) {\n    if (this.connected) {\n      this.logger.info('mercury: already connected, will not connect again');\n\n      return Promise.resolve();\n    }\n\n    this.connecting = true;\n\n    return Promise.resolve(\n      this.webex.internal.device.registered || this.webex.internal.device.register()\n    ).then(() => {\n      this.logger.info('mercury: connecting');\n\n      return this._connectWithBackoff(webSocketUrl);\n    });\n  },\n\n  @oneFlight\n  disconnect() {\n    return new Promise((resolve) => {\n      if (this.backoffCall) {\n        this.logger.info('mercury: aborting connection');\n        this.backoffCall.abort();\n      }\n\n      if (this.socket) {\n        this.socket.removeAllListeners('message');\n        this.once('offline', resolve);\n        this.socket.close();\n\n        return;\n      }\n\n      resolve();\n    });\n  },\n\n  @deprecated('Mercury#listen(): Use Mercury#connect() instead')\n  listen() {\n    /* eslint no-invalid-this: [0] */\n    return this.connect();\n  },\n\n  @deprecated('Mercury#stopListening(): Use Mercury#disconnect() instead')\n  stopListening() {\n    /* eslint no-invalid-this: [0] */\n    return this.disconnect();\n  },\n\n  processRegistrationStatusEvent(message) {\n    this.localClusterServiceUrls = message.localClusterServiceUrls;\n  },\n\n  _applyOverrides(event) {\n    if (!event || !event.headers) {\n      return;\n    }\n    const headerKeys = Object.keys(event.headers);\n\n    headerKeys.forEach((keyPath) => {\n      set(event, keyPath, event.headers[keyPath]);\n    });\n  },\n\n  _prepareUrl(webSocketUrl) {\n    if (!webSocketUrl) {\n      webSocketUrl = this.webex.internal.device.webSocketUrl;\n    }\n\n    return this.webex.internal.feature\n      .getFeature('developer', 'web-high-availability')\n      .then((haMessagingEnabled) => {\n        if (haMessagingEnabled) {\n          return this.webex.internal.services.convertUrlToPriorityHostUrl(webSocketUrl);\n        }\n\n        return webSocketUrl;\n      })\n      .then((wsUrl) => {\n        webSocketUrl = wsUrl;\n      })\n      .then(() => this.webex.internal.feature.getFeature('developer', 'web-shared-mercury'))\n      .then((webSharedMercury) => {\n        webSocketUrl = url.parse(webSocketUrl, true);\n        Object.assign(webSocketUrl.query, {\n          outboundWireFormat: 'text',\n          bufferStates: true,\n          aliasHttpStatus: true,\n        });\n\n        if (webSharedMercury) {\n          Object.assign(webSocketUrl.query, {\n            mercuryRegistrationStatus: true,\n            isRegistrationRefreshEnabled: true,\n          });\n          Reflect.deleteProperty(webSocketUrl.query, 'bufferStates');\n        }\n\n        if (get(this, 'webex.config.device.ephemeral', false)) {\n          webSocketUrl.query.multipleConnections = true;\n        }\n\n        return url.format(webSocketUrl);\n      });\n  },\n\n  _attemptConnection(socketUrl, callback) {\n    const socket = new Socket();\n    let attemptWSUrl;\n\n    socket.on('close', (...args) => this._onclose(...args));\n    socket.on('message', (...args) => this._onmessage(...args));\n    socket.on('sequence-mismatch', (...args) => this._emit('sequence-mismatch', ...args));\n\n    Promise.all([this._prepareUrl(socketUrl), this.webex.credentials.getUserToken()])\n      .then(([webSocketUrl, token]) => {\n        if (!this.backoffCall) {\n          const msg = 'mercury: prevent socket open when backoffCall no longer defined';\n\n          this.logger.info(msg);\n\n          return Promise.reject(new Error(msg));\n        }\n\n        attemptWSUrl = webSocketUrl;\n\n        let options = {\n          forceCloseDelay: this.config.forceCloseDelay,\n          pingInterval: this.config.pingInterval,\n          pongTimeout: this.config.pongTimeout,\n          token: token.toString(),\n          trackingId: `${this.webex.sessionId}_${Date.now()}`,\n          logger: this.logger,\n        };\n\n        // if the consumer has supplied request options use them\n        if (this.webex.config.defaultMercuryOptions) {\n          this.logger.info('mercury: setting custom options');\n          options = {...options, ...this.webex.config.defaultMercuryOptions};\n        }\n\n        // Set the socket before opening it. This allows a disconnect() to close\n        // the socket if it is in the process of being opened.\n        this.socket = socket;\n\n        return socket.open(webSocketUrl, options);\n      })\n      .then(() => {\n        this.webex.internal.metrics.submitClientMetrics('web-ha-mercury', {\n          fields: {\n            success: true,\n          },\n          tags: {\n            action: 'connected',\n            url: attemptWSUrl,\n          },\n        });\n        callback();\n\n        return this.webex.internal.feature\n          .getFeature('developer', 'web-high-availability')\n          .then((haMessagingEnabled) => {\n            if (haMessagingEnabled) {\n              return this.webex.internal.device.refresh();\n            }\n\n            return Promise.resolve();\n          });\n      })\n      .catch((reason) => {\n        // Suppress connection errors that appear to be network related. This\n        // may end up suppressing metrics during outages, but we might not care\n        // (especially since many of our outages happen in a way that client\n        // metrics can't be trusted).\n        if (reason.code !== 1006 && this.backoffCall && this.backoffCall.getNumRetries() > 0) {\n          this._emit('connection_failed', reason, {retries: this.backoffCall.getNumRetries()});\n        }\n        this.logger.info('mercury: connection attempt failed', reason);\n        // UnknownResponse is produced by IE for any 4XXX; treated it like a bad\n        // web socket url and let WDM handle the token checking\n        if (reason instanceof UnknownResponse) {\n          this.logger.info(\n            'mercury: received unknown response code, refreshing device registration'\n          );\n\n          return this.webex.internal.device.refresh().then(() => callback(reason));\n        }\n        // NotAuthorized implies expired token\n        if (reason instanceof NotAuthorized) {\n          this.logger.info('mercury: received authorization error, reauthorizing');\n\n          return this.webex.credentials.refresh({force: true}).then(() => callback(reason));\n        }\n        // // NotFound implies expired web socket url\n        // else if (reason instanceof NotFound) {\n        //   this.logger.info(`mercury: received not found error, refreshing device registration`);\n        //   return this.webex.internal.device.refresh()\n        //     .then(() => callback(reason));\n        // }\n        // BadRequest implies current credentials are for a Service Account\n        // Forbidden implies current user is not entitle for Webex\n        if (reason instanceof BadRequest || reason instanceof Forbidden) {\n          this.logger.warn('mercury: received unrecoverable response from mercury');\n          this.backoffCall.abort();\n\n          return callback(reason);\n        }\n        if (reason instanceof ConnectionError) {\n          return this.webex.internal.feature\n            .getFeature('developer', 'web-high-availability')\n            .then((haMessagingEnabled) => {\n              if (haMessagingEnabled) {\n                this.logger.info(\n                  'mercury: received a generic connection error, will try to connect to another datacenter'\n                );\n                this.webex.internal.metrics.submitClientMetrics('web-ha-mercury', {\n                  fields: {\n                    success: false,\n                  },\n                  tags: {\n                    action: 'failed',\n                    error: reason.message,\n                    url: attemptWSUrl,\n                  },\n                });\n\n                return this.webex.internal.services.markFailedUrl(attemptWSUrl);\n              }\n\n              return null;\n            })\n            .then(() => callback(reason));\n        }\n\n        return callback(reason);\n      })\n      .catch((reason) => {\n        this.logger.error('mercury: failed to handle connection failure', reason);\n        callback(reason);\n      });\n  },\n\n  _connectWithBackoff(webSocketUrl) {\n    return new Promise((resolve, reject) => {\n      // eslint gets confused about whether or not call is actually used\n      // eslint-disable-next-line prefer-const\n      let call;\n      const onComplete = (err) => {\n        this.connecting = false;\n\n        this.backoffCall = undefined;\n        if (err) {\n          this.logger.info(\n            `mercury: failed to connect after ${call.getNumRetries()} retries; log statement about next retry was inaccurate; ${err}`\n          );\n\n          return reject(err);\n        }\n        this.connected = true;\n        this._emit('online');\n\n        return resolve();\n      };\n\n      // eslint-disable-next-line prefer-reflect\n      call = backoff.call((callback) => {\n        this.logger.info(`mercury: executing connection attempt ${call.getNumRetries()}`);\n        this._attemptConnection(webSocketUrl, callback);\n      }, onComplete);\n\n      call.setStrategy(\n        new backoff.ExponentialStrategy({\n          initialDelay: this.config.backoffTimeReset,\n          maxDelay: this.config.backoffTimeMax,\n        })\n      );\n\n      if (this.config.maxRetries) {\n        call.failAfter(this.config.maxRetries);\n      }\n\n      call.on('abort', () => {\n        this.logger.info('mercury: connection aborted');\n        reject(new Error('Mercury Connection Aborted'));\n      });\n\n      call.on('callback', (err) => {\n        if (err) {\n          const number = call.getNumRetries();\n          const delay = Math.min(call.strategy_.nextBackoffDelay_, this.config.backoffTimeMax);\n\n          this.logger.info(\n            `mercury: failed to connect; attempting retry ${number + 1} in ${delay} ms`\n          );\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV === 'development') {\n            this.logger.debug('mercury: ', err, err.stack);\n          }\n\n          return;\n        }\n        this.logger.info('mercury: connected');\n      });\n\n      call.start();\n\n      this.backoffCall = call;\n    });\n  },\n\n  _emit(...args) {\n    try {\n      this.trigger(...args);\n    } catch (error) {\n      this.logger.error('mercury: error occurred in event handler', error);\n    }\n  },\n\n  _getEventHandlers(eventType) {\n    const [namespace, name] = eventType.split('.');\n    const handlers = [];\n\n    if (!this.webex[namespace] && !this.webex.internal[namespace]) {\n      return handlers;\n    }\n\n    const handlerName = camelCase(`process_${name}_event`);\n\n    if ((this.webex[namespace] || this.webex.internal[namespace])[handlerName]) {\n      handlers.push({\n        name: handlerName,\n        namespace,\n      });\n    }\n\n    return handlers;\n  },\n\n  _onclose(event) {\n    // I don't see any way to avoid the complexity or statement count in here.\n    /* eslint complexity: [0] */\n\n    try {\n      const reason = event.reason && event.reason.toLowerCase();\n      const socketUrl = this.socket.url;\n\n      this.socket.removeAllListeners();\n      this.unset('socket');\n      this.connected = false;\n      this._emit('offline', event);\n\n      switch (event.code) {\n        case 1003:\n          // metric: disconnect\n          this.logger.info(\n            `mercury: Mercury service rejected last message; will not reconnect: ${event.reason}`\n          );\n          this._emit('offline.permanent', event);\n          break;\n        case 4000:\n          // metric: disconnect\n          this.logger.info('mercury: socket replaced; will not reconnect');\n          this._emit('offline.replaced', event);\n          break;\n        case 1001:\n        case 1005:\n        case 1006:\n        case 1011:\n          this.logger.info('mercury: socket disconnected; reconnecting');\n          this._emit('offline.transient', event);\n          this._reconnect(socketUrl);\n          // metric: disconnect\n          // if (code == 1011 && reason !== ping error) metric: unexpected disconnect\n          break;\n        case 1000:\n          if (normalReconnectReasons.includes(reason)) {\n            this.logger.info('mercury: socket disconnected; reconnecting');\n            this._emit('offline.transient', event);\n            this._reconnect(socketUrl);\n            // metric: disconnect\n            // if (reason === done forced) metric: force closure\n          } else {\n            this.logger.info('mercury: socket disconnected; will not reconnect');\n            this._emit('offline.permanent', event);\n          }\n          break;\n        default:\n          this.logger.info('mercury: socket disconnected unexpectedly; will not reconnect');\n          // unexpected disconnect\n          this._emit('offline.permanent', event);\n      }\n    } catch (error) {\n      this.logger.error('mercury: error occurred in close handler', error);\n    }\n  },\n\n  _onmessage(event) {\n    const envelope = event.data;\n\n    if (process.env.ENABLE_MERCURY_LOGGING) {\n      this.logger.debug('mercury: message envelope: ', envelope);\n    }\n\n    const {data} = envelope;\n\n    this._applyOverrides(data);\n\n    return this._getEventHandlers(data.eventType)\n      .reduce(\n        (promise, handler) =>\n          promise.then(() => {\n            const {namespace, name} = handler;\n\n            return new Promise((resolve) =>\n              resolve((this.webex[namespace] || this.webex.internal[namespace])[name](data))\n            ).catch((reason) =>\n              this.logger.error(\n                `mercury: error occurred in autowired event handler for ${data.eventType}`,\n                reason\n              )\n            );\n          }),\n        Promise.resolve()\n      )\n      .then(() => {\n        this._emit('event', event.data);\n        const [namespace] = data.eventType.split('.');\n\n        if (namespace === data.eventType) {\n          this._emit(`event:${namespace}`, envelope);\n        } else {\n          this._emit(`event:${namespace}`, envelope);\n          this._emit(`event:${data.eventType}`, envelope);\n        }\n      })\n      .catch((reason) => {\n        this.logger.error('mercury: error occurred processing socket message', reason);\n      });\n  },\n\n  _reconnect(webSocketUrl) {\n    this.logger.info('mercury: reconnecting');\n\n    return this.connect(webSocketUrl);\n  },\n});\n\nexport default Mercury;\n"],"mappings":"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"}