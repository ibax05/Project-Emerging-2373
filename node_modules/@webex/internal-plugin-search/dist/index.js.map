{"version":3,"names":["require","_webexCore","_search","_interopRequireDefault","_config","registerInternalPlugin","Search","config","payloadTransformer","predicates","name","direction","test","ctx","options","_has2","default","_promise","resolve","service","url","webex","internal","services","getServiceFromUrl","extract","body","response","then","res","activities","items","transforms","fn","object","encryption","encryptText","searchEncryptionKeyUrl","query","q"],"sources":["index.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\nimport '@webex/internal-plugin-conversation';\nimport '@webex/internal-plugin-encryption';\n\nimport {registerInternalPlugin} from '@webex/webex-core';\nimport {has} from 'lodash';\n\nimport Search from './search';\nimport config from './config';\n\nregisterInternalPlugin('search', Search, {\n  config,\n  payloadTransformer: {\n    predicates: [\n      {\n        name: 'encryptSearchQuery',\n        direction: 'outbound',\n        test(ctx, options) {\n          if (!has(options, 'body.query')) {\n            return Promise.resolve(false);\n          }\n\n          if (!has(options, 'body.searchEncryptionKeyUrl')) {\n            return Promise.resolve(false);\n          }\n\n          if (options.service === 'argonaut') {\n            return Promise.resolve(true);\n          }\n\n          if (options.url) {\n            const service = ctx.webex.internal.services.getServiceFromUrl(options.url);\n\n            return Promise.resolve(service && service.name === 'argonaut');\n          }\n\n          return Promise.resolve(false);\n        },\n        extract(options) {\n          return Promise.resolve(options.body);\n        },\n      },\n      {\n        name: 'transformObjectArray',\n        direction: 'inbound',\n        test(ctx, response) {\n          return Promise.resolve(has(response, 'body.activities.items[0].objectType')).then(\n            (res) => {\n              if (!res) {\n                return Promise.resolve(false);\n              }\n\n              if (response.options.service === 'argonaut') {\n                return Promise.resolve(true);\n              }\n\n              if (response.options.url) {\n                const service = ctx.webex.internal.services.getServiceFromUrl(response.options.url);\n\n                return Promise.resolve(service && service.name === 'argonaut');\n              }\n\n              return Promise.resolve(false);\n            }\n          );\n        },\n        extract(response) {\n          return Promise.resolve(response.body.activities.items);\n        },\n      },\n    ],\n    transforms: [\n      {\n        name: 'encryptSearchQuery',\n        direction: 'outbound',\n        fn(ctx, object) {\n          return ctx.webex.internal.encryption\n            .encryptText(object.searchEncryptionKeyUrl, object.query)\n            .then((q) => {\n              object.query = q;\n            });\n        },\n      },\n    ],\n  },\n});\n\nexport {default} from './search';\n"],"mappings":"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"}