{"version":3,"names":["_common","require","_webexCore","_obj","Search","WebexPlugin","extend","namespace","people","options","queryString","query","_deleteProperty","default","_promise","reject","Error","request","api","resource","method","body","then","res","bindSearchKey","_this","webex","internal","encryption","kms","createUnboundKeys","count","_ref","_ref2","_slicedToArray2","key","createResource","userIds","device","userId","set","uri","search","_this2","promise","resolve","searchEncryptionKeyUrl","service","_assign","resActivities","_get2","includeRemoteClusterReferences","breadcrumbs","promises","_keys","forEach","cluster","editedCluster","concat","clusterActivityUrls","items","map","activity","activityUrl","bulkActivitiesPromise","conversation","bulkActivitiesFetch","catch","err","logger","warn","push","all","clusterResults","reduce","accumulator","clusterResult","version","_applyDecoratedDescriptor2","oneFlight","_getOwnPropertyDescriptor","_default","exports"],"sources":["search.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\nimport {get} from 'lodash';\nimport {oneFlight} from '@webex/common';\nimport {WebexPlugin} from '@webex/webex-core';\n\nconst Search = WebexPlugin.extend({\n  namespace: 'Search',\n\n  people(options) {\n    options = options || {};\n\n    if (!options.queryString && options.query) {\n      options.queryString = options.query;\n      Reflect.deleteProperty(options, 'query');\n    }\n\n    if (!options.queryString) {\n      return Promise.reject(new Error('`options.query` is required'));\n    }\n\n    return this.request({\n      api: 'argonaut',\n      resource: 'directory',\n      method: 'POST',\n      body: options,\n    }).then((res) => res.body);\n  },\n\n  @oneFlight\n  bindSearchKey() {\n    return this.webex.internal.encryption.kms.createUnboundKeys({count: 1}).then(([key]) =>\n      this.webex.internal.encryption.kms\n        .createResource({\n          key,\n          userIds: [this.webex.internal.device.userId],\n        })\n        .then(() => this.webex.internal.device.set('searchEncryptionKeyUrl', key.uri))\n    );\n  },\n\n  /**\n   * Fetches search result activities\n   * @param {Object} options\n   * @param {boolean} options.includeRemoteClusterReferences when true,\n   * includes search results from remote clusters\n   * @returns {Promise<Array>} Resolves with the activities\n   */\n  search(options) {\n    /* eslint max-nested-callbacks: [0] */\n    options = options || {};\n\n    let promise = Promise.resolve();\n\n    if (!this.webex.internal.device.searchEncryptionKeyUrl) {\n      promise = this.bindSearchKey();\n    }\n\n    return promise\n      .then(() =>\n        this.webex.request({\n          service: 'argonaut',\n          resource: 'search',\n          method: 'POST',\n          body: Object.assign(options, {\n            searchEncryptionKeyUrl: this.webex.internal.device.searchEncryptionKeyUrl,\n          }),\n        })\n      )\n      .then((res) => {\n        const resActivities = get(res, 'body.activities.items', []);\n\n        if (options.includeRemoteClusterReferences && res.body.breadcrumbs) {\n          const {breadcrumbs} = res.body;\n          const promises = [];\n\n          Object.keys(breadcrumbs).forEach((cluster) => {\n            // Map activity URLs to their cluster\n            const editedCluster = `${cluster}:identityLookup`;\n            const clusterActivityUrls = breadcrumbs[cluster].items.map(\n              (activity) => activity.activityUrl\n            );\n\n            // Find activities per cluster\n            const bulkActivitiesPromise = this.webex.internal.conversation\n              .bulkActivitiesFetch(clusterActivityUrls, {cluster: editedCluster})\n              .catch((err) => {\n                this.logger.warn('search: error fetching from remote clusters', err);\n\n                return Promise.resolve([]);\n              });\n\n            promises.push(bulkActivitiesPromise);\n          });\n\n          return Promise.all(promises).then((clusterResults) =>\n            clusterResults.reduce(\n              (accumulator, clusterResult) => accumulator.concat(clusterResult),\n              resActivities\n            )\n          );\n        }\n\n        return resActivities;\n      });\n  },\n});\n\nexport default Search;\n"],"mappings":"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"}