export declare const AUDIO = "audio";
export declare const AUDIO_INPUT = "audioinput";
export declare const AUDIO_STATUS = "audioStatus";
export declare const ALERT = "alert";
export declare const ANSWER = "answer";
export declare const CALL = "call";
export declare const CORRELATION_ID = "correlationId";
export declare const CONVERSATION_URL = "conversationUrl";
export declare const CALENDAR = "calendar";
export declare const CALENDAR_EVENTS_API = "calendarEvents";
export declare const CMR_MEETINGS = "cmrmeetings";
export declare const CLAIM = "claim";
export declare const CONTROLS = "controls";
export declare const CONTENT = "content";
export declare const COMPLETE = "complete";
export declare const WHITEBOARD = "whiteboard";
export declare const GATHERING = "gathering";
export declare const DEVELOPMENT = "development";
export declare const DECLINE = "decline";
export declare const ERROR = "error";
export declare const ENDED = "ended";
export declare const OFFER = "offer";
export declare const HECATE = "hecate";
export declare const HOST = "host";
export declare const JOIN = "join";
export declare const LEAVE = "leave";
export declare const LIVE = "live";
export declare const LOCAL = "local";
export declare const LOCI = "loci";
export declare const LOCUS_URL = "locusUrl";
export declare const END = "end";
export declare const MAX_RANDOM_DELAY_FOR_MEETING_INFO: number;
export declare const MEETINGINFO = "meetingInfo";
export declare const MEET = "meet";
export declare const MEET_M = "m";
export declare const MEDIA = "media";
export declare const OFFLINE = "offline";
export declare const ONLINE = "online";
export declare const PARTICIPANT = "participant";
export declare const PROVISIONAL_TYPE_DIAL_IN = "DIAL_IN";
export declare const PROVISIONAL_TYPE_DIAL_OUT = "DIAL_OUT";
export declare const REMOTE = "remote";
export declare const READY = "ready";
export declare const SEND_DTMF_ENDPOINT = "sendDtmf";
export declare const SENDRECV = "sendrecv";
export declare const SIP_URI = "sipUri";
export declare const SHARE = "share";
export declare const TYPE = "type";
export declare const VIDEO = "video";
export declare const VIDEO_INPUT = "videoinput";
export declare const VIDEO_STATUS = "videoStatus";
export declare const _ANSWER_ = "ANSWER";
export declare const _ACTIVE_ = "ACTIVE";
export declare const _CALL_ = "CALL";
export declare const _CREATED_ = "CREATED";
export declare const _CONFLICT_ = "CONFLICT";
export declare const _CONVERSATION_URL_ = "CONVERSATION_URL";
export declare const _ERROR_ = "ERROR";
export declare const _FORCED_ = "FORCED";
export declare const _IDLE_ = "IDLE";
export declare const _IN_LOBBY_ = "IN_LOBBY";
export declare const _IN_MEETING_ = "IN_MEETING";
export declare const _INCOMING_ = "INCOMING";
export declare const _IN_ = "IN";
export declare const _ID_ = "id";
export declare const _JOIN_ = "JOIN";
export declare const _JOINED_ = "JOINED";
export declare const _LOCUS_ID_ = "LOCUS_ID";
export declare const _LEFT_ = "LEFT";
export declare const _MEETING_LINK_ = "MEETING_LINK";
export declare const _MEETING_UUID_ = "MEETING_UUID";
export declare const _MEETING_ = "MEETING";
export declare const _MEETING_CENTER_ = "MEETING_CENTER";
export declare const _MEETING_ID_ = "MEETING_ID";
export declare const _NOT_IN_MEETING_ = "NOT_IN_MEETING";
export declare const _NONE_ = "NONE";
export declare const _OFFER_ = "OFFER";
export declare const _OBSERVE_ = "OBSERVE";
export declare const _PERSONAL_ROOM_ = "PERSONAL_ROOM";
export declare const _PEOPLE_: any;
export declare const _REQUESTED_ = "REQUESTED";
export declare const _RESOURCE_ROOM_ = "RESOURCE_ROOM";
export declare const _RECEIVE_ONLY_ = "RECVONLY";
export declare const _REMOVE_ = "REMOVE";
export declare const _ROOM_: any;
export declare const _SIP_BRIDGE_ = "SIP_BRIDGE";
export declare const _SIP_URI_ = "SIP_URI";
export declare const _SEND_RECEIVE_ = "SENDRECV";
export declare const _SEND_ONLY_ = "SENDONLY";
export declare const _INACTIVE_ = "INACTIVE";
export declare const _SLIDES_ = "SLIDES";
export declare const _S_LINE = "s=-";
export declare const _USER_ = "USER";
export declare const _UNKNOWN_ = "UNKNOWN";
export declare const _WEBEX_MEETING_ = "WEBEX_MEETING";
export declare const _WAIT_ = "WAIT";
export declare const _MOVE_MEDIA_ = "MOVE_MEDIA";
export declare const PARTICIPANT_DELTAS: {
    TARGETS: {
        AUDIO: string;
        VIDEO: string;
    };
    STATES: {
        DISABLED: string;
        MUTED: string;
        UNKNOWN: string;
        UNMUTED: string;
    };
};
export declare const ALTERNATE_REDIRECT_TRUE = "alternateRedirect=true";
export declare const HTTPS_PROTOCOL = "https://";
export declare const MEETINGS = "Meetings";
export declare const MEDIA_PEER_CONNECTION_NAME = "MediaPeerConnection";
export declare const SHARE_PEER_CONNECTION_NAME = "SharePeerConnection";
export declare const USE_URI_LOOKUP_FALSE = "useUriLookup=false";
export declare const WWW_DOT = "www.";
export declare const WEBEX_DOT_COM = "webex.com";
export declare const CONVERSATION_SERVICE = "identityLookup";
export declare const WBXAPPAPI_SERVICE = "webex-appapi-service";
export declare const DEFAULT_EXCLUDED_STATS: string[];
/**
 * @description @description Layout type for remote video participants. Allowed values are: Single, Equal, ActivePresence, Prominent, OnePlusN
 * @type {array}
 * @constant
 */
export declare const LAYOUT_TYPES: string[];
export declare const MODERATOR_TRUE = true;
export declare const MODERATOR_FALSE = false;
export declare const INTENT_TO_JOIN: number[];
export declare const ICE_TIMEOUT = 2000;
export declare const ICE_FAIL_TIMEOUT = 3000;
export declare const RETRY_TIMEOUT = 3000;
export declare const ROAP_SEQ_PRE = -1;
export declare const PC_BAIL_TIMEOUT = 8000;
export declare const DIALER_REGEX: {
    SIP_ADDRESS: RegExp;
    PHONE_NUMBER: RegExp;
    E164_FORMAT: RegExp;
};
export declare const IPV4_REGEX: RegExp;
export declare const VALID_EMAIL_ADDRESS: RegExp;
export declare const VALID_PMR_ADDRESS: RegExp;
export declare const VALID_PMR_LINK: RegExp;
export declare const VALID_PIN: RegExp;
export declare const UUID_REG: RegExp;
export declare const API: {
    CALLIOPEDISCOVERY: string;
    LOCUS: string;
};
export declare const CALENDAR_EVENTS: {
    CREATE: string;
    UPDATE: string;
    CREATE_MINIMAL: string;
    UPDATE_MINIMAL: string;
    DELETE: string;
};
export declare const DEFAULT_GET_STATS_FILTER: {
    types: string[];
};
export declare const RECORDING_STATE: {
    RECORDING: string;
    IDLE: string;
    PAUSED: string;
    RESUMED: string;
};
export declare const SHARE_STATUS: {
    NO_SHARE: string;
    REMOTE_SHARE_ACTIVE: string;
    LOCAL_SHARE_ACTIVE: string;
    WHITEBOARD_SHARE_ACTIVE: string;
};
export declare const EVENT_TRIGGERS: {
    MEETINGS_READY: string;
    MEETINGS_REGISTERED: string;
    MEETINGS_UNREGISTERED: string;
    MEDIA_READY: string;
    MEDIA_STOPPED: string;
    MEDIA_UPDATE: string;
    MEDIA_CODEC_MISSING: string;
    MEDIA_CODEC_LOADED: string;
    MEETING_STARTED_SHARING_LOCAL: string;
    MEETING_STOPPED_SHARING_LOCAL: string;
    MEETING_STARTED_SHARING_REMOTE: string;
    MEETING_STOPPED_SHARING_REMOTE: string;
    MEETING_STARTED_SHARING_WHITEBOARD: string;
    MEETING_STOPPED_SHARING_WHITEBOARD: string;
    MEETING_MEDIA_LOCAL_STARTED: string;
    MEETING_MEDIA_REMOTE_STARTED: string;
    MEETING_STARTED_RECORDING: string;
    MEETING_STOPPED_RECORDING: string;
    MEETING_STARTED_RECEIVING_TRANSCRIPTION: string;
    MEETING_STOPPED_RECEIVING_TRANSCRIPTION: string;
    MEETING_PAUSED_RECORDING: string;
    MEETING_RESUMED_RECORDING: string;
    MEETING_ADDED: string;
    MEETING_REMOVED: string;
    MEETING_RINGING: string;
    MEETING_RINGING_STOP: string;
    MEETING_SELF_LOBBY_WAITING: string;
    MEETING_SELF_GUEST_ADMITTED: string;
    MEETING_SELF_MUTED_BY_OTHERS: string;
    MEETING_SELF_UNMUTED_BY_OTHERS: string;
    MEETING_SELF_REQUESTED_TO_UNMUTE: string;
    MEETING_SELF_PHONE_AUDIO_UPDATE: string;
    MEETING_SELF_CANNOT_VIEW_PARTICIPANT_LIST: string;
    MEETING_SELF_IS_SHARING_BLOCKED: string;
    MEETING_CONTROLS_LAYOUT_UPDATE: string;
    MEETING_ENTRY_EXIT_TONE_UPDATE: string;
    MEETING_NO_FRAMES_SENT: string;
    MEETING_NO_VIDEO_ENCODED: string;
    MEMBERS_UPDATE: string;
    MEMBERS_CONTENT_UPDATE: string;
    MEMBERS_HOST_UPDATE: string;
    MEMBERS_SELF_UPDATE: string;
    MEETING_RECONNECTION_STARTING: string;
    MEETING_RECONNECTION_SUCCESS: string;
    MEETING_RECONNECTION_FAILURE: string;
    MEETING_UNLOCKED: string;
    MEETING_LOCKED: string;
    MEETING_INFO_AVAILABLE: string;
    MEETING_LOG_UPLOAD_SUCCESS: string;
    MEETING_LOG_UPLOAD_FAILURE: string;
    MEETING_ACTIONS_UPDATE: string;
    MEETING_STATE_CHANGE: string;
    MEETING_MEETING_CONTAINER_UPDATE: string;
    MEETING_EMBEDDED_APPS_UPDATE: string;
    MEDIA_QUALITY: string;
    MEETINGS_NETWORK_DISCONNECTED: string;
    MEETINGS_NETWORK_CONNECTED: string;
    MEETING_SELF_LEFT: string;
    NETWORK_QUALITY: string;
    MEDIA_NEGOTIATED: string;
};
export declare const EVENT_TYPES: {
    SELF: string;
    OTHER: string;
    LOCAL: string;
    REMOTE: string;
    REMOTE_AUDIO: string;
    REMOTE_VIDEO: string;
    REMOTE_SHARE: string;
    LOCAL_SHARE: string;
    ERROR: string;
};
export declare const MEETING_REMOVED_REASON: {
    SELF_REMOVED: string;
    FULLSTATE_REMOVED: string;
    MEETING_INACTIVE_TERMINATING: string;
    CLIENT_LEAVE_REQUEST: string;
    USER_ENDED_SHARE_STREAMS: string;
    NO_MEETINGS_TO_SYNC: string;
    MEETING_CONNECTION_FAILED: string;
};
export declare const CALL_REMOVED_REASON: {
    CALL_INACTIVE: string;
    PARTNER_LEFT: string;
    SELF_LEFT: string;
};
export declare const SHARE_STOPPED_REASON: {
    SELF_STOPPED: string;
    MEETING_REJOIN: string;
};
export declare const EVENTS: {
    ROAP_OK: string;
    ROAP_ANSWER: string;
    SELF_UNADMITTED_GUEST: string;
    SELF_ADMITTED_GUEST: string;
    MEDIA_INACTIVITY: string;
    CONVERSATION_URL_UPDATE: string;
    DESTROY_MEETING: string;
    REQUEST_UPLOAD_LOGS: string;
    REMOTE_RESPONSE: string;
    LOCUS_INFO_UPDATE_PARTICIPANTS: string;
    LOCUS_INFO_UPDATE_HOST: string;
    LOCUS_INFO_UPDATE_MEDIA_SHARES: string;
    LOCUS_INFO_UPDATE_SELF: string;
    LOCUS_INFO_UPDATE_URL: string;
    LOCUS_INFO_CAN_ASSIGN_HOST: string;
    DISCONNECT_DUE_TO_INACTIVITY: string;
};
export declare const MEDIA_STATE: {
    active: string;
    inactive: string;
};
export declare const ERROR_DICTIONARY: {
    PARAMETER: {
        NAME: string;
        MESSAGE: string;
        CODE: number;
    };
    INTENT_TO_JOIN: {
        NAME: string;
        MESSAGE: string;
        CODE: number;
    };
    JOIN_MEETING: {
        NAME: string;
        MESSAGE: string;
        CODE: number;
    };
    RECONNECTION: {
        NAME: string;
        MESSAGE: string;
        CODE: number;
    };
    MEDIA: {
        NAME: string;
        MESSAGE: string;
        CODE: number;
    };
    PERMISSION: {
        NAME: string;
        MESSAGE: string;
        CODE: number;
    };
    STATS: {
        NAME: string;
        MESSAGE: string;
        CODE: number;
    };
    PASSWORD: {
        NAME: string;
        MESSAGE: string;
        CODE: number;
    };
    CAPTCHA: {
        NAME: string;
        MESSAGE: string;
        CODE: number;
    };
};
export declare const FLOOR_ACTION: {
    GRANTED: string;
    RELEASED: string;
    ACCEPTED: string;
};
export declare const FULL_STATE: {
    INITIALIZING: string;
    INACTIVE: string;
    ACTIVE: string;
    TERMINATING: string;
    UNKNOWN: string;
};
export declare const HTTP_VERBS: {
    PUT: string;
    POST: string;
    GET: string;
    PATCH: string;
};
export declare const ICE_GATHERING_STATE: {
    NEW: string;
    GATHERING: string;
    COMPLETE: string;
};
export declare const ICE_STATE: {
    CHECKING: string;
    CONNECTED: string;
    CLOSED: string;
    COMPLETED: string;
    FAILED: string;
    DISCONNECTED: string;
};
export declare const CONNECTION_STATE: {
    NEW: string;
    CONNECTING: string;
    CONNECTED: string;
    CLOSED: string;
    FAILED: string;
    DISCONNECTED: string;
};
export declare const LOCUS: {
    STATE: {
        INACTIVE: string;
        ENDED: string;
        INITIALIZING: string;
    };
    SEQUENCE: {
        UN_DEF: string;
        EMPTY: string;
        DEF: string;
        NA: string;
        RANGE_START: string;
        RANGE_END: string;
    };
    SYNCDEBUG: string;
};
export declare const LOCUSINFO: {
    EVENTS: {
        CONTROLS_MEETING_LAYOUT_UPDATED: string;
        CONTROLS_RECORDING_UPDATED: string;
        CONTROLS_MEETING_TRANSCRIBE_UPDATED: string;
        CONTROLS_MEETING_CONTAINER_UPDATED: string;
        CONTROLS_ENTRY_EXIT_TONE_UPDATED: string;
        SELF_UNADMITTED_GUEST: string;
        SELF_ADMITTED_GUEST: string;
        SELF_REMOTE_MUTE_STATUS_UPDATED: string;
        LOCAL_UNMUTE_REQUESTED: string;
        LOCAL_UNMUTE_REQUIRED: string;
        SELF_MODERATOR_CHANGED: string;
        MEETING_UPDATE: string;
        MEDIA_STATUS_CHANGE: string;
        FULL_STATE_TYPE_UPDATE: string;
        FULL_STATE_MEETING_STATE_CHANGE: string;
        MEETING_STATE_CHANGE_TO_ACTIVE: string;
        MEETING_INFO_UPDATED: string;
        MEETING_LOCKED: string;
        MEETING_UNLOCKED: string;
        SELF_OBSERVING: string;
        DISCONNECT_DUE_TO_INACTIVITY: string;
        EMBEDDED_APPS_UPDATED: string;
        SELF_CANNOT_VIEW_PARTICIPANT_LIST_CHANGE: string;
        SELF_IS_SHARING_BLOCKED_CHANGE: string;
        LINKS_SERVICES: string;
    };
};
export declare const LOCUSEVENT: {
    LOCUS_MERCURY: string;
    CONTROLS_UPDATED: string;
    DIFFERENCE: string;
    FLOOR_GRANTED: string;
    FLOOR_RELEASED: string;
    MESSAGE_ROAP: string;
    PARTICIPANT_JOIN: string;
    PARTICIPANT_LEFT: string;
    PARTICIPANT_DECLINED: string;
    PARTICIPANT_UPDATED: string;
    PARTICIPANT_CONTROLS_UPDATED: string;
    PARTICIPANT_ROLES_UPDATED: string;
    PARTICIPANT_AUDIO_MUTED: string;
    PARTICIPANT_AUDIO_UNMUTED: string;
    PARTICIPANT_VIDEO_MUTED: string;
    PARTICIPANT_VIDEO_UNMUTED: string;
    RECORDING_STARTED: string;
    RECORDING_START_FAILED: string;
    RECORDING_STOPPED: string;
    SELF_CHANGED: string;
};
export declare const MEDIA_TRACK_CONSTRAINT: {
    CURSOR: {
        AWLAYS: string;
        MOTION: string;
        NEVER: string;
    };
};
export declare const MEETING_ERRORS: {
    METRICS_NOT_SERVER_OR_CLIENT_EXCEPTION: string;
    BIDIRECTIONAL_ROSTER_NOT_ALLOWED: string;
    INVALID_LOCUS_URL: string;
    ARGUMENT_NULL_OR_EMPTY: string;
    INVALID_USER: string;
    INVALID_PHONE_NUMBER_OR_COUNTRY_CODE: string;
    EMPTY_PHONE_NUMBER_OR_COUNTRY_CODE: string;
    PHONE_NUMBER_INVALID_COUNTRY_CODE: string;
    PHONE_NUMBER_NOT_A_NUMBER: string;
    PHONE_NUMBER_TOO_SHORT_AFTER_IDD: string;
    PHONE_NUMBER_TOO_SHORT_NSN: string;
    PHONE_NUMBER_TOO_LONG: string;
    INVALID_DIALABLE_KEY: string;
    INVALID_MEETING_LINK: string;
    INVALID_SINCE_OR_SEQUENCE_HASH_IN_REQUEST: string;
    INVALID_LOCUS_ID: string;
    EMPTY_SCHEDULED_MEETING_START_TIME: string;
    INVALID_SCHEDULED_MEETING_DURATION_MINUTES: string;
    INVALID_SCHEDULED_MEETING_REMINDER_DURATION_MINUTES: string;
    EMPTY_SCHEDULED_MEETING_ORGANIZER: string;
    INVALID_MEETING_ID_FORMAT: string;
    INVALID_SIP_URL_FORMAT: string;
    EMPTY_INVITEE_RECORD: string;
    EMPTY_INVITEE_ADDRESS: string;
    DESKPHONE_NOTHING_DIALABLE_FOUND: string;
    INVALID_INVITEE_ADDRESS: string;
    INVALID_ATTENDEE_ID: string;
    INVALID_IN_LOBBY: string;
    MISSING_REQUESTING_PARTICIPANT_ID: string;
    INVALID_REQUESTING_PARTICIPANT_ID: string;
    SUPPLEMENTARY_USER_INFO_NOT_FOUND: string;
    UNAUTHORIZED: string;
    REMOVED_PARTICIPANT: string;
    FREE_USER_MAX_PARTICIPANTS_EXCEEDED: string;
    PAID_USER_MAX_PARTICIPANTS_EXCEEDED: string;
    SERVICE_MAX_PARTICIPANTS_EXCEEDED: string;
    INACTIVE: string;
    ONE_ON_ONE_TO_SELF_NOT_ALLOWED: string;
    JOIN_RESTRICTED_USER: string;
    GET_RESTRICTED_USER: string;
    JOIN_RESTRICTED_USER_NOT_IN_ROOM: string;
    CREATE_MEDIA_RESTRICTED_USER: string;
    DUPLICATE_RESOURCE_CREATION_REQUEST: string;
    MEETING_NOT_FOUND: string;
    NOT_WEBEX_SITE: string;
    INVALID_SCHEDULED_MEETING_ORGANIZER: string;
    FREE_USER_MAX_PARTICIPANTS_JOINED_EXCEEDED: string;
    PAID_USER_MAX_PARTICIPANTS_JOINED_EXCEEDED: string;
    SERVICE_MAX_PARTICIPANTS_ROSTER_EXCEEDED: string;
    SERVICE_INITIAL_PARTICIPANTS_ROSTER_EXCEEDED: string;
    RESOURCE_GUEST_FORBIDDEN: string;
    SERVICE_NO_MACHINE_OR_SERVICE_ACCOUNT: string;
    MODERATOR_ROLE_REMOVAL_NOT_ALLOWED: string;
    RECORDING_CONTROL_NOT_SUPPORTED: string;
    HOST_PIN_LOCKED: string;
    INVALID_HOST_PIN: string;
    REQUESTING_PARTICIPANT_NOT_MODERATOR: string;
    CONVERSATION_NOT_FOUND: string;
    MEETING_LINK_NOT_FOUND: string;
    MEETING_INFO_NOT_FOUND: string;
    SCHEDULED_MEETING_NOT_FOUND: string;
    RECORDING_NOT_STARTED: string;
    RECORDING_NOT_ENABLED: string;
    RECORDING_USER_STORAGE_FULL: string;
    RECORDING_SITE_STORAGE_FULL: string;
    NO_SCHEDULED_MEETING: string;
    MEETING_FULL_UPDATE_NOT_ALLOWED: string;
    MODERATOR_ROLE_REMOVAL_NOT_VALID: string;
    MODERATOR_ROLE_ADDITION_NOT_VALID: string;
    INVALID_CALL_START_TIME: string;
    MEETING_STARTED_UPDATE_NOT_ALLOWED: string;
    EXCEEDED_MAX_JOINED_PARTICIPANTS: string;
    EXCEEDED_SERVICE_MAX_PARTICIPANTS: string;
    MEETING_IS_LOCKED: string;
    MEETING_IS_TERMINATING: string;
    MEETING_REQUIRE_MODERATOR_PIN_INTENT: string;
    MEETING_REQUIRE_MODERATOR_PIN: string;
    MEETING_REQUIRE_MODERATOR_ROLE: string;
    PMR_ACCOUNT_SUSPENDED: string;
    PMR_ACCOUNT_LOCKED: string;
    INVALID_JOIN_TIME: string;
    REQUIRES_WEBEX_LOGIN: string;
    TOO_MANY_REQUESTS: string;
    UNABLE_TO_LOOK_UP_DEVICE_INFORMATION: string;
    UNABLE_TO_LOOK_UP_CONVERSATION: string;
    UNABLE_TO_LOOK_UP_CI_USER: string;
    UNABLE_TO_CREATE_CONFLUENCE: string;
    SERVICE_UNAVAILABLE: string;
    SOCKET_TIMEOUT: string;
    NO_HTTP_RESPONSE: string;
};
export declare const MEETING_END_REASON: {
    INACTIVE: string;
    MEDIA_RELEASED: string;
};
export declare const DISPLAY_HINTS: {
    ADD_GUEST: string;
    ROSTER_WAITING_TO_JOIN: string;
    RECORDING_CONTROL_START: string;
    RECORDING_CONTROL_PAUSE: string;
    RECORDING_CONTROL_STOP: string;
    RECORDING_CONTROL_RESUME: string;
    LOCK_CONTROL_UNLOCK: string;
    LOCK_CONTROL_LOCK: string;
    LOCK_STATUS_LOCKED: string;
    LOCK_STATUS_UNLOCKED: string;
    RAISE_HAND: string;
    LOWER_ALL_HANDS: string;
    LOWER_SOMEONE_ELSES_HAND: string;
    LEAVE_TRANSFER_HOST_END_MEETING: string;
    LEAVE_END_MEETING: string;
    CAPTION_START: string;
    CAPTION_STATUS_ACTIVE: string;
    DISPLAY_REAL_TIME_TRANSLATION: string;
    ENABLE_CAPTION_PANEL: string;
    DISPLAY_NON_ENGLISH_ASR: string;
    TRANSCRIPTION_CONTROL_START: string;
    TRANSCRIPTION_CONTROL_STOP: string;
    WEBEX_ASSISTANT_STATUS_ACTIVE: string;
    WAITING_FOR_OTHERS: string;
    ENABLE_MUTE_ON_ENTRY: string;
    DISABLE_MUTE_ON_ENTRY: string;
    ENABLE_HARD_MUTE: string;
    DISABLE_HARD_MUTE: string;
};
export declare const SELF_ROLES: {
    COHOST: string;
    MODERATOR: string;
};
export declare const MEETING_STATE: {
    STATES: {
        IDLE: string;
        INCOMING: string;
        DIALING: string;
        NOTIFIED: string;
        DECLINED: string;
        ON_GOING: string;
        JOINED: string;
        TERMINATING: string;
        LEFT: string;
        ENDED: string;
        ERROR: string;
    };
};
export declare const MEETING_STATE_MACHINE: {
    TRANSITIONS: {
        FAIL: string;
        RING: string;
        REMOTE: string;
        JOIN: string;
        DECLINE: string;
        LEAVE: string;
        END: string;
        RESET: string;
    };
    STATES: {
        ERROR: string;
        IDLE: string;
        ENDED: string;
        DECLINED: string;
        RINGING: string;
        JOINED: string;
        ANSWERED: string;
    };
};
export declare const MEETING_AUDIO_STATE_MACHINE: {
    TRANSITIONS: {
        TOGGLE: string;
        INIT: string;
    };
    STATES: {
        MUTE_SELF: string;
        UNMUTE_SELF: string;
    };
};
export declare const MEETING_VIDEO_STATE_MACHINE: {
    TRANSITIONS: {
        TOGGLE: string;
        INIT: string;
    };
    STATES: {
        MUTE_SELF: string;
        UNMUTE_SELF: string;
    };
};
export declare const PEER_CONNECTION_STATE: {
    CLOSED: string;
    FAILED: string;
};
export declare const RECONNECTION: {
    STATE: {
        IN_PROGRESS: string;
        COMPLETE: string;
        FAILURE: string;
        DEFAULT_TRY_COUNT: number;
        DEFAULT_STATUS: string;
    };
};
export declare const RESOURCE: {
    CLUSTERS: string;
    REACHABILITY: string;
    LOCI: string;
};
export declare const REACHABILITY: {
    localStorage: string;
};
export declare const ROAP: {
    ROAP_TRANSITIONS: {
        STEP: string;
    };
    ROAP_TYPES: {
        OFFER: string;
        ANSWER: string;
        OK: string;
        ERROR: string;
        SHUTDOWN: string;
        OFFER_REQUEST: string;
        TURN_DISCOVERY_REQUEST: string;
        TURN_DISCOVERY_RESPONSE: string;
    };
    ROAP_STATE: {
        INIT: string;
        WAIT_RX_OFFER: string;
        WAIT_RX_ANSWER: string;
        WAIT_RX_OK: string;
        WAIT_TX_OFFER: string;
        WAIT_TX_ANSWER: string;
        WAIT_TX_OK: string;
        IDLE_LOCAL_OFFER: string;
        IDLE_REMOTE_OFFER: string;
        GLARE: string;
        ERROR: string;
    };
    ROAP_SIGNAL: {
        RX_OFFER: string;
        TX_OFFER: string;
        RX_ANSWER: string;
        TX_ANSWER: string;
        RX_OK: string;
        TX_OK: string;
        GLARE_RESOLVED: string;
    };
    RECEIVE_ROAP_MSG: string;
    SEND_ROAP_MSG: string;
    SEND_ROAP_MSG_SUCCESS: string;
    RESET_ROAP_STATE: string;
    RECEIVE_CALL_LEAVE: string;
    ROAP_MERCURY: string;
    ROAP_VERSION: string;
    RX_: string;
    TX_: string;
};
export declare const MediaContent: {
    main: string;
    slides: string;
};
export declare const SDP: {
    A_CONTENT_SLIDES: string;
    ROLLBACK: string;
    HAVE_LOCAL_OFFER: string;
    HAVE_REMOTE_OFFER: string;
    STABLE: string;
    OFFER: string;
    M_LINE: string;
    MAX_FS: string;
    B_LINE: string;
    PERIODIC_KEYFRAME: string;
    CARRIAGE_RETURN: string;
    BAD_MEDIA_PORTS: number[];
};
export declare const NETWORK_STATUS: {
    DISCONNECTED: string;
    RECONNECTING: string;
    CONNECTED: string;
};
export declare const NETWORK_TYPE: {
    VPN: string;
    UNKNOWN: string;
    WIFI: string;
    ETHERNET: string;
};
export declare const STATS: {
    AUDIO_CORRELATE: string;
    VIDEO_CORRELATE: string;
    SHARE_CORRELATE: string;
    SEND_DIRECTION: string;
    RECEIVE_DIRECTION: string;
    REMOTE: string;
    LOCAL: string;
};
export declare const MQA_STATS: {
    MQA_SIZE: number;
    CA_TYPE: string;
    DEFAULT_IP: string;
    DEFAULT_SHARE_SENDER_STATS: {
        common: {
            common: {
                direction: string;
                isMain: boolean;
                mariFecEnabled: boolean;
                mariQosEnabled: boolean;
                multistreamEnabled: boolean;
            };
            availableBitrate: number;
            dtlsBitrate: number;
            dtlsPackets: number;
            fecBitrate: number;
            fecPackets: number;
            maxBitrate: number;
            queueDelay: number;
            remoteJitter: number;
            remoteLossRate: number;
            remoteReceiveRate: number;
            roundTripTime: number;
            rtcpBitrate: number;
            rtcpPackets: number;
            rtpBitrate: number;
            rtpPackets: number;
            stunBitrate: number;
            stunPackets: number;
            transportType: string;
        };
        streams: {
            common: {
                codec: string;
                duplicateSsci: number;
                requestedBitrate: number;
                requestedFrames: number;
                rtpPackets: number;
                ssci: number;
                transmittedBitrate: number;
                transmittedFrameRate: number;
            };
            h264CodecProfile: string;
            localConfigurationChanges: number;
            remoteConfigurationChanges: number;
            requestedFrameSize: number;
            requestedKeyFrames: number;
            transmittedFrameSize: number;
            transmittedHeight: number;
            transmittedKeyFrames: number;
            transmittedWidth: number;
        }[];
    };
    intervalMetadata: {
        memoryUsage: {
            cpuBitWidth: number;
            mainProcessMaximumMemoryBytes: number;
            osBitWidth: number;
            processAverageMemoryUsage: number;
            processMaximumMemoryBytes: number;
            processMaximumMemoryUsage: number;
            systemAverageMemoryUsage: number;
            systemMaximumMemoryUsage: number;
        };
        peerReflexiveIP: string;
        processAverageCPU: number;
        processMaximumCPU: number;
        systemAverageCPU: number;
        systemMaximumCPU: number;
    };
};
export declare const QUALITY_LEVELS: {
    LOW: string;
    MEDIUM: string;
    HIGH: string;
    '360p': string;
    '480p': string;
    '720p': string;
    '1080p': string;
};
export declare const AVAILABLE_RESOLUTIONS: {
    '360p': {
        video: {
            width: {
                max: number;
                ideal: number;
            };
            height: {
                max: number;
                ideal: number;
            };
        };
    };
    '480p': {
        video: {
            width: {
                max: number;
                ideal: number;
            };
            height: {
                max: number;
                ideal: number;
            };
        };
    };
    '720p': {
        video: {
            width: {
                max: number;
                ideal: number;
            };
            height: {
                max: number;
                ideal: number;
            };
        };
    };
    '1080p': {
        video: {
            width: {
                max: number;
                ideal: number;
            };
            height: {
                max: number;
                ideal: number;
            };
        };
    };
};
export declare const VIDEO_RESOLUTIONS: {
    [x: string]: {
        video: {
            width: {
                max: number;
                ideal: number;
            };
            height: {
                max: number;
                ideal: number;
            };
        };
    };
};
/**
 * Max frame sizes based on h264 configs
 * https://en.wikipedia.org/wiki/Advanced_Video_Coding
 */
export declare const REMOTE_VIDEO_CONSTRAINTS: {
    MAX_FS: {
        [x: string]: number;
    };
};
export declare const MQA_INTEVAL = 60000;
export declare const MEDIA_DEVICES: {
    MICROPHONE: string;
    SPEAKER: string;
    CAMERA: string;
};
export declare const METRICS_JOIN_TIMES_MAX_DURATION = 1200000;
export declare const PSTN_STATUS: {
    JOINED: string;
    CONNECTED: string;
    LEFT: string;
    TRANSFERRING: string;
    SUCCESS: string;
    UNKNOWN: string;
};
export declare const PASSWORD_STATUS: {
    NOT_REQUIRED: string;
    REQUIRED: string;
    UNKNOWN: string;
    VERIFIED: string;
};
export declare const MEETING_INFO_FAILURE_REASON: {
    NONE: string;
    WRONG_PASSWORD: string;
    WRONG_CAPTCHA: string;
    OTHER: string;
};
export declare const BNR_STATUS: {
    SHOULD_ENABLE: string;
    ENABLED: string;
    SHOULD_DISABLE: string;
    NOT_ENABLED: string;
};
export declare const EMBEDDED_APP_TYPES: {
    SLIDO: string;
    OTHER: string;
};
