{"version":3,"names":["_constants","require","_loggerProxy","_interopRequireDefault","_triggerProxy","MeetingsUtil","getMeetingAddedType","type","_LOCUS_ID_","_INCOMING_","_CREATED_","handleRoapMercury","envelope","meetingCollection","data","eventType","LOCUSEVENT","MESSAGE_ROAP","meeting","getByKey","CORRELATION_ID","correlationId","roap","roapEvent","checkForCorrelationId","deviceUrl","locus","devices","self","foundDevice","find","device","url","parseDefaultSiteFromMeetingPreferences","userPreferences","result","sites","defaultSite","site","default","siteUrl","hasH264Codec","_asyncToGenerator2","_regenerator","mark","_callee","hasCodec","pc","offer","wrap","_callee$","_context","prev","next","window","RTCPeerConnection","createOffer","offerToReceiveVideo","sent","sdp","match","close","t0","LoggerProxy","logger","warn","abrupt","stop","checkH264Support","_checkH264Support","_callee2","options","_this","_ref2","firstChecked","disableNotifications","delay","maxDuration","shouldTrigger","shouldStopChecking","_callee2$","_context2","undefined","_now","Trigger","trigger","file","function","EVENT_TRIGGERS","MEDIA_CODEC_LOADED","log","error","MEDIA_CODEC_MISSING","setTimeout","timestamp","call","_x","apply","arguments","_default","exports"],"sources":["util.ts"],"sourcesContent":["/* globals window */\n\nimport {\n  _LOCUS_ID_,\n  _INCOMING_,\n  _CREATED_,\n  LOCUSEVENT,\n  CORRELATION_ID,\n  EVENT_TRIGGERS,\n} from '../constants';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport Trigger from '../common/events/trigger-proxy';\n\n/**\n * Meetings Media Codec Missing Event\n * Emitted when H.264 codec is not\n * found in the browser.\n * @event media:codec:missing\n * @instance\n * @memberof MeetingsUtil\n */\n\n/**\n * Meetings Media Codec Loaded Event\n * Emitted when H.264 codec has been\n * loaded in the browser.\n * @event media:codec:loaded\n * @instance\n * @memberof MeetingsUtil\n */\n\nconst MeetingsUtil: any = {};\n\nMeetingsUtil.getMeetingAddedType = (type) => (type === _LOCUS_ID_ ? _INCOMING_ : _CREATED_);\n\nMeetingsUtil.handleRoapMercury = (envelope, meetingCollection) => {\n  const {data} = envelope;\n  const {eventType} = data;\n\n  if (eventType === LOCUSEVENT.MESSAGE_ROAP) {\n    const meeting = meetingCollection.getByKey(CORRELATION_ID, data.correlationId);\n\n    if (meeting) {\n      meeting.roap.roapEvent(data);\n    }\n  }\n};\n\nMeetingsUtil.checkForCorrelationId = (deviceUrl, locus) => {\n  let devices = [];\n\n  if (locus) {\n    if (locus && locus.self && locus.self.devices) {\n      devices = locus.self.devices;\n    }\n\n    const foundDevice = devices.find((device) => device.url === deviceUrl);\n\n    if (foundDevice && foundDevice.correlationId) {\n      return foundDevice.correlationId;\n    }\n  }\n\n  return false;\n};\n\nMeetingsUtil.parseDefaultSiteFromMeetingPreferences = (userPreferences) => {\n  let result = '';\n\n  if (userPreferences && userPreferences.sites) {\n    const defaultSite = userPreferences.sites.find((site) => site.default);\n\n    if (defaultSite) {\n      result = defaultSite.siteUrl;\n    }\n  }\n\n  return result;\n};\n\n/**\n * Will check to see if the H.264 media codec is supported.\n * @async\n * @private\n * @returns {Promise<boolean>}\n */\nMeetingsUtil.hasH264Codec = async () => {\n  let hasCodec = false;\n\n  try {\n    const pc = new window.RTCPeerConnection();\n    const offer = await pc.createOffer({offerToReceiveVideo: true});\n\n    if (offer.sdp.match(/^a=rtpmap:\\d+\\s+H264\\/\\d+/m)) {\n      hasCodec = true;\n    }\n    pc.close();\n  } catch (error) {\n    LoggerProxy.logger.warn(\n      'Meetings:util#hasH264Codec --> Error creating peerConnection for H.264 test.'\n    );\n  }\n\n  return hasCodec;\n};\n\n/**\n * Notifies the user whether or not the H.264\n * codec is present. Will continuously check\n * until max duration.\n * @async\n * @private\n * @param {object} options\n * @param {Number} options.firstChecked Timestamp in milliseconds\n * @param {boolean} options.disableNotifications Default is false. Boolean to enable/disable notification and events\n * @returns {undefined}\n */\nMeetingsUtil.checkH264Support = async function checkH264Support(options: {\n  firstChecked: number;\n  disableNotifications: boolean;\n}) {\n  const {hasH264Codec} = MeetingsUtil;\n  const {firstChecked, disableNotifications} = options || {};\n  const delay = 5e3; // ms\n  const maxDuration = 3e5; // ms\n  const shouldTrigger = firstChecked === undefined;\n  const shouldStopChecking = firstChecked && Date.now() - firstChecked >= maxDuration;\n\n  // Disable notifications and start H.264 download only\n  if (disableNotifications) {\n    hasH264Codec();\n\n    return;\n  }\n\n  // Codec loaded trigger event notification\n  if (await hasH264Codec()) {\n    Trigger.trigger(\n      this,\n      {\n        file: 'meetings/util',\n        function: 'checkH264Support',\n      },\n      EVENT_TRIGGERS.MEDIA_CODEC_LOADED\n    );\n    LoggerProxy.logger.log('Meetings:util#checkH264Support --> H264 codec loaded successfully.');\n\n    return;\n  }\n\n  // Stop checking if past the timelimit\n  if (shouldStopChecking) {\n    LoggerProxy.logger.error(\n      'Meetings:util#checkH264Support --> Timed out waiting for H264 codec to load.'\n    );\n\n    return;\n  }\n\n  // Trigger only once\n  if (shouldTrigger) {\n    Trigger.trigger(\n      this,\n      {\n        file: 'meetings/util',\n        function: 'checkH264Support',\n      },\n      EVENT_TRIGGERS.MEDIA_CODEC_MISSING\n    );\n    LoggerProxy.logger.log('Meetings:util#checkH264Support --> H264 codec is missing.');\n  }\n\n  // Keep checking in intervals to see if codec loaded\n  window.setTimeout(() => {\n    const timestamp = firstChecked || Date.now();\n\n    MeetingsUtil.checkH264Support.call(this, {firstChecked: timestamp});\n  }, delay);\n};\n\nexport default MeetingsUtil;\n"],"mappings":"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"}