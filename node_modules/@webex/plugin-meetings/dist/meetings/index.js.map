{"version":3,"names":["require","_webexCore","_metrics","_interopRequireDefault","_config","_loggerConfig","_config2","_loggerProxy","_request","_triggerProxy","_media","_util","_constants","_constants2","_meetingInfo","_meetingInfoV","_meeting","_personalMeetingRoom","_reachability","_request2","_passwordError","_captchaError","_collection","_util2","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","_Reflect$construct","arguments","apply","_possibleConstructorReturn2","Reflect","sham","Proxy","Boolean","prototype","valueOf","call","e","Meetings","_WebexPlugin","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","_defineProperty2","_assertThisInitialized2","MEETINGS","request","Request","parent","webex","loggerRequest","LoggerRequest","meetingCollection","MeetingCollection","personalMeetingRoom","reachability","registered","preferredWebexSite","media","getUserMedia","Media","getSupportedDevice","onReady","_createClass2","key","value","handleLocusEvent","data","_data$locus$info","_data$locus","_data$locus$replaces","_this2","useRandomDelayForInfo","undefined","meeting","getByKey","LOCUS_URL","locusUrl","CORRELATION_ID","MeetingsUtil","checkForCorrelationId","internal","device","url","locus","SIP_URI","self","callbackInfo","callbackAddress","info","isUnifiedSpaceMeeting","CONVERSATION_URL","conversationUrl","replaces","fullState","state","LOCUS","STATE","INACTIVE","LoggerProxy","logger","warn","_LEFT_","removed","create","_LOCUS_ID_","then","newMeeting","locusInfo","initialSetup","catch","error","finally","getMeetingByType","_ID_","id","Metrics","postEvent","event","eventType","REMOTE_STARTED","trigger","MERCURY_EVENT","Trigger","file","function","EVENT_TRIGGERS","MEETING_ADDED","type","_MEETING_","_JOIN_","_INCOMING_","parse","handleLocusMercury","envelope","LOCUSEVENT","MESSAGE_ROAP","handleMercuryOffline","MEETINGS_NETWORK_DISCONNECTED","listenForEvents","_this3","mercury","on","LOCUS_MERCURY","ROAP","ROAP_MERCURY","handleRoapMercury","ONLINE","syncMeetings","OFFLINE","stopListeningForEvents","off","_this4","once","READY","StaticConfig","set","config","LoggerConfig","logging","meetingInfo","experimental","enableUnifiedMeetings","MeetingInfoV2","MeetingInfo","PersonalMeetingRoom","MEETINGS_READY","checkH264Support","disableNotifications","_toggleUnifiedMeetings","changeState","_this$config","_this$config$experime","_toggleTurnDiscovery","enable","enableTurnDiscovery","_toggleAdhocMeetings","_this$config2","_this$config2$experim","enableAdhocMeetings","register","_this5","canAuthorize","_promise","reject","Error","resolve","all","fetchUserPreferredWebexSite","getGeoHint","startReachability","message","connect","MEETINGS_REGISTERED","sendBehavioralMetric","BEHAVIORAL_METRICS","MEETINGS_REGISTRATION_SUCCESS","MEETINGS_REGISTRATION_FAILED","reason","stack","unregister","_this6","disconnect","MEETINGS_UNREGISTERED","uploadLogs","_this7","options","uploadResult","MEETING_LOG_UPLOAD_SUCCESS","meetingId","details","uploadError","MEETING_LOG_UPLOAD_FAILURE","UPLOAD_LOGS_FAILURE","meetingsId","code","setReachability","Reachability","getReachability","gatherReachability","_this8","fetchGeoHint","res","geoHintInfo","_this9","getMeetingPreferences","parseDefaultSiteFromMeetingPreferences","getPersonalMeetingRoom","destroy","MeetingUtil","cleanUp","delete","MEETING_REMOVED","destination","_this10","fetchInfoOptions","targetDest","_CONVERSATION_URL_","foundMeeting","foundMeetingIsNotCalendarMeeting","scheduledMeeting","createMeeting","createdMeeting","EVENTS","DESTROY_MEETING","payload","autoUploadLogs","_createdMeeting$locus","_createdMeeting$locus2","_createdMeeting$locus3","_createdMeeting$locus4","callStart","lastActive","correlationId","feedbackId","locusId","webExMeetingId","REQUEST_UPLOAD_LOGS","meetingInstance","_meetingInstance$locu","_meetingInstance$locu2","_meetingInstance$locu3","_meetingInstance$locu4","_createMeeting","_asyncToGenerator2","_regenerator","mark","_callee","_destination$fullStat","waitingTime","startTime","startTimeDate","startTimeDatestamp","timeToStart","maxWaitingTime","isMeetingActive","meetingAddedType","_args","wrap","_callee$","_context","prev","next","Meeting","userId","deviceUrl","orgId","roapSeq","meetingInfoProvider","destinationType","Date","getTime","_now","Math","max","min","MAX_RANDOM_DELAY_FOR_MEETING_INFO","round","random","active","fetchMeetingInfoTimeoutId","setTimeout","fetchMeetingInfo","parseMeetingInfo","t0","CaptchaError","PasswordError","debug","sipUri","setSipUri","getMeetingAddedType","finish","abrupt","stop","_x","getAllMeetings","getAll","_this11","getActiveMeetings","locusArray","activeLocusUrl","loci","forEach","push","meetingsCollection","_keys","_i","_Object$values","_values","includes","MEETING_REMOVED_REASON","NO_MEETINGS_TO_SYNC","getScheduledMeetings","scheduled","getLogger","get","WebexPlugin","exports"],"sources":["index.ts"],"sourcesContent":["/* eslint no-shadow: [\"error\", { \"allow\": [\"eventType\"] }] */\n\nimport '@webex/internal-plugin-mercury';\n// @ts-ignore\nimport {WebexPlugin} from '@webex/webex-core';\n\nimport 'webrtc-adapter';\n\nimport Metrics from '../metrics';\nimport {trigger, eventType} from '../metrics/config';\nimport LoggerConfig from '../common/logs/logger-config';\nimport StaticConfig from '../common/config';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport LoggerRequest from '../common/logs/request';\nimport Trigger from '../common/events/trigger-proxy';\nimport Media from '../media';\nimport MeetingUtil from '../meeting/util';\nimport {\n  MEETINGS,\n  EVENTS,\n  EVENT_TRIGGERS,\n  READY,\n  LOCUSEVENT,\n  LOCUS_URL,\n  MAX_RANDOM_DELAY_FOR_MEETING_INFO,\n  ROAP,\n  ONLINE,\n  OFFLINE,\n  _MEETING_,\n  _JOIN_,\n  _LOCUS_ID_,\n  _INCOMING_,\n  LOCUS,\n  CORRELATION_ID,\n  SIP_URI,\n  _LEFT_,\n  _ID_,\n  MEETING_REMOVED_REASON,\n  _CONVERSATION_URL_,\n  CONVERSATION_URL,\n} from '../constants';\nimport BEHAVIORAL_METRICS from '../metrics/constants';\nimport MeetingInfo from '../meeting-info';\nimport MeetingInfoV2 from '../meeting-info/meeting-info-v2';\nimport Meeting from '../meeting';\nimport PersonalMeetingRoom from '../personal-meeting-room';\nimport Reachability from '../reachability';\nimport Request from './request';\nimport PasswordError from '../common/errors/password-error';\nimport CaptchaError from '../common/errors/captcha-error';\n\nimport MeetingCollection from './collection';\nimport MeetingsUtil from './util';\n\n/**\n * Meetings Ready Event\n * Emitted when the meetings instance on webex is ready\n * @event meetings:ready\n * @instance\n * @memberof Meetings\n */\n\n/**\n * Meetings Network Disconnected Event\n * Emitted when the meetings instance is disconnected from\n * the internal mercury server\n * @event network:disconnected\n * @instance\n * @memberof Meetings\n */\n\n/**\n * Meetings Registered Event\n * Emitted when the meetings instance has been registered and listening\n * @event meetings:registered\n * @instance\n * @memberof Meetings\n */\n\n/**\n * Meeting Removed Event\n * Emitted when a meeting was removed from the cache of meetings\n * @event meeting:removed\n * @instance\n * @type {Object}\n * @property {String} meetingId the removed meeting\n * @property {Object} response the server response\n * @property {String} type what type of meeting it was\n * @memberof Meetings\n */\n\n/**\n * Meeting Added Event\n * Emitted when a meeting was added to the cache of meetings\n * @event meeting:added\n * @instance\n * @type {Object}\n * @property {String} meetingId the added meeting\n * @property {String} type what type of meeting it was\n * @memberof Meetings\n */\n\n/**\n * Maintain a cache of meetings and sync with services.\n * @class\n */\nexport default class Meetings extends WebexPlugin {\n  loggerRequest: any;\n  media: any;\n  meetingCollection: any;\n  personalMeetingRoom: any;\n  preferredWebexSite: any;\n  reachability: any;\n  registered: any;\n  request: any;\n  geoHintInfo: any;\n  meetingInfo: any;\n\n  namespace = MEETINGS;\n\n  /**\n   * Initializes the Meetings Plugin\n   * @constructor\n   * @public\n   * @memberof Meetings\n   */\n  constructor(...args) {\n    super(...args);\n\n    /**\n     * The Meetings request to interact with server\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Meetings\n     */\n    // @ts-ignore\n    this.request = new Request({}, {parent: this.webex});\n    /**\n     * Log upload request helper\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Meetings\n     */\n    // @ts-ignore\n    this.loggerRequest = new LoggerRequest({webex: this.webex});\n    this.meetingCollection = new MeetingCollection();\n    /**\n     * The PersonalMeetingRoom object to interact with server\n     * @instance\n     * @type {Object}\n     * @public\n     * @memberof Meetings\n     */\n    this.personalMeetingRoom = null;\n    /**\n     * The Reachability object to interact with server, starts as null until {@link Meeting#setReachability} is called\n     * starts as null\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Meetings\n     */\n    this.reachability = null;\n\n    /**\n     * If the meetings plugin has been registered and listening via {@link Meetings#register}\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Meetings\n     */\n    this.registered = false;\n\n    /**\n     * This values indicates the preferred webex site the user will start there meeting, getsits value from {@link Meetings#register}\n     * @instance\n     * @type {String}\n     * @private\n     * @memberof Meetings\n     */\n    this.preferredWebexSite = '';\n\n    /**\n     * The public interface for the internal Media util files. These are helpful to expose outside the context\n     * of a meeting so that a user can access media without creating a meeting instance.\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Meetings\n     */\n    this.media = {\n      getUserMedia: Media.getUserMedia,\n      getSupportedDevice: Media.getSupportedDevice,\n    };\n\n    this.onReady();\n  }\n\n  /**\n   * handle locus events and takes meeting actions with them as they come in\n   * @param {Object} data a locus event\n   * @param {String} data.locusUrl\n   * @param {Object} data.locus\n   * @param {Boolean} useRandomDelayForInfo whether a random delay should be added to fetching meeting info\n   * @param {String} data.eventType\n   * @returns {undefined}\n   * @private\n   * @memberof Meetings\n   */\n  private handleLocusEvent(data: {locusUrl: string; locus: any}, useRandomDelayForInfo = false) {\n    let meeting = null;\n\n    // getting meeting by correlationId. This will happen for the new event\n    // Either the locus\n    // TODO : Add check for the callBack Address\n    meeting =\n      this.meetingCollection.getByKey(LOCUS_URL, data.locusUrl) ||\n      // @ts-ignore\n      this.meetingCollection.getByKey(\n        CORRELATION_ID,\n        // @ts-ignore\n        MeetingsUtil.checkForCorrelationId(this.webex.internal.device.url, data.locus)\n      ) ||\n      this.meetingCollection.getByKey(\n        SIP_URI,\n        data.locus.self &&\n          data.locus.self.callbackInfo &&\n          data.locus.self.callbackInfo.callbackAddress\n      ) ||\n      (data.locus.info?.isUnifiedSpaceMeeting\n        ? undefined\n        : this.meetingCollection.getByKey(CONVERSATION_URL, data.locus.conversationUrl));\n\n    // Special case when locus has got replaced, This only happend once if a replace locus exists\n    // https://sqbu-github.cisco.com/WebExSquared/locus/wiki/Locus-changing-mid-call\n\n    if (!meeting && data.locus?.replaces?.length > 0) {\n      // Always the last element in the replace is the active one\n      meeting = this.meetingCollection.getByKey(\n        LOCUS_URL,\n        data.locus.replaces[data.locus.replaces.length - 1].locusUrl\n      );\n    }\n\n    if (!meeting) {\n      // TODO: create meeting when we get a meeting object\n      // const checkForEnded = (locus) => {\n      // TODO: you already ended the meeting but you got an event later\n      // Mainly for 1:1 Callsor meeting\n      // Happens mainly after refresh\n\n      // 1:1 Meeting\n      // 1)  You ended a call before but you got a mercury event\n      // Make sure end the call and cleanup the meeting only if the mercury\n      // event says so\n      // 2) Maintain lastSync time in the meetings object which helps to compare\n      // If the meeting came befor or after the sync . ANy meeting start time before the sync time is invalid\n\n      // For space Meeting\n      // Check the locus object and see who has joined\n\n      // };\n      // rather then locus object change to locus url\n\n      if (\n        data.locus &&\n        data.locus.fullState &&\n        data.locus.fullState.state === LOCUS.STATE.INACTIVE\n      ) {\n        // just ignore the event as its already ended and not active\n        LoggerProxy.logger.warn(\n          'Meetings:index#handleLocusEvent --> Locus event received for meeting, after it was ended.'\n        );\n\n        return;\n      }\n\n      // When its wireless share or guest and user leaves the meeting we dont have to keep the meeting object\n      // Any future events will be neglected\n\n      if (\n        data.locus &&\n        data.locus.self &&\n        data.locus.self.state === _LEFT_ &&\n        data.locus.self.removed === true\n      ) {\n        // just ignore the event as its already ended and not active\n        LoggerProxy.logger.warn(\n          'Meetings:index#handleLocusEvent --> Locus event received for meeting, after it was ended.'\n        );\n\n        return;\n      }\n\n      this.create(data.locus, _LOCUS_ID_, useRandomDelayForInfo)\n        .then((newMeeting) => {\n          meeting = newMeeting;\n\n          // It's a new meeting so initialize the locus data\n          meeting.locusInfo.initialSetup(data.locus);\n        })\n        .catch((e) => {\n          LoggerProxy.logger.error(e);\n        })\n        .finally(() => {\n          // There will be cases where locus event comes in gets created and deleted because its a 1:1 and meeting gets deleted\n          // because the other user left so before sending 'added' event make sure it exists in the collection\n\n          if (this.getMeetingByType(_ID_, meeting.id)) {\n            Metrics.postEvent({\n              event: eventType.REMOTE_STARTED,\n              meeting,\n              data: {trigger: trigger.MERCURY_EVENT},\n            });\n            Trigger.trigger(\n              this,\n              {\n                file: 'meetings',\n                function: 'handleLocusEvent',\n              },\n              EVENT_TRIGGERS.MEETING_ADDED,\n              {\n                meeting,\n                type: meeting.type === _MEETING_ ? _JOIN_ : _INCOMING_,\n              }\n            );\n          } else {\n            // Meeting got added but was not found in the collection. It might have got destroyed\n            LoggerProxy.logger.warn(\n              'Meetings:index#handleLocusEvent --> Created and destroyed meeting object before sending an event'\n            );\n          }\n        });\n    } else {\n      meeting.locusInfo.parse(meeting, data);\n    }\n  }\n\n  /**\n   * handles locus events through mercury that are not roap\n   * @param {Object} envelope\n   * @param {Object} envelope.data\n   * @param {String} envelope.data.eventType\n   * @returns {undefined}\n   * @private\n   * @memberof Meetings\n   */\n  private handleLocusMercury(envelope: {data: any}) {\n    const {data} = envelope;\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const {eventType} = data;\n\n    if (eventType && eventType !== LOCUSEVENT.MESSAGE_ROAP) {\n      this.handleLocusEvent(data, true);\n    }\n  }\n\n  /**\n   * handles mecury offline event\n   * @returns {undefined}\n   * @private\n   * @memberof Meetings\n   */\n  private handleMercuryOffline() {\n    Trigger.trigger(\n      this,\n      {\n        file: 'meetings/index',\n        function: 'handleMercuryOffline',\n      },\n      EVENT_TRIGGERS.MEETINGS_NETWORK_DISCONNECTED\n    );\n  }\n\n  /**\n   * registers for locus and roap mercury events\n   * @returns {undefined}\n   * @private\n   * @memberof Meetings\n   */\n  private listenForEvents() {\n    // @ts-ignore\n    this.webex.internal.mercury.on(LOCUSEVENT.LOCUS_MERCURY, (envelope) => {\n      this.handleLocusMercury(envelope);\n    });\n    // @ts-ignore\n    this.webex.internal.mercury.on(ROAP.ROAP_MERCURY, (envelope) => {\n      MeetingsUtil.handleRoapMercury(envelope, this.meetingCollection);\n    });\n\n    // @ts-ignore\n    this.webex.internal.mercury.on(ONLINE, () => {\n      this.syncMeetings();\n    });\n\n    // @ts-ignore\n    this.webex.internal.mercury.on(OFFLINE, () => {\n      this.handleMercuryOffline();\n    });\n  }\n\n  /**\n   * stops listening for locus and roap mercury events\n   * @returns {undefined}\n   * @private\n   * @memberof Meetings\n   */\n  private stopListeningForEvents() {\n    // @ts-ignore\n    this.webex.internal.mercury.off(LOCUSEVENT.LOCUS_MERCURY);\n    // @ts-ignore\n    this.webex.internal.mercury.off(ROAP.ROAP_MERCURY);\n    // @ts-ignore\n    this.webex.internal.mercury.off(ONLINE);\n  }\n\n  /**\n   * @returns {undefined}\n   * @private\n   * @memberof Meetings\n   */\n  private onReady() {\n    // @ts-ignore\n    this.webex.once(READY, () => {\n      // @ts-ignore\n      StaticConfig.set(this.config);\n      // @ts-ignore\n      LoggerConfig.set(this.config.logging);\n      // @ts-ignore\n      LoggerProxy.set(this.webex.logger);\n\n      /**\n       * The MeetingInfo object to interact with server\n       * @instance\n       * @type {Object}\n       * @private\n       * @memberof Meetings\n       */\n      // @ts-ignore\n      this.meetingInfo = this.config.experimental.enableUnifiedMeetings\n        ? // @ts-ignore\n          new MeetingInfoV2(this.webex)\n        : // @ts-ignore\n          new MeetingInfo(this.webex);\n      // @ts-ignore\n      this.personalMeetingRoom = new PersonalMeetingRoom(\n        {meetingInfo: this.meetingInfo},\n        // @ts-ignore\n        {parent: this.webex}\n      );\n\n      Trigger.trigger(\n        this,\n        {\n          file: 'meetings',\n          function: 'onReady',\n        },\n        EVENT_TRIGGERS.MEETINGS_READY\n      );\n\n      MeetingsUtil.checkH264Support({disableNotifications: true});\n      // @ts-ignore\n      Metrics.initialSetup(this.meetingCollection, this.webex);\n    });\n  }\n\n  /**\n   * API to toggle unified meetings\n   * @param {Boolean} changeState\n   * @private\n   * @memberof Meetings\n   * @returns {undefined}\n   */\n  private _toggleUnifiedMeetings(changeState: boolean) {\n    if (typeof changeState !== 'boolean') {\n      return;\n    }\n    // @ts-ignore\n    if (this.config?.experimental?.enableUnifiedMeetings !== changeState) {\n      // @ts-ignore\n      this.config.experimental.enableUnifiedMeetings = changeState;\n      // @ts-ignore\n      this.meetingInfo = changeState ? new MeetingInfoV2(this.webex) : new MeetingInfo(this.webex);\n    }\n  }\n\n  /**\n   * API to enable or disable TURN discovery\n   * @param {Boolean} enable\n   * @private\n   * @memberof Meetings\n   * @returns {undefined}\n   */\n  private _toggleTurnDiscovery(enable: boolean) {\n    if (typeof enable !== 'boolean') {\n      return;\n    }\n    // @ts-ignore\n    this.config.experimental.enableTurnDiscovery = enable;\n  }\n\n  /**\n   * API to toggle starting adhoc meeting\n   * @param {Boolean} changeState\n   * @private\n   * @memberof Meetings\n   * @returns {undefined}\n   */\n  private _toggleAdhocMeetings(changeState: boolean) {\n    if (typeof changeState !== 'boolean') {\n      return;\n    }\n    // @ts-ignore\n    if (this.config?.experimental?.enableAdhocMeetings !== changeState) {\n      // @ts-ignore\n      this.config.experimental.enableAdhocMeetings = changeState;\n    }\n  }\n\n  /**\n   * Explicitly sets up the meetings plugin by registering\n   * the device, connecting to mercury, and listening for locus events.\n   *\n   * @returns {Promise}\n   * @public\n   * @memberof Meetings\n   */\n  public register() {\n    // @ts-ignore\n    if (!this.webex.canAuthorize) {\n      LoggerProxy.logger.error(\n        'Meetings:index#register --> ERROR, Unable to register, SDK cannot authorize'\n      );\n\n      return Promise.reject(new Error('SDK cannot authorize'));\n    }\n\n    if (this.registered) {\n      LoggerProxy.logger.info(\n        'Meetings:index#register --> INFO, Meetings plugin already registered'\n      );\n\n      return Promise.resolve();\n    }\n\n    return Promise.all([\n      this.fetchUserPreferredWebexSite(),\n      this.getGeoHint(),\n      this.startReachability().catch((error) => {\n        LoggerProxy.logger.error(`Meetings:index#register --> GDM error, ${error.message}`);\n      }),\n      // @ts-ignore\n      this.webex.internal.device\n        .register()\n        // @ts-ignore\n        .then(() =>\n          LoggerProxy.logger.info(\n            // @ts-ignore\n            `Meetings:index#register --> INFO, Device registered ${this.webex.internal.device.url}`\n          )\n        )\n        // @ts-ignore\n        .then(() => this.webex.internal.mercury.connect()),\n      MeetingsUtil.checkH264Support.call(this),\n    ])\n      .then(() => {\n        this.listenForEvents();\n        Trigger.trigger(\n          this,\n          {\n            file: 'meetings',\n            function: 'register',\n          },\n          EVENT_TRIGGERS.MEETINGS_REGISTERED\n        );\n        this.registered = true;\n        Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MEETINGS_REGISTRATION_SUCCESS);\n      })\n      .catch((error) => {\n        LoggerProxy.logger.error(\n          `Meetings:index#register --> ERROR, Unable to register, ${error.message}`\n        );\n\n        Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.MEETINGS_REGISTRATION_FAILED, {\n          reason: error.message,\n          stack: error.stack,\n        });\n\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Explicitly tears down the meetings plugin by deregistering\n   * the device, disconnecting from mercury, and stops listening to locus events\n   *\n   * @returns {Promise}\n   * @public\n   * @memberof Meetings\n   */\n  unregister() {\n    if (!this.registered) {\n      LoggerProxy.logger.info(\n        'Meetings:index#unregister --> INFO, Meetings plugin already unregistered'\n      );\n\n      return Promise.resolve();\n    }\n\n    this.stopListeningForEvents();\n\n    return (\n      // @ts-ignore\n      this.webex.internal.mercury\n        .disconnect()\n        // @ts-ignore\n        .then(() => this.webex.internal.device.unregister())\n        .then(() => {\n          Trigger.trigger(\n            this,\n            {\n              file: 'meetings',\n              function: 'unregister',\n            },\n            EVENT_TRIGGERS.MEETINGS_UNREGISTERED\n          );\n          this.registered = false;\n        })\n    );\n  }\n\n  /**\n   * Uploads logs to the webex services for tracking\n   * @param {Object} [options={}]\n   * @param {String} [options.callStart] Call Start Time\n   * @param {String} [options.feedbackId] ID used for tracking\n   * @param {String} [options.locusId]\n   * @param {String} [options.correlationId]\n   * @param {String} [options.meetingId] webex meeting ID\n   * @param {String} [options.userId] userId\n   * @param {String} [options.orgId] org id\n   * @returns {String} feedback ID logs were submitted under\n   */\n  uploadLogs(\n    options: {\n      callStart?: string;\n      feedbackId?: string;\n      locusId?: string;\n      correlationId?: string;\n      meetingId?: string;\n      userId?: string;\n      orgId?: string;\n    } = {}\n  ) {\n    LoggerProxy.logger.info('Meetings:index#uploadLogs --> uploading logs');\n\n    return this.loggerRequest\n      .uploadLogs(options)\n      .then((uploadResult) => {\n        LoggerProxy.logger.info(\n          'Meetings:index#uploadLogs --> Upload logs for meeting completed.',\n          uploadResult\n        );\n        Trigger.trigger(\n          this,\n          {\n            file: 'meetings',\n            function: 'uploadLogs',\n          },\n          EVENT_TRIGGERS.MEETING_LOG_UPLOAD_SUCCESS,\n          {\n            meetingId: options.meetingId,\n            details: uploadResult,\n          }\n        );\n\n        return uploadResult;\n      })\n      .catch((uploadError) => {\n        LoggerProxy.logger.error(\n          'Meetings:index#uploadLogs --> Unable to upload logs for meeting',\n          uploadError\n        );\n        Trigger.trigger(\n          this,\n          {\n            file: 'meetings',\n            function: 'uploadLogs',\n          },\n          EVENT_TRIGGERS.MEETING_LOG_UPLOAD_FAILURE,\n          {\n            meetingId: options.meetingId,\n            reason: uploadError,\n          }\n        );\n\n        Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.UPLOAD_LOGS_FAILURE, {\n          // @ts-ignore - seems like typo\n          meetingId: options.meetingsId,\n          reason: uploadError.message,\n          stack: uploadError.stack,\n          code: uploadError.code,\n        });\n      });\n  }\n\n  /**\n   * initializes the reachability instance for Meetings\n   * @returns {undefined}\n   * @public\n   * @memberof Meetings\n   */\n  setReachability() {\n    // @ts-ignore\n    this.reachability = new Reachability(this.webex);\n  }\n\n  /**\n   * gets the reachability instance for Meetings\n   * @returns {Reachability}\n   * @public\n   * @memberof Meetings\n   */\n  getReachability() {\n    return this.reachability;\n  }\n\n  /**\n   * initializes and starts gathering reachability for Meetings\n   * @returns {Promise}\n   * @public\n   * @memberof Meetings\n   */\n  startReachability() {\n    if (!this.reachability) {\n      this.setReachability();\n    }\n\n    return this.getReachability().gatherReachability();\n  }\n\n  /**\n   * Get geoHint for info for meetings\n   * @returns {Promise}\n   * @private\n   * @memberof Meetings\n   */\n  getGeoHint() {\n    return this.request.fetchGeoHint().then((res) => {\n      this.geoHintInfo = res;\n    });\n  }\n\n  /**\n   * Fetch user preferred webex site information\n   * This also has other infomation about the user\n   * @returns {Promise}\n   * @private\n   * @memberof Meetings\n   */\n  fetchUserPreferredWebexSite() {\n    return this.request.getMeetingPreferences().then((res) => {\n      if (res) {\n        this.preferredWebexSite = MeetingsUtil.parseDefaultSiteFromMeetingPreferences(res);\n      }\n    });\n  }\n\n  /**\n   * gets the personal meeting room instance, for saved PMR values for this user\n   * @returns {PersonalMeetingRoom}\n   * @public\n   * @memberof Meetings\n   */\n\n  getPersonalMeetingRoom() {\n    return this.personalMeetingRoom;\n  }\n\n  /**\n   * @param {Meeting} meeting\n   * @param {Object} reason\n   * @param {String} type\n   * @returns {Undefined}\n   * @private\n   * @memberof Meetings\n   */\n  private destroy(meeting: Meeting, reason: object) {\n    MeetingUtil.cleanUp(meeting);\n    this.meetingCollection.delete(meeting.id);\n    Trigger.trigger(\n      this,\n      {\n        file: 'meetings',\n        function: 'destroy',\n      },\n      EVENT_TRIGGERS.MEETING_REMOVED,\n      {\n        meetingId: meeting.id,\n        reason,\n      }\n    );\n  }\n\n  /**\n   * Create a meeting.\n   * @param {string} destination - sipURL, spaceId, phonenumber, or locus object}\n   * @param {string} [type] - the optional specified type, such as locusId\n   * @param {Boolean} useRandomDelayForInfo - whether a random delay should be added to fetching meeting info\n   * @returns {Promise<Meeting>} A new Meeting.\n   * @public\n   * @memberof Meetings\n   */\n  public create(destination: string, type: string = null, useRandomDelayForInfo = false) {\n    // TODO: type should be from a dictionary\n\n    // Validate meeting information based on the provided destination and\n    // type. This must be performed prior to determining if the meeting is\n    // found in the collection, as we mutate the destination for hydra person\n    // id values.\n    return (\n      this.meetingInfo\n        .fetchInfoOptions(destination, type)\n        // Catch a failure to fetch info options.\n        .catch((error) => {\n          LoggerProxy.logger.info(\n            `Meetings:index#create --> INFO, unable to determine info options: ${error.message}`\n          );\n        })\n        .then((options: any = {}) => {\n          // Normalize the destination.\n          const targetDest = options.destination || destination;\n\n          // check for the conversation URL then sip Url\n          let meeting = null;\n\n          if (type === _CONVERSATION_URL_ || options.type === _CONVERSATION_URL_) {\n            const foundMeeting = this.meetingCollection.getByKey(CONVERSATION_URL, targetDest);\n\n            if (foundMeeting) {\n              const foundMeetingIsNotCalendarMeeting = !foundMeeting.locusInfo.scheduledMeeting;\n\n              // If the found meeting is not a calendar meeting, return that meeting.\n              // This allows for the creation of instant-meetings when calendar meetings are present.\n              if (foundMeetingIsNotCalendarMeeting) {\n                meeting = foundMeeting;\n              }\n            }\n          }\n\n          // Attempt to collect the meeting if it exists.\n          if (!meeting) {\n            meeting = this.meetingCollection.getByKey(SIP_URI, targetDest);\n          }\n\n          // Validate if a meeting was found.\n          if (!meeting) {\n            // Create a meeting based on the normalized destination and type.\n            return this.createMeeting(targetDest, type, useRandomDelayForInfo).then(\n              (createdMeeting: any) => {\n                // If the meeting was successfully created.\n                if (createdMeeting && createdMeeting.on) {\n                  // Create a destruction event for the meeting.\n                  createdMeeting.on(EVENTS.DESTROY_MEETING, (payload) => {\n                    // @ts-ignore\n                    if (this.config.autoUploadLogs) {\n                      this.uploadLogs({\n                        callStart: createdMeeting.locusInfo?.fullState?.lastActive,\n                        correlationId: createdMeeting.correlationId,\n                        feedbackId: createdMeeting.correlationId,\n                        locusId: createdMeeting.locusId,\n                        meetingId: createdMeeting.locusInfo?.info?.webExMeetingId,\n                      }).then(() => this.destroy(createdMeeting, payload.reason));\n                    } else {\n                      this.destroy(createdMeeting, payload.reason);\n                    }\n                  });\n\n                  createdMeeting.on(EVENTS.REQUEST_UPLOAD_LOGS, (meetingInstance) => {\n                    // @ts-ignore\n                    if (this.config.autoUploadLogs) {\n                      this.uploadLogs({\n                        callStart: meetingInstance?.locusInfo?.fullState?.lastActive,\n                        correlationId: meetingInstance.correlationId,\n                        feedbackId: meetingInstance.correlationId,\n                        locusId: meetingInstance.locusId,\n                        meetingId: meetingInstance.locusInfo?.info?.webExMeetingId,\n                      });\n                    }\n                  });\n                } else {\n                  LoggerProxy.logger.error(\n                    `Meetings:index#create --> ERROR, meeting does not have on method, will not be destroyed, meeting cleanup impossible for meeting: ${meeting}`\n                  );\n                }\n\n                // Return the newly created meeting.\n                return Promise.resolve(createdMeeting);\n              }\n            );\n          }\n\n          // Return the existing meeting.\n          return Promise.resolve(meeting);\n        })\n    );\n  }\n\n  /**\n   * @param {String} destination see create()\n   * @param {String} type see create()\n   * @param {Boolean} useRandomDelayForInfo whether a random delay should be added to fetching meeting info\n   * @returns {Promise} a new meeting instance complete with meeting info and destination\n   * @private\n   * @memberof Meetings\n   */\n  private async createMeeting(\n    destination: any,\n    type: string = null,\n    useRandomDelayForInfo = false\n  ) {\n    const meeting = new Meeting(\n      {\n        // @ts-ignore\n        userId: this.webex.internal.device.userId,\n        // @ts-ignore\n        deviceUrl: this.webex.internal.device.url,\n        // @ts-ignore\n        orgId: this.webex.internal.device.orgId,\n        roapSeq: 0,\n        locus: type === _LOCUS_ID_ ? destination : null, // pass the locus object if present\n        meetingInfoProvider: this.meetingInfo,\n        destination,\n        destinationType: type,\n      },\n      {\n        // @ts-ignore\n        parent: this.webex,\n      }\n    );\n\n    this.meetingCollection.set(meeting);\n\n    try {\n      // if no participant has joined the scheduled meeting (meaning meeting is not active) and we get a locusEvent,\n      // it means the meeting will start in 5-6 min. In that case, we want to fetchMeetingInfo\n      // between 5 and 2 min (random between 3 minutes) before the meeting starts\n      // to avoid a spike in traffic to the wbxappi service\n      let waitingTime = 0;\n\n      if (destination.meeting) {\n        const {startTime} = destination.meeting;\n        const startTimeDate = new Date(startTime);\n        const startTimeDatestamp = startTimeDate.getTime();\n        const timeToStart = startTimeDatestamp - Date.now();\n        const maxWaitingTime = Math.max(\n          Math.min(timeToStart, MAX_RANDOM_DELAY_FOR_MEETING_INFO),\n          0\n        );\n\n        waitingTime = Math.round(Math.random() * maxWaitingTime);\n      }\n      const isMeetingActive = !!destination.fullState?.active;\n      // @ts-ignore\n      const {enableUnifiedMeetings} = this.config.experimental;\n\n      if (enableUnifiedMeetings && !isMeetingActive && useRandomDelayForInfo && waitingTime > 0) {\n        meeting.fetchMeetingInfoTimeoutId = setTimeout(\n          () => meeting.fetchMeetingInfo({}),\n          waitingTime\n        );\n        meeting.parseMeetingInfo(undefined, destination);\n      } else {\n        await meeting.fetchMeetingInfo({});\n      }\n    } catch (err) {\n      if (!(err instanceof CaptchaError) && !(err instanceof PasswordError)) {\n        // if there is no meeting info we assume its a 1:1 call or wireless share\n        LoggerProxy.logger.info(\n          `Meetings:index#createMeeting --> Info Unable to fetch meeting info for ${destination}.`\n        );\n        LoggerProxy.logger.info(\n          'Meetings:index#createMeeting --> Info assuming this destination is a 1:1 or wireless share'\n        );\n      }\n      LoggerProxy.logger.debug(\n        `Meetings:index#createMeeting --> Debug ${err} fetching /meetingInfo for creation.`\n      );\n    } finally {\n      // For type LOCUS_ID we need to parse the locus object to get the information\n      // about the caller and callee\n      // Meeting Added event will be created in `handleLocusEvent`\n      if (type !== _LOCUS_ID_) {\n        if (!meeting.sipUri) {\n          meeting.setSipUri(destination);\n        }\n\n        // TODO: check if we have to move this to parser\n        const meetingAddedType = MeetingsUtil.getMeetingAddedType(type);\n\n        // We typically shouldn't need to trigger both and event and return a promise.\n        // Is this a special case? We want to make the public API usage as simple as possible.\n        Trigger.trigger(\n          this,\n          {\n            file: 'meetings',\n            function: 'createMeeting',\n          },\n          EVENT_TRIGGERS.MEETING_ADDED,\n          {\n            meeting,\n            type: meetingAddedType,\n          }\n        );\n      }\n    }\n\n    return meeting;\n\n    // Create the meeting calling the necessary service endpoints.\n\n    // Internally, there are many more destinations:\n    //\n    // - locusID\n    // - meetingURL\n    // - globalMeetingID, e.g, *00*meetingID\n    // - meetingID\n    // - meetingURL\n    // - PSTN\n    // - phone number\n    //\n    // Our job is to determine the appropriate one\n    // and its corresponding service so that developers\n    // need only sipURL or spaceID to get a meeting\n    // and its ID, but have the option to use createWithType()\n    // and specify those types to get meetingInfo\n  }\n\n  /**\n   * get a specifc meeting given it's type matched to the value, i.e., locus url\n   * @param {String} type\n   * @param {Object} value\n   * @returns {Meeting}\n   * @public\n   * @memberof Meetings\n   */\n  public getMeetingByType(type: string, value: object) {\n    return this.meetingCollection.getByKey(type, value);\n  }\n\n  /**\n   * Get all meetings.\n   * @param {object} options\n   * @param {object} options.startDate - get meetings after this start date\n   * @param {object} options.endDate - get meetings before this end date\n   * @returns {Object} All currently active meetings.\n   * @public\n   * @memberof Meetings\n   */\n  public getAllMeetings(\n    options: {\n      startDate: object;\n      endDate: object;\n    } = {} as any\n  ) {\n    // Options may include other parameters to filter this collection\n    // of meetings.\n    return this.meetingCollection.getAll(options);\n  }\n\n  /**\n   * syncs all the meeting from server\n   * @returns {undefined}\n   * @public\n   * @memberof Meetings\n   */\n  public syncMeetings() {\n    return this.request.getActiveMeetings().then((locusArray) => {\n      const activeLocusUrl = [];\n\n      if (locusArray?.loci && locusArray.loci.length > 0) {\n        locusArray.loci.forEach((locus) => {\n          activeLocusUrl.push(locus.url);\n          this.handleLocusEvent({\n            locus,\n            locusUrl: locus.url,\n          });\n        });\n      }\n      const meetingsCollection = this.meetingCollection.getAll();\n\n      if (Object.keys(meetingsCollection).length > 0) {\n        // Some time the mercury event is missed after mercury reconnect\n        // if sync returns no locus then clear all the meetings\n        for (const meeting of Object.values(meetingsCollection)) {\n          // @ts-ignore\n          if (!activeLocusUrl.includes(meeting.locusUrl)) {\n            // destroy function also uploads logs\n            // @ts-ignore\n            this.destroy(meeting, MEETING_REMOVED_REASON.NO_MEETINGS_TO_SYNC);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Get all scheduled meetings.\n   * @param {object} options\n   * @param {object} options.startDate - get meetings after this start date\n   * @param {object} options.endDate - get meetings before this end date\n   * @returns {Object} All scheduled meetings.\n   * @memberof Meetings\n   */\n  getScheduledMeetings() {\n    return this.meetingCollection.getAll({scheduled: true});\n  }\n\n  /**\n   * Get the logger instance for plugin-meetings\n   * @returns {Logger}\n   */\n  getLogger() {\n    return LoggerProxy.get();\n  }\n}\n"],"mappings":"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"}