{"version":3,"names":["_constants","require","_util","_interopRequireDefault","Member","participant","options","arguments","length","undefined","_classCallCheck2","default","_defineProperty2","MEETINGS","id","name","isAudioMuted","isVideoMuted","isHandRaised","isSelf","isHost","isGuest","isInLobby","isInMeeting","isNotAdmitted","isContentSharing","status","isDevice","isUser","associatedUser","isRecording","isMutable","isRemovable","type","isModerator","isModeratorAssignmentProhibited","mediaStatus","audio","video","processParticipant","processParticipantOptions","processMember","_createClass2","key","value","MemberUtil","extractId","extractName","processStatus","processIsSelf","selfId","processIsHost","hostId","processIsContentSharing","contentSharingId","processType","processIsRecording","recordingId","extractMediaStatus","extractStatus","_IN_LOBBY_","_IN_MEETING_","_NOT_IN_MEETING_","setIsContentSharing","flag","setIsHost","setIsSelf","sharingId","isSame","isAssociatedSame","exports"],"sources":["index.ts"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\nimport {MEETINGS, _IN_LOBBY_, _NOT_IN_MEETING_, _IN_MEETING_} from '../constants';\nimport {IMediaStatus} from './member.types';\n\nimport MemberUtil from './util';\n\n/**\n * @class Member\n */\nexport default class Member {\n  associatedUser: any;\n  id: any;\n  isAudioMuted: any;\n  isContentSharing: any;\n  isDevice: any;\n  isGuest: any;\n  isHandRaised: any;\n  isHost: any;\n  isInLobby: any;\n  isInMeeting: any;\n  isModerator: any;\n  isModeratorAssignmentProhibited: any;\n  isMutable: any;\n  isNotAdmitted: any;\n  isRecording: any;\n  isRemovable: any;\n  isSelf: any;\n  isUser: any;\n  isVideoMuted: any;\n  mediaStatus: IMediaStatus;\n  name: any;\n  participant: any;\n  status: any;\n  type: any;\n  namespace = MEETINGS;\n\n  /**\n   * @param {Object} participant - the locus participant\n   * @param {Object} [options] - constructor params\n   * @param {String} options.selfId\n   * @param {String} options.hostId\n   * @param {String} options.contentSharingId\n   * @param {String} options.type\n   * @returns {Member}\n   * @memberof Member\n   */\n  constructor(\n    participant: object,\n    options:\n      | {\n          selfId: string;\n          hostId: string;\n          contentSharingId: string;\n          type: string;\n        }\n      | any = {}\n  ) {\n    /**\n     * The server participant object\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Member\n     */\n    this.participant = null;\n    /**\n     * The member id\n     * @instance\n     * @type {String}\n     * @public\n     * @memberof Member\n     */\n    this.id = null;\n    /**\n     * The member name\n     * @instance\n     * @type {String}\n     * @public\n     * @memberof Member\n     */\n    this.name = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isAudioMuted = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isVideoMuted = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isHandRaised = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isSelf = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isHost = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isGuest = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isInLobby = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isInMeeting = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isNotAdmitted = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isContentSharing = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.status = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isDevice = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isUser = null;\n    /**\n     * Is this member associated to another user by way of pairing (typical of devices)\n     * @instance\n     * @type {String}\n     * @public\n     * @memberof Member\n     */\n    this.associatedUser = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isRecording = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isMutable = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isRemovable = null;\n    /**\n     * @instance\n     * @type {String}\n     * @private\n     * @memberof Member\n     */\n    this.type = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isModerator = null;\n    /**\n     * @instance\n     * @type {Boolean}\n     * @public\n     * @memberof Member\n     */\n    this.isModeratorAssignmentProhibited = null;\n    /**\n     * @instance\n     * @type {IMediaStatus}\n     * @public\n     * @memberof Member\n     * @example {audio: MediaStatus.RECVONLY, video: MediaStatus.SENDRECV}\n     */\n    this.mediaStatus = {\n      audio: null,\n      video: null,\n    };\n    // TODO: more participant types\n    // such as native client, web client, is a device, what type of phone, etc\n    this.processParticipant(participant);\n    this.processParticipantOptions(participant, options);\n    this.processMember();\n  }\n\n  /**\n   * set all the participant values extracted directly from locus participant\n   * @param {Object} participant the locus participant object\n   * @returns {undefined}\n   * @private\n   * @memberof Member\n   */\n  private processParticipant(participant: object) {\n    this.participant = participant;\n    if (participant) {\n      this.id = MemberUtil.extractId(participant);\n      this.name = MemberUtil.extractName(participant);\n      this.isAudioMuted = MemberUtil.isAudioMuted(participant);\n      this.isVideoMuted = MemberUtil.isVideoMuted(participant);\n      this.isHandRaised = MemberUtil.isHandRaised(participant);\n      this.isGuest = MemberUtil.isGuest(participant);\n      this.isUser = MemberUtil.isUser(participant);\n      this.isDevice = MemberUtil.isDevice(participant);\n      this.isModerator = MemberUtil.isModerator(participant);\n      this.isModeratorAssignmentProhibited =\n        MemberUtil.isModeratorAssignmentProhibited(participant);\n      this.processStatus(participant);\n      // must be done last\n      this.isNotAdmitted = MemberUtil.isNotAdmitted(participant, this.isGuest, this.status);\n    }\n  }\n\n  /**\n   * Use the members options and participant values to set on the member\n   * @param {Object} participant the locus participant object\n   * @param {Object} options the passed in options, what was set on members\n   * @returns {undefined}\n   * @private\n   * @memberof Member\n   */\n  private processParticipantOptions(participant: object, options: any) {\n    if (participant && options) {\n      this.processIsSelf(participant, options.selfId);\n      this.processIsHost(participant, options.hostId);\n      this.processIsContentSharing(participant, options.contentSharingId);\n      this.processType(options.type);\n      this.processIsRecording(participant, options.recordingId);\n    }\n  }\n\n  /**\n   * processes what already exists on the member to determine other info about the member\n   * @returns {undefined}\n   * @private\n   * @memberof Member\n   */\n  private processMember() {\n    // must occur after self, guest, meeting, and type properties are calculated\n    this.isRemovable = MemberUtil.isRemovable(\n      this.isSelf,\n      this.isGuest,\n      this.isInMeeting,\n      this.type\n    );\n    // must occur after self, device, meeting, mute status, and type properties are calculated\n    this.isMutable = MemberUtil.isMutable(\n      this.isSelf,\n      this.isDevice,\n      this.isInMeeting,\n      this.isAudioMuted,\n      this.type\n    );\n\n    this.mediaStatus = MemberUtil.extractMediaStatus(this.participant);\n  }\n\n  /**\n   * set the status on member object\n   * @param {Object} participant the locus participant object\n   * @returns {undefined}\n   * @private\n   * @memberof Member\n   */\n  private processStatus(participant: object) {\n    this.status = MemberUtil.extractStatus(participant);\n    switch (this.status) {\n      case _IN_LOBBY_:\n        this.isInLobby = true;\n        this.isInMeeting = false;\n        break;\n      case _IN_MEETING_:\n        this.isInLobby = false;\n        this.isInMeeting = true;\n        break;\n      case _NOT_IN_MEETING_:\n        this.isInLobby = false;\n        this.isInMeeting = false;\n        break;\n      default:\n        this.isInLobby = false;\n        this.isInMeeting = false;\n    }\n  }\n\n  /**\n   * set the isContentSharing on member\n   * @param {Boolean} flag\n   * @returns {undefined}\n   * @public\n   * @memberof Member\n   */\n  public setIsContentSharing(flag: boolean) {\n    this.isContentSharing = flag;\n  }\n\n  /**\n   * set the isHost on member\n   * @param {Boolean} flag\n   * @returns {undefined}\n   * @public\n   * @memberof Member\n   */\n  public setIsHost(flag: boolean) {\n    this.isHost = flag;\n  }\n\n  /**\n   * set the isSelf on member\n   * @param {Boolean} flag\n   * @returns {undefined}\n   * @public\n   * @memberof Member\n   */\n  public setIsSelf(flag: boolean) {\n    this.isSelf = flag;\n  }\n\n  /**\n   * determine if this member is content sharing\n   * @param {Object} participant\n   * @param {String} sharingId\n   * @returns {undefined}\n   * @public\n   * @memberof Member\n   */\n  public processIsContentSharing(participant: object, sharingId: string) {\n    if (MemberUtil.isUser(participant)) {\n      this.isContentSharing = MemberUtil.isSame(participant, sharingId);\n    } else if (MemberUtil.isDevice(participant)) {\n      this.isContentSharing = MemberUtil.isAssociatedSame(participant, sharingId);\n    }\n  }\n\n  /**\n   * Determine if this member is recording\n   * @param {Object} participant\n   * @param {String} recordingId\n   * @returns {undefined}\n   * @public\n   * @memberof Member\n   */\n  public processIsRecording(participant: object, recordingId: string) {\n    this.isRecording = MemberUtil.isSame(participant, recordingId);\n  }\n\n  /**\n   * determine if this member is the self\n   * @param {Object} participant\n   * @param {String} selfId\n   * @returns {undefined}\n   * @private\n   * @memberof Member\n   */\n  private processIsSelf(participant: object, selfId: string) {\n    if (MemberUtil.isUser(participant)) {\n      this.isSelf = MemberUtil.isSame(participant, selfId);\n    } else if (MemberUtil.isDevice(participant)) {\n      this.isSelf = MemberUtil.isAssociatedSame(participant, selfId);\n      this.associatedUser = selfId;\n    }\n  }\n\n  /**\n   * determine if this member is the host\n   * @param {Object} participant\n   * @param {String} hostId\n   * @returns {undefined}\n   * @private\n   * @memberof Member\n   */\n  private processIsHost(participant: object, hostId: string) {\n    if (MemberUtil.isUser(participant)) {\n      this.isHost = MemberUtil.isSame(participant, hostId);\n    } else if (MemberUtil.isDevice(participant)) {\n      this.isHost = MemberUtil.isAssociatedSame(participant, hostId);\n    }\n  }\n\n  /**\n   * set the type for the member, could be MEETING or CALL\n   * @param {String} type\n   * @returns {undefined}\n   * @private\n   * @memberof Member\n   */\n  private processType(type: string) {\n    this.type = type;\n  }\n}\n"],"mappings":";;;;;;;;;;;AAGA,IAAAA,UAAA,GAAAC,OAAA;AAGA,IAAAC,KAAA,GAAAC,sBAAA,CAAAF,OAAA;AANA;AACA;AACA;AAMA;AACA;AACA;AAFA,IAGqBG,MAAM;EA2BzB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAAAA,OACEC,WAAmB,EASnB;IAAA,IARAC,OAOO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAAA,IAAAG,gBAAA,CAAAC,OAAA,QAAAP,MAAA;IAAA,IAAAQ,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA;IAAA,IAAAC,gBAAA,CAAAD,OAAA,qBArBFE,mBAAQ;IAuBlB;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACR,WAAW,GAAG,IAAI;IACvB;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACS,EAAE,GAAG,IAAI;IACd;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,IAAI,GAAG,IAAI;IAChB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,aAAa,GAAG,IAAI;IACzB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,gBAAgB,GAAG,IAAI;IAC5B;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,cAAc,GAAG,IAAI;IAC1B;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB;AACJ;AACA;AACA;AACA;AACA;IACI,IAAI,CAACC,IAAI,GAAG,IAAI;IAChB;AACJ;AACA;AACA;AACA;AACA;I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"}