export declare const eventType: {
    MEDIA_QUALITY: string;
    CALL_INITIATED: string;
    MERCURY_CONNECTION_LOST: string;
    MERCURY_CONNECTION_RESTORED: string;
    MOVE_MEDIA: string;
    LOCAL_SDP_GENERATED: string;
    REMOTE_SDP_RECEIVED: string;
    LOCUS_JOIN_REQUEST: string;
    LOCUS_JOIN_RESPONSE: string;
    ALERT_DISPLAYED: string;
    ICE_START: string;
    ICE_END: string;
    ICE_DISCONNECT: string;
    RECEIVING_MEDIA_START: string;
    RECEIVING_MEDIA_STOP: string;
    SENDING_MEDIA_START: string;
    SENDING_MEDIA_STOP: string;
    MEDIA_RENDER_START: string;
    MEDIA_RENDER_STOP: string;
    MEDIA_CAPABILITIES: string;
    MEDIA_RECONNECTING: string;
    MEDIA_RECOVERED: string;
    CALL_ABORTED: string;
    PIN_PROMPT: string;
    PIN_COLLECTED: string;
    LOBBY_ENTERED: string;
    LOBBY_EXITED: string;
    SHARE_INITIATED: string;
    SHARE_STOPPED: string;
    LOCAL_SHARE_FLOOR_GRANTED: string;
    SHARE_LAYOUT_DISPLAYED: string;
    WHITEBOARD_SHARE_INITIATED: string;
    WHITEBOARD_SHARE_STOPPED: string;
    WHITEBOARD_SHARE_FLOOR_GRANTED: string;
    MUTED: string;
    UNMUTED: string;
    LEAVE: string;
    REMOTE_ENDED: string;
    REMOTE_STARTED: string;
    MEDIA_REQUEST: string;
    MEDIA_RESPONSE: string;
    PSTN_AUDIO_ATTEMPT_START: string;
    PSTN_AUDIO_ATTEMPT_FINISH: string;
    PSTN_AUDIO_ATTEMPT_SKIP: string;
};
export declare const error: {
    name: {
        MEDIA_ENGINE: string;
        ICE_FAILED: string;
        LOCUS_RESPONSE: string;
        LOCUS_LEAVE: string;
        OTHER: string;
    };
    notFatalErrorList: number[];
    errors: {
        1000: string[];
        1001: string[];
        1002: string[];
        1003: string[];
        1004: string[];
        1005: string[];
        1006: string[];
        1007: string[];
        2001: string[];
        2002: string[];
        2003: string[];
        2004: string[];
        2005: string[];
        2006: string[];
        3001: string[];
        3002: string[];
        3004: string[];
        3005: string[];
        3006: string[];
        3007: string[];
        4001: string[];
        4002: string[];
        4003: string[];
        4004: string[];
        4005: string[];
        4006: string[];
        4007: string[];
        4008: string[];
        4009: string[];
        4010: string[];
        4011: string[];
        4012: string[];
        4013: string[];
        4014: string[];
        4015: string[];
        4016: string[];
        4017: string[];
        4018: string[];
        4019: string[];
        4020: string[];
        4021: string[];
        4022: string[];
        4023: string[];
        4024: string[];
        4025: string[];
        4026: string[];
        4027: string[];
        4028: string[];
        4029: string[];
        4030: string[];
        5000: string[];
        5001: string[];
    };
};
export declare const trigger: {
    USER_INTERACTION: string;
    MERCURY_EVENT: string;
    LOCI_UPDATE: string;
    MEDIA_ENGINE_EVENT: string;
    TIMEOUT: string;
    SIGNALING: string;
    OTHER: string;
};
export declare const pstnAudioType: {
    DIAL_IN: string;
    DIAL_OUT: string;
};
export declare const displayLocation: {
    TOAST: string;
    ROOM_LIST: string;
    CALL_PANE: string;
    CALL_VIEW: string;
    OTHER: string;
};
export declare const mediaType: {
    AUDIO: string;
    VIDEO: string;
    SHARE: string;
    WHITEBOARD: string;
};
export declare const reconnection: {
    RECOVERED_BY_NEW: string;
    RECOVERED_BY_RETRY: string;
};
export declare const errorCodes: {
    USER_CREATE_FAILED: number;
    USER_ALREADY_PARTICIPANT: number;
    CONVO_ALREADY_EXISTS: number;
    ALREADY_ANNOUNCEMENT_SPACE: number;
    NOT_ANNOUNCEMENT_SPACE: number;
    USER_NOT_MODERATOR_IN_ANNOUNCEMENT_SPACE: number;
    TEMP_ID_ALREADY_EXISTS: number;
    PARENT_ACTIVITY_ID_NOT_FOUND_OR_INVALID: number;
};
export declare const statusCodes: {
    NETWORK_OR_CORS: number;
    BAD_REQUEST: number;
    FORBIDDEN: number;
    NOT_FOUND: number;
    CONFLICT: number;
};
export declare const errorObjects: {
    category: {
        media: string;
        expected: string;
    };
    name: {
        mediaEngine: string;
    };
};
export declare const UNKNOWN = "unknown";
export declare const CLIENT_NAME = "webex-js-sdk";
export declare const PLATFORM = "Web";
