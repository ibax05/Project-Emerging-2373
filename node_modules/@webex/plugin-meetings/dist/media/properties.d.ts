/**
 * @class MediaProperties
 */
export default class MediaProperties {
    audioTrack: any;
    localQualityLevel: any;
    mediaDirection: any;
    mediaSettings: any;
    peerConnection: any;
    remoteAudioTrack: any;
    remoteQualityLevel: any;
    remoteShare: any;
    remoteVideoTrack: any;
    shareTrack: any;
    videoDeviceId: any;
    videoTrack: any;
    namespace: string;
    /**
     * @param {Object} [options] -- to auto construct
     * @returns {MediaProperties}
     */
    constructor(options?: any);
    /**
     * Retrieves the preferred video input device
     * @returns {Object|null}
     */
    getVideoDeviceId(): any;
    setMediaDirection(mediaDirection: any): void;
    setMediaSettings(type: any, values: any): void;
    setMediaPeerConnection(peerConnection: any): void;
    setLocalVideoTrack(videoTrack: any): void;
    setLocalAudioTrack(audioTrack: any): void;
    setLocalQualityLevel(localQualityLevel: any): void;
    setLocalShareTrack(shareTrack: any): void;
    setRemoteQualityLevel(remoteQualityLevel: any): void;
    setRemoteShare(remoteShare: any): void;
    /**
     * Sets the remote audio track
     * @param {MediaTrack} remoteAudioTrack MediaTrack to save
     * @returns {void}
     */
    setRemoteAudioTrack(remoteAudioTrack: any): void;
    /**
     * Sets the remote video track
     * @param {MediaTrack} remoteVideoTrack MediaTrack to save
     * @returns {void}
     */
    setRemoteVideoTrack(remoteVideoTrack: any): void;
    /**
     * Stores the preferred video input device
     * @param {string} deviceId Preferred video input device
     * @returns {void}
     */
    setVideoDeviceId(deviceId: string): void;
    unsetPeerConnection(): void;
    reInitiatePeerconnection(turnServerInfo: any): void;
    unsetLocalVideoTrack(): void;
    unsetLocalShareTrack(): void;
    unsetLocalAudioTrack(): void;
    /**
     * Removes remote stream from class instance
     * @deprecated after v1.89.3
     * @returns {void}
     */
    unsetRemoteStream(): void;
    /**
     * Removes both remote audio and video from class instance
     * @returns {void}
     */
    unsetRemoteMedia(): void;
    unsetRemoteShare(): void;
    unsetLocalVideoTracks(): void;
    /**
     * Removes remote stream and remote share from class instance
     * @deprecated after v1.89.3
     * @returns {void}
     */
    unsetRemoteStreams(): void;
    /**
     * Unsets all remote tracks
     * @returns {void}
     */
    unsetRemoteTracks(): void;
    unsetShareStreams(): void;
    /**
     * Removes both local and remote video stream from class instance
     * @deprecated after v1.89.3
     * @returns {void}
     */
    unsetMediaStreams(): void;
    /**
     * Removes both local and remote video stream from class instance
     * @returns {void}
     */
    unsetMediaTracks(): void;
    /**
     * Waits until ice connection is established
     *
     * @returns {Promise<void>}
     */
    waitForIceConnectedState(): Promise<void>;
    /**
     * Returns the type of a connection that has been established
     *
     * @returns {Promise<'UDP' | 'TCP' | 'TURN-TLS' | 'TURN-TCP' | 'TURN-UDP' | 'unknown'>}
     */
    getCurrentConnectionType(): Promise<string>;
}
