{"version":3,"names":["_javascriptStateMachine","_interopRequireDefault","require","_loggerProxy","_constants","shouldStep","roap","meeting","messageType","msg","_OFFER_","remote","shareStatus","_REQUESTED_","mediaProperties","peerConnection","_ANSWER_","LoggerProxy","logger","log","signalingState","handleTransition","value","signal","concat","ROAP","ROAP_STATE","INIT","ROAP_SIGNAL","RX_OFFER","WAIT_TX_ANSWER","TX_OFFER","WAIT_RX_ANSWER","WAIT_RX_OFFER","RX_ANSWER","mediaId","WAIT_TX_OK","error","GLARE","WAIT_TX_OFFER","TX_ANSWER","WAIT_RX_OK","TX_OK","RX_OK","ERROR","RoapStateMachine","createState","RoapState","StateMachine","factory","init","transitions","name","ROAP_TRANSITIONS","STEP","from","to","state","methods","onAfterStep","transition","_default","exports","default"],"sources":["state.ts"],"sourcesContent":["import StateMachine from 'javascript-state-machine';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {ROAP, _OFFER_, _ANSWER_, _REQUESTED_} from '../constants';\nimport Meeting from '../meeting';\n\nconst shouldStep = (roap, meeting) => {\n  const {messageType} = roap.msg;\n\n  if (meeting) {\n    if (messageType === _OFFER_ && roap.remote && meeting.shareStatus === _REQUESTED_) {\n      // The peer-connection is waiting for answer but got an offer Reset. Try to\n      // send the offer later after you accept the answer\n      return false;\n    }\n    // Assuming the mercury event has come first before the response for the event\n    // we have to wait for the response and trigger the ROAP request later on\n    if (!meeting.mediaProperties.peerConnection && messageType === _ANSWER_) {\n      return false;\n    }\n  }\n  LoggerProxy.logger.log(\n    'Roap:state#shouldStep --> RoapStateMachine: PeerConnectionState, ',\n    meeting.mediaProperties.peerConnection.signalingState\n  );\n  LoggerProxy.logger.log(\n    'Roap:state#shouldStep --> RoapStateMachine: success save proceeding with transition, ',\n    roap.msg\n  );\n\n  return true;\n};\n\nconst handleTransition = (value, signal, meeting) => {\n  LoggerProxy.logger.log(`Roap:state#handleTransition --> current ${value} to ${signal}`);\n\n  switch (value) {\n    case ROAP.ROAP_STATE.INIT:\n      if (signal === ROAP.ROAP_SIGNAL.RX_OFFER) {\n        return ROAP.ROAP_STATE.WAIT_TX_ANSWER;\n      }\n      if (signal === ROAP.ROAP_SIGNAL.TX_OFFER) {\n        return ROAP.ROAP_STATE.WAIT_RX_ANSWER;\n      }\n\n      return value;\n\n    case ROAP.ROAP_STATE.WAIT_RX_OFFER:\n      return value;\n\n    case ROAP.ROAP_STATE.WAIT_RX_ANSWER:\n      if (signal === ROAP.ROAP_SIGNAL.RX_ANSWER) {\n        // There is a race condition where the /call response comes after mercury event from the server\n        // As mercury sends roap event if it didnt get back a response. We can send the roap ok after that\n        if (meeting.mediaId) {\n          return ROAP.ROAP_STATE.WAIT_TX_OK;\n        }\n        LoggerProxy.logger.error(\n          'Roap:state#handleTransition --> Race Condition no mediaId, continuing.'\n        );\n\n        return value;\n      }\n\n      if (signal === ROAP.ROAP_SIGNAL.RX_OFFER) {\n        return ROAP.ROAP_STATE.GLARE;\n      }\n\n      return value;\n\n    case ROAP.ROAP_STATE.WAIT_TX_OFFER:\n      return value;\n\n    case ROAP.ROAP_STATE.WAIT_TX_ANSWER:\n      if (signal === ROAP.ROAP_SIGNAL.TX_ANSWER) {\n        return ROAP.ROAP_STATE.WAIT_RX_OK;\n      }\n\n      return value;\n\n    case ROAP.ROAP_STATE.WAIT_TX_OK:\n      if (signal === ROAP.ROAP_SIGNAL.TX_OK) {\n        return ROAP.ROAP_STATE.INIT;\n      }\n\n      return value;\n\n    case ROAP.ROAP_STATE.WAIT_RX_OK:\n      if (signal === ROAP.ROAP_SIGNAL.RX_OK) {\n        return ROAP.ROAP_STATE.INIT;\n      }\n\n      return value;\n\n    case ROAP.ROAP_STATE.ERROR:\n      // eslint-disable-next-line no-warning-comments\n      // TODO: resolve error state. Add a signal constant and handle the cleanup\n      return ROAP.ROAP_STATE.INIT;\n\n    case ROAP.ROAP_STATE.GLARE:\n      return ROAP.ROAP_STATE.WAIT_RX_ANSWER;\n    default:\n      return value;\n  }\n};\n\nconst RoapStateMachine = {\n  /**\n   * @param {Roap} roapRef\n   * initializes the state machine\n   * @returns {StateMachine} an instance of a state machine\n   */\n  createState() {\n    const RoapState = StateMachine.factory({\n      init: ROAP.ROAP_STATE.INIT,\n      transitions: [\n        {\n          name: ROAP.ROAP_TRANSITIONS.STEP,\n          from: '*',\n          /**\n           * Method to handle the transitions between states\n           * @param {String} signal\n           * @param {Meeting} meeting instance of a Meeting\n           * @param {Object} roap\n           * @returns {String} new state value\n           */\n          to(signal: string, meeting: Meeting, roap: object) {\n            const value = this.state;\n\n            if (!shouldStep(roap, meeting)) {\n              return value;\n            }\n\n            return handleTransition(value, signal, meeting);\n          },\n        },\n      ],\n      methods: {\n        /**\n         * Event that fires after we've transitioned to a new state\n         * @param {Object} transition\n         * @returns {null}\n         */\n        onAfterStep(transition: any) {\n          LoggerProxy.logger.log(\n            `Roap:state#onAfterStep --> RoapStateMachine->onAfterStep#fired! State changed from '${transition.from}' to '${transition.to}' with transition '${transition.transition}''.`\n          );\n        },\n      },\n    });\n\n    return new RoapState();\n  },\n};\n\nexport default RoapStateMachine;\n"],"mappings":"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"}