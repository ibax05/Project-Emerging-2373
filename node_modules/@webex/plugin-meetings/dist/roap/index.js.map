{"version":3,"names":["_webexCore","require","_constants","_loggerProxy","_interopRequireDefault","_util","_handler","_request","_collection","_turnDiscovery","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","_Reflect$construct","arguments","apply","_possibleConstructorReturn2","Reflect","sham","Proxy","Boolean","prototype","valueOf","call","e","Roap","_StatelessWebexPlugin","_inherits2","_super","attrs","options","_this","_classCallCheck2","_defineProperty2","_assertThisInitialized2","_meeting$audio","_meeting$video","meeting","roapMessage","messageType","ROAP","ROAP_TYPES","OFFER","sdps","sdp","version","ROAP_VERSION","seq","roapSeq","_isNan","_parseFloat2","tieBreaker","roapHandler","submit","type","SEND_ROAP_MSG","msg","correlationId","roapBody","localMedias","localSdp","_stringify","roapRequest","attachRechabilityData","audioMuted","audio","isLocallyMuted","videoMuted","video","MeetingUtil","joinMeetingOptions","then","locus","SEND_ROAP_MSG_SUCCESS","setRoapSeq","RoapHandler","sendRoapOK","bind","sendRoapAnswer","roapFinished","RoapRequest","lastRoapOffer","turnDiscovery","TurnDiscovery","_createClass2","key","value","roapEvent","data","message","LoggerProxy","logger","log","concat","TURN_DISCOVERY_RESPONSE","handleTurnDiscoveryResponse","RECEIVE_ROAP_MSG","stop","RECEIVE_CALL_LEAVE","_promise","resolve","_this2","_meeting$audio2","_meeting$video2","webex","meetings","meetingCollection","getByKey","OK","sendRoap","locusSelfUrl","selfUrl","mediaId","meetingId","id","_meeting$audio3","_meeting$video3","_this3","ANSWER","sendRoapError","session","errorType","ERROR","sendRoapMediaRequest","_this4","reconnect","isSkipped","isTurnDiscoverySkipped","_meeting$audio4","_meeting$video4","sendEmptyMediaId","_ref","mediaConnections","updateMediaConnections","sequenceId","RoapCollection","onSessionSequenceFinish","mediaNegotiatedEvent","isBusy","processNextQueuedMediaUpdate","doTurnDiscovery","isReconnecting","StatelessWebexPlugin","exports"],"sources":["index.ts"],"sourcesContent":["// @ts-ignore\nimport {StatelessWebexPlugin} from '@webex/webex-core';\n\nimport {ROAP} from '../constants';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport MeetingUtil from '../meeting/util';\n\nimport RoapHandler from './handler';\nimport RoapRequest from './request';\nimport RoapCollection from './collection';\nimport TurnDiscovery from './turnDiscovery';\nimport Meeting from '../meeting';\n\n/**\n * Roap options\n * @typedef {Object} RoapOptions\n * @property {String} sdp\n * @property {Meeting} meeting\n * @property {Number} roapSeq\n * @property {Boolean} reconnect\n */\n\n/**\n * @typedef {Object} SeqOptions\n * @property {String} correlationId\n * @property {String} mediaId\n * @property {Number} seq\n */\n\n/**\n * @class Roap\n * @export\n * @private\n */\nexport default class Roap extends StatelessWebexPlugin {\n  attrs: any;\n  lastRoapOffer: any;\n  options: any;\n  roapHandler: any;\n  roapRequest: any;\n  turnDiscovery: any;\n\n  /**\n   *\n   * @param {Object} attrs\n   * @param {Object} options\n   */\n  constructor(attrs: any, options: any) {\n    super({}, options);\n    /**\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Roap\n     */\n    this.attrs = attrs;\n    /**\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Roap\n     */\n    this.options = options;\n    /**\n     * The Roap Process State Handler\n     * @instance\n     * @type {RoapHandler}\n     * @private\n     * @memberof Roap\n     */\n    this.roapHandler = new RoapHandler(\n      this.attrs,\n      this.options,\n      this.sendRoapOK.bind(this),\n      this.sendRoapAnswer.bind(this),\n      this.roapFinished.bind(this)\n    );\n    /**\n     * The Roap Request Server Proxy Object\n     * @instance\n     * @type {RoapRequest}\n     * @private\n     * @memberof Roap\n     */\n    // @ts-ignore\n    this.roapRequest = new RoapRequest({}, options);\n    /**\n     * The last roap offer sent to server and acked\n     * @instance\n     * @type {Object}\n     * @private\n     * @memberof Roap\n     */\n    this.lastRoapOffer = {};\n\n    this.turnDiscovery = new TurnDiscovery(this.roapRequest);\n  }\n\n  /**\n   * Starts listening to mercury events for Roap messages\n   * @param {object} data event object\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n  private roapEvent(data: any) {\n    const msg = data.message;\n    const {correlationId} = data;\n\n    LoggerProxy.logger.log(\n      `Roap:index#roapEvent --> Received Roap Message [${JSON.stringify(msg, null, 2)}]`\n    );\n\n    if (msg.messageType === ROAP.ROAP_TYPES.TURN_DISCOVERY_RESPONSE) {\n      // turn discovery is not part of normal roap protocol and so we are not handling it\n      // through the usual roap state machine\n      this.turnDiscovery.handleTurnDiscoveryResponse(msg);\n    } else {\n      this.roapHandler.submit({\n        type: ROAP.RECEIVE_ROAP_MSG,\n        msg,\n        correlationId,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param {String} correlationId correlation id of a meeting\n   * @param {Number} seq ROAP sequence number\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n  private stop(correlationId: string, seq: number) {\n    this.roapHandler.submit({\n      type: ROAP.RECEIVE_CALL_LEAVE,\n      seq,\n      correlationId,\n    });\n\n    return Promise.resolve();\n  }\n\n  /**\n   *\n   * @param {SeqOptions} options\n   * @returns {null}\n   * @private\n   * @memberof Roap\n   */\n  private sendRoapOK(options: any) {\n    return Promise.resolve().then(() => {\n      // @ts-ignore\n      const meeting = this.webex.meetings.meetingCollection.getByKey(\n        'correlationId',\n        options.correlationId\n      );\n      const roapMessage = {\n        messageType: ROAP.ROAP_TYPES.OK,\n        version: ROAP.ROAP_VERSION,\n        seq: options.seq,\n      };\n\n      LoggerProxy.logger.log(`Roap:index#sendRoapOK --> ROAP OK sending with seq ${options.seq}`);\n\n      return this.roapRequest\n        .sendRoap({\n          roapMessage,\n          locusSelfUrl: meeting.selfUrl,\n          mediaId: options.mediaId,\n          correlationId: options.correlationId,\n          audioMuted: meeting.audio?.isLocallyMuted(),\n          videoMuted: meeting.video?.isLocallyMuted(),\n          meetingId: meeting.id,\n        })\n        .then(() => {\n          this.roapHandler.submit({\n            type: ROAP.SEND_ROAP_MSG,\n            msg: roapMessage,\n            correlationId: options.correlationId,\n          });\n          LoggerProxy.logger.log(`Roap:index#sendRoapOK --> ROAP OK sent with seq ${options.seq}`);\n          meeting.setRoapSeq(options.seq);\n        });\n    });\n  }\n\n  // eslint-disable-next-line no-warning-comments\n  // TODO: try to merge sendRoapOk and roapAnswer\n  /**\n   * Sends a ROAP answer...\n   * @param {SeqOptions} options\n   * @param {Boolean} options.audioMuted\n   * @param {Boolean} options.videoMuted\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n  private sendRoapAnswer(options: any) {\n    // @ts-ignore\n    const meeting = this.webex.meetings.meetingCollection.getByKey(\n      'correlationId',\n      options.correlationId\n    );\n    const roapMessage = {\n      messageType: ROAP.ROAP_TYPES.ANSWER,\n      sdps: options.sdps,\n      version: ROAP.ROAP_VERSION,\n      seq: options.seq,\n    };\n\n    this.roapHandler.submit({\n      type: ROAP.SEND_ROAP_MSG,\n      msg: roapMessage,\n      correlationId: options.correlationId,\n    });\n\n    return this.roapRequest\n      .sendRoap({\n        roapMessage,\n        locusSelfUrl: meeting.selfUrl,\n        mediaId: options.mediaId,\n        correlationId: options.correlationId,\n        audioMuted: meeting.audio?.isLocallyMuted(),\n        videoMuted: meeting.video?.isLocallyMuted(),\n        meetingId: meeting.id,\n      })\n      .then(() => {\n        meeting.setRoapSeq(options.seq);\n\n        this.roapHandler.submit({\n          type: ROAP.SEND_ROAP_MSG_SUCCESS,\n          seq: roapMessage.seq,\n          correlationId: meeting.correlationId,\n        });\n      });\n  }\n\n  /**\n   * Sends a ROAP error...\n   * @param {Object} session\n   * @param {Object} locus\n   * @param {String} errorType\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n  private sendRoapError(session: any, locus: object, errorType: string) {\n    const msg = {\n      messageType: ROAP.ROAP_TYPES.ERROR,\n      version: ROAP.ROAP_VERSION,\n      errorType,\n      seq: session.OFFER.seq,\n    };\n\n    return this.roapRequest.sendRoap(msg, locus);\n  }\n\n  /**\n   * sends a roap media request\n   * @param {RoapOptions} options\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n  sendRoapMediaRequest(options: any) {\n    const {meeting, reconnect} = options;\n    const roapMessage = {\n      messageType: ROAP.ROAP_TYPES.OFFER,\n      sdps: [options.sdp],\n      // sdps: [options.sdp],\n      version: ROAP.ROAP_VERSION,\n      seq:\n        typeof options.roapSeq !== 'number' && Number.isNaN(parseFloat(options.roapSeq))\n          ? 0\n          : options.roapSeq + 1,\n      tieBreaker: 4294967294, // Math.floor(Math.random() * (2 ** 32) - 1) // TODO: Handle the roap  conflict scenario\n    };\n\n    this.roapHandler.submit({\n      type: ROAP.SEND_ROAP_MSG,\n      msg: roapMessage,\n      correlationId: meeting.correlationId,\n    });\n\n    // When reconnecting, it's important that the first roap message being sent out has empty media id.\n    // Normally this is the roap offer, but when TURN discovery is enabled,\n    // then this is the TURN discovery request message\n    return this.turnDiscovery\n      .isSkipped(meeting)\n      .then((isTurnDiscoverySkipped) => {\n        const sendEmptyMediaId = reconnect && isTurnDiscoverySkipped;\n\n        return this.roapRequest.sendRoap({\n          roapMessage,\n          correlationId: meeting.correlationId,\n          locusSelfUrl: meeting.selfUrl,\n          mediaId: sendEmptyMediaId ? '' : meeting.mediaId,\n          audioMuted: meeting.audio?.isLocallyMuted(),\n          videoMuted: meeting.video?.isLocallyMuted(),\n          meetingId: meeting.id,\n        });\n      })\n\n      .then(({locus, mediaConnections}) => {\n        this.roapHandler.submit({\n          type: ROAP.SEND_ROAP_MSG_SUCCESS,\n          seq: roapMessage.seq,\n          correlationId: meeting.correlationId,\n        });\n        meeting.setRoapSeq(roapMessage.seq);\n\n        if (mediaConnections) {\n          meeting.updateMediaConnections(mediaConnections);\n        }\n\n        // eslint-disable-next-line no-warning-comments\n        // TODO: we need to attach peerconenction to locus not sure if we need to pass everything here\n        return locus;\n        // eslint-disable-next-line no-warning-comments\n        // TODO: check where to update the sequence number\n      });\n  }\n\n  /**\n   * sends a roap media request\n   * @param {RoapOptions} options\n   * @returns {Promise}\n   * @private\n   * @memberof Roap\n   */\n  sendRoapCallRequest = (options: any) => {\n    const {meeting} = options;\n    const roapMessage = {\n      messageType: ROAP.ROAP_TYPES.OFFER,\n      sdps: [options.sdp],\n      version: ROAP.ROAP_VERSION,\n      seq:\n        typeof options.roapSeq !== 'number' && Number.isNaN(parseFloat(options.roapSeq))\n          ? 0\n          : options.roapSeq + 1,\n      tieBreaker: 4294967294, // Math.floor(Math.random() * (2 ** 32) - 1) // TODO: Handle the roap  conflict scenario\n    };\n\n    this.roapHandler.submit({\n      type: ROAP.SEND_ROAP_MSG,\n      msg: roapMessage,\n      correlationId: meeting.correlationId,\n    });\n\n    const roapBody = {\n      localMedias: [\n        {\n          localSdp: JSON.stringify(\n            this.roapRequest.attachRechabilityData({\n              roapMessage,\n              // eslint-disable-next-line no-warning-comments\n              // TODO: check whats the need for video and audiomute\n              audioMuted: meeting.audio?.isLocallyMuted(),\n              videoMuted: meeting.video?.isLocallyMuted(),\n            })\n          ),\n          // mediaId: meeting.mediaId\n        },\n      ],\n    };\n\n    return MeetingUtil.joinMeetingOptions(meeting, {roapMessage: roapBody}).then((locus) => {\n      this.roapHandler.submit({\n        type: ROAP.SEND_ROAP_MSG_SUCCESS,\n        seq: roapMessage.seq,\n        correlationId: meeting.correlationId,\n      });\n      meeting.setRoapSeq(roapMessage.seq);\n\n      // eslint-disable-next-line no-warning-comments\n      // TODO: we need to attach peerconenction to locus not sure if we need to pass everything here\n      return locus;\n      // eslint-disable-next-line no-warning-comments\n      // TODO: check where to update the sequence number\n    });\n  };\n\n  /**\n   * Called when the roap sequence is finished (completed successfully or failed)\n   * @param {String} correlationId id of the meeting affected\n   * @param {String} sequenceId the id of the finished sequence\n   * @returns {undefined}\n   * @private\n   * @memberof Roap\n   */\n  private roapFinished(correlationId: string, sequenceId: string) {\n    RoapCollection.onSessionSequenceFinish(correlationId, sequenceId);\n    // @ts-ignore\n    const meeting = this.webex.meetings.meetingCollection.getByKey('correlationId', correlationId);\n\n    meeting.mediaNegotiatedEvent();\n    if (!RoapCollection.isBusy(correlationId)) {\n      meeting.processNextQueuedMediaUpdate();\n    }\n  }\n\n  /**\n   * Performs a TURN server discovery procedure, which involves exchanging\n   * some roap messages with the server. This exchange has to be done before\n   * any other roap messages are sent\n   *\n   * @param {Meeting} meeting\n   * @param {Boolean} isReconnecting should be set to true if this is a new\n   *                                 media connection just after a reconnection\n   * @returns {Promise}\n   */\n  doTurnDiscovery(meeting: Meeting, isReconnecting: boolean) {\n    return this.turnDiscovery.doTurnDiscovery(meeting, isReconnecting);\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AACA,IAAAA,UAAA,GAAAC,OAAA;AAEA,IAAAC,UAAA,GAAAD,OAAA;AACA,IAAAE,YAAA,GAAAC,sBAAA,CAAAH,OAAA;AACA,IAAAI,KAAA,GAAAD,sBAAA,CAAAH,OAAA;AAEA,IAAAK,QAAA,GAAAF,sBAAA,CAAAH,OAAA;AACA,IAAAM,QAAA,GAAAH,sBAAA,CAAAH,OAAA;AACA,IAAAO,WAAA,GAAAJ,sBAAA,CAAAH,OAAA;AACA,IAAAQ,cAAA,GAAAL,sBAAA,CAAAH,OAAA;AAA4C,SAAAS,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,OAAAC,gBAAA,CAAAC,OAAA,EAAAN,OAAA,GAAAO,MAAA,MAAAN,yBAAA,QAAAO,SAAA,OAAAH,gBAAA,CAAAC,OAAA,QAAAG,WAAA,EAAAF,MAAA,GAAAG,kBAAA,CAAAN,KAAA,EAAAO,SAAA,EAAAH,SAAA,YAAAD,MAAA,GAAAH,KAAA,CAAAQ,KAAA,OAAAD,SAAA,gBAAAE,2BAAA,CAAAP,OAAA,QAAAC,MAAA;AAAA,SAAAL,0BAAA,eAAAY,OAAA,qBAAAJ,kBAAA,oBAAAA,kBAAA,CAAAK,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAV,kBAAA,CAAAO,OAAA,8CAAAI,CAAA;AAG5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA,IAKqBC,IAAI,0BAAAC,qBAAA;EAAA,IAAAC,UAAA,CAAAlB,OAAA,EAAAgB,IAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAA1B,YAAA,CAAAuB,IAAA;EAQvB;AACF;AACA;AACA;AACA;EACE,SAAAA,KAAYI,KAAU,EAAEC,QAAY,EAAE;IAAA,IAAAC,KAAA;IAAA,IAAAC,gBAAA,CAAAvB,OAAA,QAAAgB,IAAA;IACpCM,KAAA,GAAAH,MAAA,CAAAL,IAAA,OAAM,CAAC,CAAC,EAAEO,QAAO;IACjB;AACJ;AACA;AACA;AACA;AACA;IALI,IAAAG,gBAAA,CAAAxB,OAAA,MAAAyB,uBAAA,CAAAzB,OAAA,EAAAsB,KAAA;IAAA,IAAAE,gBAAA,CAAAxB,OAAA,MAAAyB,uBAAA,CAAAzB,OAAA,EAAAsB,KAAA;IAAA,IAAAE,gBAAA,CAAAxB,OAAA,MAAAyB,uBAAA,CAAAzB,OAAA,EAAAsB,KAAA;IAAA,IAAAE,gBAAA,CAAAxB,OAAA,MAAAyB,uBAAA,CAAAzB,OAAA,EAAAsB,KAAA;IAAA,IAAAE,gBAAA,CAAAxB,OAAA,MAAAyB,uBAAA,CAAAzB,OAAA,EAAAsB,KAAA;IAAA,IAAAE,gBAAA,CAAAxB,OAAA,MAAAyB,uBAAA,CAAAzB,OAAA,EAAAsB,KAAA;IAoRF;AACF;AACA;AACA;AACA;AACA;AACA;IANE,IAAAE,gBAAA,CAAAxB,OAAA,MAAAyB,uBAAA,CAAAzB,OAAA,EAAAsB,KAAA,0BAOsB,UAACD,OAAY,EAAK;MAAA,IAAAK,cAAA,EAAAC,cAAA;MACtC,IAAOC,OAAO,GAAIP,OAAO,CAAlBO,OAAO;MACd,IAAMC,WAAW,GAAG;QAClBC,WAAW,EAAEC,eAAI,CAACC,UAAU,CAACC,KAAK;QAClCC,IAAI,EAAE,CAACb,OAAO,CAACc,GAAG,CAAC;QACnBC,OAAO,EAAEL,eAAI,CAACM,YAAY;QAC1BC,GAAG,EACD,OAAOjB,OAAO,CAACkB,OAAO,KAAK,QAAQ,IAAI,IAAAC,MAAA,CAAAxC,OAAA,EAAa,IAAAyC,YAAA,CAAAzC,OAAA,EAAWqB,OAAO,CAACkB,OAAO,CAAC,CAAC,GAC5E,CAAC,GACDlB,OAAO,CAACkB,OAAO,GAAG,CAAC;QACzBG,UAAU,EAAE,UAAU,CAAE;MAC1B,CAAC;;MAEDpB,KAAA,CAAKqB,WAAW,CAACC,MAAM,CAAC;QACtBC,IAAI,EAAEd,eAAI,CAACe,aAAa;QACxBC,GAAG,EAAElB,WAAW;QAChBmB,aAAa,EAAEpB,OAAO,CAACoB;MACzB,CAAC,CAAC;MAEF,IAAMC,QAAQ,GAAG;QACfC,WAAW,EAAE,CACX;UACEC,QAAQ,EAAE,IAAAC,UAAA,CAAApD,OAAA,EACRsB,KAAA,CAAK+B,WAAW,CAACC,qBAAqB,CAAC;YACrCzB,WAAW,EAAXA,WAAW;YACX;YACA;YACA0B,UAAU,GAAA7B,cAAA,GAAEE,OAAO,CAAC4B,KAAK,cAAA9B,cAAA,uBAAbA,cAAA,CAAe+B,cAAc,EAAE;YAC3CC,UAAU,GAAA/B,cAAA,GAAEC,OAAO,CAAC+B,KAAK,cAAAhC,cAAA,uBAAbA,cAAA,CAAe8B,cAAc;UAC3C,CAAC,CAAC;UAEJ;QACF,CAAC;MAEL,CAAC;;MAED,OAAOG,aAAW,CAACC,kBAAkB,CAACjC,OAAO,EAAE;QAACC,WAAW,EAAEoB;MAAQ,CAAC,CAAC,CAACa,IAAI,CAAC,UAACC,KAAK,EAAK;QACtFzC,KAAA,CAAKqB,WAAW,CAACC,MAAM,CAAC;UACtBC,IAAI,EAAEd,eAAI,CAACiC,qBAAqB;UAChC1B,GAAG,EAAET,WAAW,CAACS,GAAG;UACpBU,aAAa,EAAEpB,OAAO,CAACoB;QACzB,CAAC,CAAC;QACFpB,OAAO,CAACqC,UAAU,CAACpC,WAAW,CAACS,GAAG,CAAC;;QAEnC;QACA;QACA,OAAOyB,KAAK;QACZ;QACA;MACF,CAAC,CAAC;IACJ,CAAC;IAvUCzC,KAAA,CAAKF,KAAK,GAAGA,KAAK;IAClB;AACJ;AACA;AACA;AACA;AACA;IACIE,KAAA,CAAKD,OAAO,GAAGA,QAAO;IACtB;AACJ;AACA;AACA;AACA;AACA;AACA;IACIC,KAAA,CAAKqB,WAAW,GAAG,IAAIuB,gBAAW,CAChC5C,KAAA,CAAKF,KAAK,EACVE,KAAA,CAAKD,OAAO,EACZC,KAAA,CAAK6C,UAAU,CAACC,IAAI,KAAA3C,uBAAA,CAAAzB,OAAA,EAAAsB,KAAA,EAAM,EAC1BA,KAAA,CAAK+C,cAAc,CAACD,IAAI,KAAA3C,uBAAA,CAAAzB,OAAA,EAAAsB,KAAA,EAAM,EAC9BA,KAAA,CAAKgD,YAAY,CAACF,IAAI,KAAA3C,uBAAA,CAAAzB,OAAA,EAAAsB,KAAA,EAAM,CAC7B;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;IACI;IACAA,KAAA,CAAK+B,WAAW,GAAG,IAAIkB,gBAAW,CAAC,CAAC,CAAC,EAAElD,QAAO,CAAC;IAC/C;AACJ;AACA;AACA;AACA;AACA;AACA;IACIC,KAAA,CAAKkD,aAAa,GAAG,CAAC,CAAC;IAEvBlD,KAAA,CAAKmD,aAAa,GAAG,IAAIC,sBAAa,CAACpD,KAAA,CAAK+B,WAAW,CAAC;IAAC,OAAA/B,KAAA;EAC3D;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE,IAAAqD,aAAA,CAAA3E,OAAA,EAAAgB,IAAA;IAAA4D,GAAA;IAAAC,KAAA,EAOA,SAAAC,UAAkBC,IAAS,EAAE;MAC3B,IAAMhC,GAAG,GAAGgC,IAAI,CAACC,OAAO;MACxB,IAAOhC,aAAa,GAAI+B,IAAI,CAArB/B,aAAa;MAEpBiC,oBAAW,CAACC,MAAM,CAACC,GAAG,oDAAAC,MAAA,CAC+B,IAAAhC,UAAA,CAAApD,OAAA,EAAe+C,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,OAChF;MAED,IAAIA,GAAG,CAACjB,WAAW,KAAKC,eAAI,CAACC,UAAU,CAACqD,uBAAuB,EAAE;QAC/D;QACA;QACA,IAAI,CAACZ,aAAa,CAACa,2BAA2B,CAACvC,GAAG,CAAC;MACrD,CAAC,MAAM;QACL,IAAI,CAACJ,WAAW,CAACC,MAAM,CAAC;UACtBC,IAAI,EAAEd,eAAI,CAACwD,gBAAgB;UAC3BxC,GAAG,EAAHA,GAAG;UACHC,aAAa,EAAbA;QACF,CAAC,CAAC;MACJ;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA4B,GAAA;IAAAC,KAAA,EAQA,SAAAW,KAAaxC,aAAqB,EAAEV,GAAW,EAAE;MAC/C,IAAI,CAACK,WAAW,CAACC,MAAM,CAAC;QACtBC,IAAI,EAAEd,eAAI,CAAC0D,kBAAkB;QAC7BnD,GAAG,EAAHA,GAAG;QACHU,aAAa,EAAbA;MACF,CAAC,CAAC;MAEF,OAAO0C,QAAA,CAAA1F,OAAA,CAAQ2F,OAAO,EAAE;IAC1B;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAf,GAAA;IAAAC,KAAA,EAOA,SAAAV,WAAmB9C,OAAY,EAAE;MAAA,IAAAuE,MAAA;MAC/B,OAAOF,QAAA,CAAA1F,OAAA,CAAQ2F,OAAO,EAAE,CAAC7B,IAAI,CAAC,YAAM;QAAA,IAAA+B,eAAA,EAAAC,eAAA;QAClC;QACA,IAAMlE,OAAO,GAAGgE,MAAI,CAACG,KAAK,CAACC,QAAQ,CAACC,iBAAiB,CAACC,QAAQ,CAC5D,eAAe,EACf7E,OAAO,CAAC2B,aAAa,CACtB;QACD,IAAMnB,WAAW,GAAG;UAClBC,WAAW,EAAEC,eAAI,CAACC,UAAU,CAACmE,EAAE;UAC/B/D,OAAO,EAAEL,eAAI,CAACM,YAAY;UAC1BC,GAAG,EAAEjB,OAAO,CAACiB;QACf,CAAC;QAED2C,oBAAW,CAACC,MAAM,CAACC,GAAG,uDAAAC,MAAA,CAAuD/D,OAAO,CAACiB,GAAG,EAAG;QAE3F,OAAOsD,MAAI,CAACvC,WAAW,CACpB+C,QAAQ,CAAC;UACRvE,WAAW,EAAXA,WAAW;UACXwE,YAAY,EAAEzE,OAAO,CAAC0E,OAAO;UAC7BC,OAAO,EAAElF,OAAO,CAACkF,OAAO;UACxBvD,aAAa,EAAE3B,OAAO,CAAC2B,aAAa;UACpCO,UAAU,GAAAsC,eAAA,GAAEjE,OAAO,CAAC4B,KAAK,cAAAqC,eAAA,uBAAbA,eAAA,CAAepC,cAAc,EAAE;UAC3CC,UAAU,GAAAoC,eAAA,GAAElE,OAAO,CAAC+B,KAAK,cAAAmC,eAAA,uBAAbA,eAAA,CAAerC,cAAc,EAAE;UAC3C+C,SAAS,EAAE5E,OAAO,CAAC6E;QACrB,CAAC,CAAC,CACD3C,IAAI,CAAC,YAAM;UACV8B,MAAI,CAACjD,WAAW,CAACC,MAAM,CAAC;YACtBC,IAAI,EAAEd,eAAI,CAACe,aAAa;YACxBC,GAAG,EAAElB,WAAW;YAChBmB,aAAa,EAAE3B,OAAO,CAAC2B;UACzB,CAAC,CAAC;UACFiC,oBAAW,CAACC,MAAM,CAACC,GAAG,oDAAAC,MAAA,CAAoD/D,OAAO,CAACiB,GAAG,EAAG;UACxFV,OAAO,CAACqC,UAAU,CAAC5C,OAAO,CAACiB,GAAG,CAAC;QACjC,CAAC,CAAC;MACN,CAAC,CAAC;IACJ;;IAEA;IACA;IACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAsC,GAAA;IAAAC,KAAA,EASA,SAAAR,eAAuBhD,OAAY,EAAE;MAAA,IAAAqF,eAAA;QAAAC,eAAA;QAAAC,MAAA;MACnC;MACA,IAAMhF,OAAO,GAAG,IAAI,CAACmE,KAAK,CAACC,QAAQ,CAACC,iBAAiB,CAACC,QAAQ,CAC5D,eAAe,EACf7E,OAAO,CAAC2B,aAAa,CACtB;MACD,IAAMnB,WAAW,GAAG;QAClBC,WAAW,EAAEC,eAAI,CAACC,UAAU,CAAC6E,MAAM;QACnC3E,IAAI,EAAEb,OAAO,CAACa,IAAI;QAClBE,OAAO,EAAEL,eAAI,CAACM,YAAY;QAC1BC,GAAG,EAAEjB,OAAO,CAACiB;MACf,CAAC;MAED,IAAI,CAACK,WAAW,CAACC,MAAM,CAAC;QACtBC,IAAI,EAAEd,eAAI,CAACe,aAAa;QACxBC,GAAG,EAAElB,WAAW;QAChBmB,aAAa,EAAE3B,OAAO,CAAC2B;MACzB,CAAC,CAAC;MAEF,OAAO,IAAI,CAACK,WAAW,CACpB+C,QAAQ,CAAC;QACRvE,WAAW,EAAXA,WAAW;QACXwE,YAAY,EAAEzE,OAAO,CAAC0E,OAAO;QAC7BC,OAAO,EAAElF,OAAO,CAACkF,OAAO;QACxBvD,aAAa,EAAE3B,OAAO,CAAC2B,aAAa;QACpCO,UAAU,GAAAmD,eAAA,GAAE9E,OAAO,CAAC4B,KAAK,cAAAkD,eAAA,uBAAbA,eAAA,CAAejD,cAAc,EAAE;QAC3CC,UAAU,GAAAiD,eAAA,GAAE/E,OAAO,CAAC+B,KAAK,cAAAgD,eAAA,uBAAbA,eAAA,CAAelD,cAAc,EAAE;QAC3C+C,SAAS,EAAE5E,OAAO,CAAC6E;MACrB,CAAC,CAAC,CACD3C,IAAI,CAAC,YAAM;QACVlC,OAAO,CAACqC,UAAU,CAAC5C,OAAO,CAACiB,GAAG,CAAC;QAE/BsE,MAAI,CAACjE,WAAW,CAACC,MAAM,CAAC;UACtBC,IAAI,EAAEd,eAAI,CAACiC,qBAAqB;UAChC1B,GAAG,EAAET,WAAW,CAACS,GAAG;UACpBU,aAAa,EAAEpB,OAAO,CAACoB;QACzB,CAAC,CAAC;MACJ,CAAC,CAAC;IACN;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAA4B,GAAA;IAAAC,KAAA,EASA,SAAAiC,cAAsBC,OAAY,EAAEhD,KAAa,EAAEiD,SAAiB,EAAE;MACpE,IAAMjE,GAAG,GAAG;QACVjB,WAAW,EAAEC,eAAI,CAACC,UAAU,CAACiF,KAAK;QAClC7E,OAAO,EAAEL,eAAI,CAACM,YAAY;QAC1B2E,SAAS,EAATA,SAAS;QACT1E,GAAG,EAAEyE,OAAO,CAAC9E,KAAK,CAACK;MACrB,CAAC;MAED,OAAO,IAAI,CAACe,WAAW,CAAC+C,QAAQ,CAACrD,GAAG,EAAEgB,KAAK,CAAC;IAC9C;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAAa,GAAA;IAAAC,KAAA,EAOA,SAAAqC,qBAAqB7F,OAAY,EAAE;MAAA,IAAA8F,MAAA;MACjC,IAAOvF,OAAO,GAAeP,OAAO,CAA7BO,OAAO;QAAEwF,SAAS,GAAI/F,OAAO,CAApB+F,SAAS;MACzB,IAAMvF,WAAW,GAAG;QAClBC,WAAW,EAAEC,eAAI,CAACC,UAAU,CAACC,KAAK;QAClCC,IAAI,EAAE,CAACb,OAAO,CAACc,GAAG,CAAC;QACnB;QACAC,OAAO,EAAEL,eAAI,CAACM,YAAY;QAC1BC,GAAG,EACD,OAAOjB,OAAO,CAACkB,OAAO,KAAK,QAAQ,IAAI,IAAAC,MAAA,CAAAxC,OAAA,EAAa,IAAAyC,YAAA,CAAAzC,OAAA,EAAWqB,OAAO,CAACkB,OAAO,CAAC,CAAC,GAC5E,CAAC,GACDlB,OAAO,CAACkB,OAAO,GAAG,CAAC;QACzBG,UAAU,EAAE,UAAU,CAAE;MAC1B,CAAC;;MAED,IAAI,CAACC,WAAW,CAACC,MAAM,CAAC;QACtBC,IAAI,EAAEd,eAAI,CAACe,aAAa;QACxBC,GAAG,EAAElB,WAAW;QAChBmB,aAAa,EAAEpB,OAAO,CAACoB;MACzB,CAAC,CAAC;;MAEF;MACA;MACA;MACA,OAAO,IAAI,CAACyB,aAAa,CACtB4C,SAAS,CAACzF,OAAO,CAAC,CAClBkC,IAAI,CAAC,UAACwD,sBAAsB,EAAK;QAAA,IAAAC,eAAA,EAAAC,eAAA;QAChC,IAAMC,gBAAgB,GAAGL,SAAS,IAAIE,sBAAsB;QAE5D,OAAOH,MAAI,CAAC9D,WAAW,CAAC+C,QAAQ,CAAC;UAC/BvE,WAAW,EAAXA,WAAW;UACXmB,aAAa,EAAEpB,OAAO,CAACoB,aAAa;UACpCqD,YAAY,EAAEzE,OAAO,CAAC0E,OAAO;UAC7BC,OAAO,EAAEkB,gBAAgB,GAAG,EAAE,GAAG7F,OAAO,CAAC2E,OAAO;UAChDhD,UAAU,GAAAgE,eAAA,GAAE3F,OAAO,CAAC4B,KAAK,cAAA+D,eAAA,uBAAbA,eAAA,CAAe9D,cAAc,EAAE;UAC3CC,UAAU,GAAA8D,eAAA,GAAE5F,OAAO,CAAC+B,KAAK,cAAA6D,eAAA,uBAAbA,eAAA,CAAe/D,cAAc,EAAE;UAC3C+C,SAAS,EAAE5E,OAAO,CAAC6E;QACrB,CAAC,CAAC;MACJ,CAAC,CAAC,CAED3C,IAAI,CAAC,UAAA4D,IAAA,EAA+B;QAAA,IAA7B3D,KAAK,GAAA2D,IAAA,CAAL3D,KAAK;UAAE4D,gBAAgB,GAAAD,IAAA,CAAhBC,gBAAgB;QAC7BR,MAAI,CAACxE,WAAW,CAACC,MAAM,CAAC;UACtBC,IAAI,EAAEd,eAAI,CAACiC,qBAAqB;UAChC1B,GAAG,EAAET,WAAW,CAACS,GAAG;UACpBU,aAAa,EAAEpB,OAAO,CAACoB;QACzB,CAAC,CAAC;QACFpB,OAAO,CAACqC,UAAU,CAACpC,WAAW,CAACS,GAAG,CAAC;QAEnC,IAAIqF,gBAAgB,EAAE;UACpB/F,OAAO,CAACgG,sBAAsB,CAACD,gBAAgB,CAAC;QAClD;;QAEA;QACA;QACA,OAAO5D,KAAK;QACZ;QACA;MACF,CAAC,CAAC;IACN;EAAC;IAAAa,GAAA;IAAAC,KAAA;IA6DD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,SAAAP,aAAqBtB,aAAqB,EAAE6E,UAAkB,EAAE;MAC9DC,mBAAc,CAACC,uBAAuB,CAAC/E,aAAa,EAAE6E,UAAU,CAAC;MACjE;MACA,IAAMjG,OAAO,GAAG,IAAI,CAACmE,KAAK,CAACC,QAAQ,CAACC,iBAAiB,CAACC,QAAQ,CAAC,eAAe,EAAElD,aAAa,CAAC;MAE9FpB,OAAO,CAACoG,oBAAoB,EAAE;MAC9B,IAAI,CAACF,mBAAc,CAACG,MAAM,CAACjF,aAAa,CAAC,EAAE;QACzCpB,OAAO,CAACsG,4BAA4B,EAAE;MACxC;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAAtD,GAAA;IAAAC,KAAA,EAUA,SAAAsD,gBAAgBvG,OAAgB,EAAEwG,cAAuB,EAAE;MACzD,OAAO,IAAI,CAAC3D,aAAa,CAAC0D,eAAe,CAACvG,OAAO,EAAEwG,cAAc,CAAC;IACpE;EAAC;EAAA,OAAApH,IAAA;AAAA,EA7X+BqH,+BAAoB;AAAAC,OAAA,CAAAtI,OAAA,GAAAgB,IAAA"}