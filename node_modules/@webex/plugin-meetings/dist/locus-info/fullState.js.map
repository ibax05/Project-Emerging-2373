{"version":3,"names":["_constants","require","FullState","parse","fullState","type","FULL_STATE","UNKNOWN","meetingState","state","locked","getFullState","oldFullState","newFullState","previous","current","updates","isMeetingEnded","isMeetingTerminating","meetingTypeChangedTo","isTypeChanged","meetingStateChangedTo","meetingStateChange","INACTIVE","ACTIVE","INITIALIZING","TERMINATING","_default","exports","default"],"sources":["fullState.ts"],"sourcesContent":["import {FULL_STATE} from '../constants';\n\nconst FullState: any = {};\n\nFullState.parse = (fullState) => ({\n  type: fullState.type || FULL_STATE.UNKNOWN,\n  meetingState: fullState.state,\n  locked: fullState.locked,\n});\n\nFullState.getFullState = (oldFullState, newFullState) => {\n  const previous = oldFullState && FullState.parse(oldFullState);\n  const current = newFullState && FullState.parse(newFullState);\n\n  return {\n    previous,\n    current,\n    updates: {\n      isMeetingEnded: FullState.isMeetingEnded(previous, current),\n      isMeetingTerminating: FullState.isMeetingTerminating(previous, current),\n      meetingTypeChangedTo: FullState.isTypeChanged(previous, current),\n      meetingStateChangedTo: FullState.meetingStateChange(previous, current),\n    },\n  };\n};\n\nFullState.isMeetingEnded = (previous, current) => {\n  if (\n    current.state === FULL_STATE.INACTIVE &&\n    previous &&\n    (previous.state === FULL_STATE.ACTIVE ||\n      previous.state === FULL_STATE.INITIALIZING ||\n      previous.state === FULL_STATE.TERMINATING)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nFullState.isMeetingTerminating = (previous, current) => {\n  if (\n    current.state === FULL_STATE.TERMINATING &&\n    previous &&\n    (previous.state === FULL_STATE.ACTIVE || previous.state === FULL_STATE.INITIALIZING)\n  ) {\n    return true;\n  }\n\n  return false;\n};\n\nFullState.isTypeChanged = (previous, current) => {\n  if (!previous || current.type !== previous.type) {\n    return current && current.type;\n  }\n\n  return null;\n};\n\nFullState.meetingStateChange = (previous, current) => {\n  if (!previous || current.meetingState !== previous.meetingState) {\n    return current && current.meetingState;\n  }\n\n  return null;\n};\n\nexport default FullState;\n"],"mappings":";;;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAEA,IAAMC,SAAc,GAAG,CAAC,CAAC;AAEzBA,SAAS,CAACC,KAAK,GAAG,UAACC,SAAS;EAAA,OAAM;IAChCC,IAAI,EAAED,SAAS,CAACC,IAAI,IAAIC,qBAAU,CAACC,OAAO;IAC1CC,YAAY,EAAEJ,SAAS,CAACK,KAAK;IAC7BC,MAAM,EAAEN,SAAS,CAACM;EACpB,CAAC;AAAA,CAAC;AAEFR,SAAS,CAACS,YAAY,GAAG,UAACC,YAAY,EAAEC,YAAY,EAAK;EACvD,IAAMC,QAAQ,GAAGF,YAAY,IAAIV,SAAS,CAACC,KAAK,CAACS,YAAY,CAAC;EAC9D,IAAMG,OAAO,GAAGF,YAAY,IAAIX,SAAS,CAACC,KAAK,CAACU,YAAY,CAAC;EAE7D,OAAO;IACLC,QAAQ,EAARA,QAAQ;IACRC,OAAO,EAAPA,OAAO;IACPC,OAAO,EAAE;MACPC,cAAc,EAAEf,SAAS,CAACe,cAAc,CAACH,QAAQ,EAAEC,OAAO,CAAC;MAC3DG,oBAAoB,EAAEhB,SAAS,CAACgB,oBAAoB,CAACJ,QAAQ,EAAEC,OAAO,CAAC;MACvEI,oBAAoB,EAAEjB,SAAS,CAACkB,aAAa,CAACN,QAAQ,EAAEC,OAAO,CAAC;MAChEM,qBAAqB,EAAEnB,SAAS,CAACoB,kBAAkB,CAACR,QAAQ,EAAEC,OAAO;IACvE;EACF,CAAC;AACH,CAAC;AAEDb,SAAS,CAACe,cAAc,GAAG,UAACH,QAAQ,EAAEC,OAAO,EAAK;EAChD,IACEA,OAAO,CAACN,KAAK,KAAKH,qBAAU,CAACiB,QAAQ,IACrCT,QAAQ,KACPA,QAAQ,CAACL,KAAK,KAAKH,qBAAU,CAACkB,MAAM,IACnCV,QAAQ,CAACL,KAAK,KAAKH,qBAAU,CAACmB,YAAY,IAC1CX,QAAQ,CAACL,KAAK,KAAKH,qBAAU,CAACoB,WAAW,CAAC,EAC5C;IACA,OAAO,IAAI;EACb;EAEA,OAAO,KAAK;AACd,CAAC;AAEDxB,SAAS,CAACgB,oBAAoB,GAAG,UAACJ,QAAQ,EAAEC,OAAO,EAAK;EACtD,IACEA,OAAO,CAACN,KAAK,KAAKH,qBAAU,CAACoB,WAAW,IACxCZ,QAAQ,KACPA,QAAQ,CAACL,KAAK,KAAKH,qBAAU,CAACkB,MAAM,IAAIV,QAAQ,CAACL,KAAK,KAAKH,qBAAU,CAACmB,YAAY,CAAC,EACpF;IACA,OAAO,IAAI;EACb;EAEA,OAAO,KAAK;AACd,CAAC;AAEDvB,SAAS,CAACkB,aAAa,GAAG,UAACN,QAAQ,EAAEC,OAAO,EAAK;EAC/C,IAAI,CAACD,QAAQ,IAAIC,OAAO,CAACV,IAAI,KAAKS,QAAQ,CAACT,IAAI,EAAE;IAC/C,OAAOU,OAAO,IAAIA,OAAO,CAACV,IAAI;EAChC;EAEA,OAAO,IAAI;AACb,CAAC;AAEDH,SAAS,CAACoB,kBAAkB,GAAG,UAACR,QAAQ,EAAEC,OAAO,EAAK;EACpD,IAAI,CAACD,QAAQ,IAAIC,OAAO,CAACP,YAAY,KAAKM,QAAQ,CAACN,YAAY,EAAE;IAC/D,OAAOO,OAAO,IAAIA,OAAO,CAACP,YAAY;EACxC;EAEA,OAAO,IAAI;AACb,CAAC;AAAC,IAAAmB,QAAA,GAEazB,SAAS;AAAA0B,OAAA,CAAAC,OAAA,GAAAF,QAAA"}