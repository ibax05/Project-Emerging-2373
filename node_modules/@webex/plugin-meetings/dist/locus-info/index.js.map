{"version":3,"names":["_loggerProxy","_interopRequireDefault","require","_eventsScope","_constants","_metrics","_config","_infoUtils","_fullState","_selfUtils","_hostUtils","_controlsUtils","_embeddedAppsUtils","_mediaSharesUtils","_parser","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","default","result","NewTarget","constructor","_Reflect$construct","arguments","apply","_possibleConstructorReturn2","Reflect","sham","Proxy","Boolean","prototype","valueOf","call","e","LocusInfo","_EventsScope","_inherits2","_super","updateMeeting","webex","meetingId","_this","_classCallCheck2","_defineProperty2","_assertThisInitialized2","parsedLocus","states","emitChange","compareAndUpdateFlags","locusParser","LocusDeltaParser","_createClass2","key","value","applyLocusDeltaData","action","locus","meeting","_this2","_LocusDeltaParser$loc","loci","DESYNC","USE_CURRENT","USE_INCOMING","locusInfo","onDeltaLocus","locusDesync","needToGetFullLocus","meetingRequest","getFullLocus","desync","locusUrl","then","res","onFullLocus","body","resume","LoggerProxy","logger","info","concat","handleLocusDelta","_this3","onDeltaAction","parsedLoci","onDeltaEvent","init","_locus$links","length","undefined","created","scheduledMeeting","participantsUrl","replaces","aclUrl","baseSequence","sequence","membership","identities","participants","deltaParticipants","updateParticipants","updateConversationUrl","conversationUrl","updateControls","controls","updateLocusUrl","url","updateFullState","fullState","updateMeetingInfo","updateEmbeddedApps","embeddedApps","updateSelf","self","updateHostInfo","host","updateMediaShares","mediaShares","updateServices","links","services","initialSetup","parse","data","eventType","LOCUSEVENT","PARTICIPANT_JOIN","PARTICIPANT_LEFT","CONTROLS_UPDATED","PARTICIPANT_AUDIO_MUTED","PARTICIPANT_AUDIO_UNMUTED","PARTICIPANT_VIDEO_MUTED","PARTICIPANT_VIDEO_UNMUTED","SELF_CHANGED","PARTICIPANT_UPDATED","PARTICIPANT_CONTROLS_UPDATED","PARTICIPANT_ROLES_UPDATED","PARTICIPANT_DECLINED","FLOOR_GRANTED","FLOOR_RELEASED","DIFFERENCE","emitScoped","scope","eventName","args","emit","error","updateParticipantDeltas","updateLocusInfo","isMeetingActive","handleOneOnOneEvent","workingCopy","type","_CALL_","_SIP_BRIDGE_","file","function","EVENTS","REMOTE_RESPONSE","remoteDeclined","remoteAnswered","_locus$links2","updateCreated","updateParticipantsUrl","updateReplace","replace","updateAclUrl","updateBasequence","updateSequence","updateMemberShip","updateIdentifiers","compareAndUpdate","getLocusPartner","find","participant","identity","_USER_","removed","partner","state","LOCUS","STATE","INACTIVE","warn","Metrics","postEvent","event","REMOTE_ENDED","DESTROY_MEETING","reason","CALL_REMOVED_REASON","CALL_INACTIVE","shouldLeave","MEETING_STATE","STATES","LEFT","DECLINED","NOTIFIED","JOINED","PARTNER_LEFT","joinedWith","_LEFT_","IDLE","SELF_LEFT","_MEETING_","TERMINATING","MEETING_REMOVED_REASON","MEETING_INACTIVE_TERMINATING","FULLSTATE_REMOVED","SELF_REMOVED","compareSelfAndHost","compareHostAndSelf","_this$parsedLocus$hos","selfIdentity","hostId","moderator","LOCUS_INFO_CAN_ASSIGN_HOST","canAssignHost","_this4","findParticipant","collection","item","person","id","generateDelta","prevState","newState","deltas","audioStatus","videoSlidesStatus","videoStatus","_keys","forEach","reduce","existingParticipant","delta","status","changed","push","_this$parsedLocus$con","LOCUS_INFO_UPDATE_PARTICIPANTS","recordingId","record","modifiedBy","selfId","_isEqual2","ControlsUtils","_ControlsUtils$getCon","getControls","_ControlsUtils$getCon2","updates","hasRecordingChanged","hasRecordingPausedChanged","hasMeetingContainerChanged","hasTranscribeChanged","hasEntryExitToneChanged","current","paused","RECORDING_STATE","PAUSED","recording","RESUMED","RECORDING","LOCUSINFO","CONTROLS_RECORDING_UPDATED","lastModified","meetingContainerUrl","meetingContainer","CONTROLS_MEETING_CONTAINER_UPDATED","_current$transcribe","transcribe","transcribing","caption","CONTROLS_MEETING_TRANSCRIBE_UPDATED","entryExitTone","CONTROLS_ENTRY_EXIT_TONE_UPDATED","LINKS_SERVICES","FullState","getFullState","meetingStateChangedTo","FULL_STATE_MEETING_STATE_CHANGE","previousState","previous","meetingState","currentState","meetingTypeChangedTo","FULL_STATE_TYPE_UPDATE","parsedHosts","HostUtils","getHosts","isNewHost","LOCUS_INFO_UPDATE_HOST","newHost","oldHost","_this$parsedLocus$sel","roles","SelfUtils","getRoles","isJoined","parsedInfo","InfoUtils","getInfos","MEETING_INFO_UPDATED","isLocked","MEETING_LOCKED","isUnlocked","MEETING_UNLOCKED","EmbeddedAppsUtils","areSimilar","parsedEmbeddedApps","EMBEDDED_APPS_UPDATED","parsedMediaShares","MediaSharesUtils","getMediaShares","LOCUS_INFO_UPDATE_MEDIA_SHARES","parsedSelves","getSelves","internal","device","element","getSipUrl","sipUri","moderatorChanged","layoutChanged","CONTROLS_MEETING_LAYOUT_UPDATED","layout","isMediaInactiveOrReleased","DISCONNECT_DUE_TO_INACTIVITY","SELF_MODERATOR_CHANGED","localAudioUnmuteRequiredByServer","LOCAL_UNMUTE_REQUIRED","muted","remoteMuted","unmuteAllowed","isMutedByOthersChanged","SELF_REMOTE_MUTE_STATUS_UPDATED","localAudioUnmuteRequestedByServer","LOCAL_UNMUTE_REQUESTED","isUserUnadmitted","SELF_UNADMITTED_GUEST","isUserAdmitted","SELF_ADMITTED_GUEST","isMediaInactive","MEDIA_INACTIVITY","getMediaStatus","mediaSessions","audioStateChange","videoStateChange","shareStateChange","_parsedSelves$current","_parsedSelves$current2","_parsedSelves$current3","MEDIA_STATUS_CHANGE","currentMediaStatus","audio","video","shareStatus","share","isUserObserving","SELF_OBSERVING","canNotViewTheParticipantListChanged","SELF_CANNOT_VIEW_PARTICIPANT_LIST_CHANGE","canNotViewTheParticipantList","isSharingBlockedChanged","SELF_IS_SHARING_BLOCKED_CHANGE","isSharingBlocked","LOCUS_INFO_UPDATE_SELF","oldSelf","newSelf","LOCUS_INFO_UPDATE_URL","EventsScope","exports"],"sources":["index.ts"],"sourcesContent":["import {isEqual} from 'lodash';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport EventsScope from '../common/events/events-scope';\nimport {\n  EVENTS,\n  LOCUSEVENT,\n  _USER_,\n  _CALL_,\n  _SIP_BRIDGE_,\n  MEETING_STATE,\n  _MEETING_,\n  LOCUSINFO,\n  LOCUS,\n  _LEFT_,\n  MEETING_REMOVED_REASON,\n  CALL_REMOVED_REASON,\n  RECORDING_STATE,\n} from '../constants';\nimport Metrics from '../metrics';\nimport {eventType} from '../metrics/config';\nimport InfoUtils from './infoUtils';\nimport FullState from './fullState';\nimport SelfUtils from './selfUtils';\nimport HostUtils from './hostUtils';\nimport ControlsUtils from './controlsUtils';\nimport EmbeddedAppsUtils from './embeddedAppsUtils';\nimport MediaSharesUtils from './mediaSharesUtils';\nimport LocusDeltaParser from './parser';\n\n/**\n * @description LocusInfo extends ChildEmitter to convert locusInfo info a private emitter to parent object\n * @export\n * @private\n * @class LocusInfo\n */\nexport default class LocusInfo extends EventsScope {\n  compareAndUpdateFlags: any;\n  emitChange: any;\n  locusParser: any;\n  meetingId: any;\n  parsedLocus: any;\n  updateMeeting: any;\n  webex: any;\n  aclUrl: any;\n  baseSequence: any;\n  created: any;\n  deltaParticipants: any;\n  identities: any;\n  membership: any;\n  participants: any;\n  participantsUrl: any;\n  replaces: any;\n  scheduledMeeting: any;\n  sequence: any;\n  controls: any;\n  conversationUrl: any;\n  embeddedApps: any;\n  fullState: any;\n  host: any;\n  info: any;\n  mediaShares: any;\n  replace: any;\n  url: any;\n  services: any;\n\n  constructor(updateMeeting, webex, meetingId) {\n    super();\n    this.parsedLocus = {\n      states: [],\n    };\n    this.webex = webex;\n    this.emitChange = false;\n    this.compareAndUpdateFlags = {};\n    this.meetingId = meetingId;\n    this.updateMeeting = updateMeeting;\n    this.locusParser = new LocusDeltaParser();\n  }\n\n  /**\n   * Apply locus delta data to meeting\n   * @param {string} action Locus delta action\n   * @param {Locus} locus\n   * @param {Meeting} meeting\n   * @returns {undefined}\n   */\n  applyLocusDeltaData(action: string, locus: any, meeting: any) {\n    const {DESYNC, USE_CURRENT, USE_INCOMING} = LocusDeltaParser.loci;\n\n    switch (action) {\n      case USE_INCOMING:\n        meeting.locusInfo.onDeltaLocus(locus);\n        break;\n      case USE_CURRENT:\n        meeting.locusDesync = false;\n        meeting.needToGetFullLocus = false;\n        break;\n      case DESYNC:\n        meeting.meetingRequest\n          .getFullLocus({\n            desync: true,\n            locusUrl: meeting.locusUrl,\n          })\n          .then((res) => {\n            meeting.locusInfo.onFullLocus(res.body);\n            // Notify parser to resume processing delta events\n            // now that we have full locus from DESYNC.\n            this.locusParser.resume();\n          });\n        break;\n      default:\n        LoggerProxy.logger.info(\n          `Locus-info:index#applyLocusDeltaData --> Unknown locus delta action: ${action}`\n        );\n    }\n  }\n\n  /**\n   * Adds locus delta to parser's queue\n   * and registers a function handler\n   * to recieve parsed actions from queue.\n   * @param {Locus} locus\n   * @param {Meeting} meeting\n   * @returns {undefined}\n   */\n  handleLocusDelta(locus: any, meeting: any) {\n    // register a function to process delta actions\n    if (!this.locusParser.onDeltaAction) {\n      // delta action, along with associated loci\n      // is passed into the function.\n      this.locusParser.onDeltaAction = (action, parsedLoci) => {\n        this.applyLocusDeltaData(action, parsedLoci, meeting);\n      };\n    }\n    // queue delta event with parser\n    this.locusParser.onDeltaEvent(locus);\n  }\n\n  /**\n   * @param {Locus} locus\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  init(locus: any = {}) {\n    this.created = locus.created || null;\n    this.scheduledMeeting = locus.meeting || null;\n    this.participantsUrl = locus.participantsUrl || null;\n    this.replaces = locus.replaces || null;\n    this.aclUrl = locus.aclUrl || null;\n    this.baseSequence = locus.baseSequence || null;\n    this.sequence = locus.sequence || null;\n    this.membership = locus.membership || null;\n    this.identities = locus.identities || null;\n    this.participants = locus.participants || null;\n\n    /**\n     * Stores the delta values for a changed participant.\n     *\n     * @typedef {Object} DeltaParticipant\n     * @property {Record<string, boolean>} delta - Contains changed streams.\n     * @property {Object} person - Contains person data.\n     */\n\n    /**\n     * Stored participant changes between the last event and the current event.\n     * All previously stored events are overwritten between events.\n     *\n     * @instance\n     * @type {Array<DeltaParticipant>}\n     * @private\n     * @member LocusInfo\n     */\n    this.deltaParticipants = [];\n\n    // above section only updates the locusInfo object\n    // The below section makes sure it updates the locusInfo as well as updates the meeting object\n    this.updateParticipants(locus.participants);\n    // For 1:1 space meeting the conversation Url does not exist in locus.conversation\n    this.updateConversationUrl(locus.conversationUrl, locus.info);\n    this.updateControls(locus.controls);\n    this.updateLocusUrl(locus.url);\n    this.updateFullState(locus.fullState);\n    this.updateMeetingInfo(locus.info);\n    this.updateEmbeddedApps(locus.embeddedApps);\n    // self and participants generate sipUrl for 1:1 meeting\n    this.updateSelf(locus.self, locus.participants);\n    this.updateHostInfo(locus.host);\n    this.updateMediaShares(locus.mediaShares);\n    this.updateServices(locus.links?.services);\n  }\n\n  /**\n   * @param {Object} locus\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  initialSetup(locus: object) {\n    this.onFullLocus(locus);\n\n    // Change it to true after it receives it first locus object\n    this.emitChange = true;\n  }\n\n  /**\n   * @param {Meeting} meeting\n   * @param {Object} data\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  parse(meeting: any, data: any) {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const {eventType} = data;\n\n    LoggerProxy.logger.info(`Locus-info:index#parse --> received locus data: ${eventType}`);\n\n    switch (eventType) {\n      case LOCUSEVENT.PARTICIPANT_JOIN:\n      case LOCUSEVENT.PARTICIPANT_LEFT:\n      case LOCUSEVENT.CONTROLS_UPDATED:\n      case LOCUSEVENT.PARTICIPANT_AUDIO_MUTED:\n      case LOCUSEVENT.PARTICIPANT_AUDIO_UNMUTED:\n      case LOCUSEVENT.PARTICIPANT_VIDEO_MUTED:\n      case LOCUSEVENT.PARTICIPANT_VIDEO_UNMUTED:\n      case LOCUSEVENT.SELF_CHANGED:\n      case LOCUSEVENT.PARTICIPANT_UPDATED:\n      case LOCUSEVENT.PARTICIPANT_CONTROLS_UPDATED:\n      case LOCUSEVENT.PARTICIPANT_ROLES_UPDATED:\n      case LOCUSEVENT.PARTICIPANT_DECLINED:\n      case LOCUSEVENT.FLOOR_GRANTED:\n      case LOCUSEVENT.FLOOR_RELEASED:\n        this.onFullLocus(data.locus, eventType);\n        break;\n      case LOCUSEVENT.DIFFERENCE:\n        this.handleLocusDelta(data.locus, meeting);\n        break;\n\n      default:\n        // Why will there be a event with no eventType ????\n        // we may not need this, we can get full locus\n        this.handleLocusDelta(data.locus, meeting);\n    }\n  }\n\n  /**\n   * @param {String} scope\n   * @param {String} eventName\n   * @param {Array} args\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  emitScoped(scope?: any, eventName?: string, args?: any) {\n    return this.emit(scope, eventName, args);\n  }\n\n  /**\n   * updates the locus with full locus object\n   * @param {object} locus locus object\n   * @param {string} eventType particulat locus event\n   * @returns {object} null\n   * @memberof LocusInfo\n   */\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  onFullLocus(locus: any, eventType?: string) {\n    if (!locus) {\n      LoggerProxy.logger.error(\n        'Locus-info:index#onFullLocus --> object passed as argument was invalid, continuing.'\n      );\n    }\n    this.updateParticipantDeltas(locus.participants);\n    this.scheduledMeeting = locus.meeting || null;\n    this.participants = locus.participants;\n    this.updateLocusInfo(locus);\n    this.updateParticipants(locus.participants);\n    this.isMeetingActive();\n    this.handleOneOnOneEvent(eventType);\n    this.updateEmbeddedApps(locus.embeddedApps);\n    // set current (working copy) for parser\n    this.locusParser.workingCopy = locus;\n  }\n\n  // used for ringing stops on one on one\n  /**\n   * @param {String} eventType\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  handleOneOnOneEvent(eventType: string) {\n    if (\n      this.parsedLocus.fullState.type === _CALL_ ||\n      this.parsedLocus.fullState.type === _SIP_BRIDGE_\n    ) {\n      // for 1:1 bob calls alice and alice declines, notify the meeting state\n      if (eventType === LOCUSEVENT.PARTICIPANT_DECLINED) {\n        // trigger the event for stop ringing\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'handleOneonOneEvent',\n          },\n          EVENTS.REMOTE_RESPONSE,\n          {\n            remoteDeclined: true,\n            remoteAnswered: false,\n          }\n        );\n      }\n      // for 1:1 bob calls alice and alice answers, notify the meeting state\n      if (eventType === LOCUSEVENT.PARTICIPANT_JOIN) {\n        // trigger the event for stop ringing\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'handleOneonOneEvent',\n          },\n          EVENTS.REMOTE_RESPONSE,\n          {\n            remoteDeclined: false,\n            remoteAnswered: true,\n          }\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Object} locus\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  onDeltaLocus(locus: any) {\n    this.updateLocusInfo(locus);\n    this.updateParticipants(locus.participants);\n    this.isMeetingActive();\n  }\n\n  /**\n   * @param {Object} locus\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateLocusInfo(locus: any) {\n    this.updateControls(locus.controls);\n    this.updateConversationUrl(locus.conversationUrl, locus.info);\n    this.updateCreated(locus.created);\n    this.updateFullState(locus.fullState);\n    this.updateHostInfo(locus.host);\n    this.updateMeetingInfo(locus.info, locus.self);\n    this.updateMediaShares(locus.mediaShares);\n    this.updateParticipantsUrl(locus.participantsUrl);\n    this.updateReplace(locus.replace);\n    this.updateSelf(locus.self, locus.participants);\n    this.updateLocusUrl(locus.url);\n    this.updateAclUrl(locus.aclUrl);\n    this.updateBasequence(locus.baseSequence);\n    this.updateSequence(locus.sequence);\n    this.updateMemberShip(locus.membership);\n    this.updateIdentifiers(locus.identities);\n    this.updateEmbeddedApps(locus.embeddedApps);\n    this.updateServices(locus.links?.services);\n    this.compareAndUpdate();\n    // update which required to compare different objects from locus\n  }\n\n  /**\n   * @param {Array} participants\n   * @param {Object} self\n   * @returns {Array}\n   * @memberof LocusInfo\n   */\n  getLocusPartner(participants: Array<any>, self: any) {\n    if (!participants || participants.length === 0) {\n      return null;\n    }\n\n    return (\n      participants.find(\n        (participant) =>\n          self &&\n          participant.identity !== self.identity &&\n          (participants.length <= 2 || (participant.type === _USER_ && !participant.removed))\n        // @ts-ignore\n      ) || this.partner\n    );\n  }\n\n  // TODO: all the leave states need to be checked\n  /**\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  isMeetingActive() {\n    if (\n      this.parsedLocus.fullState.type === _CALL_ ||\n      this.parsedLocus.fullState.type === _SIP_BRIDGE_\n    ) {\n      // @ts-ignore\n      const partner = this.getLocusPartner(this.participants, this.self);\n\n      this.updateMeeting({partner});\n\n      // Check if guest user needs to be checked here\n\n      // 1) when bob declines call from bob, (bob='DECLINED')\n      // 2) When alice rejects call to bob , (bob='NOTIFIED')\n\n      // When we dont add MEDIA for condition 2. The state of bob='IDLE'\n\n      if (this.fullState && this.fullState.state === LOCUS.STATE.INACTIVE) {\n        // TODO: update the meeting state\n        LoggerProxy.logger.warn(\n          'Locus-info:index#isMeetingActive --> Call Ended, locus state is inactive.'\n        );\n        Metrics.postEvent({\n          event: eventType.REMOTE_ENDED,\n          meetingId: this.meetingId,\n        });\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive',\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: CALL_REMOVED_REASON.CALL_INACTIVE,\n            shouldLeave: false,\n          }\n        );\n      } else if (\n        partner.state === MEETING_STATE.STATES.LEFT &&\n        this.parsedLocus.self &&\n        (this.parsedLocus.self.state === MEETING_STATE.STATES.DECLINED ||\n          this.parsedLocus.self.state === MEETING_STATE.STATES.NOTIFIED ||\n          this.parsedLocus.self.state === MEETING_STATE.STATES.JOINED)\n      ) {\n        Metrics.postEvent({\n          event: eventType.REMOTE_ENDED,\n          meetingId: this.meetingId,\n        });\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive',\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: CALL_REMOVED_REASON.PARTNER_LEFT,\n            shouldLeave:\n              this.parsedLocus.self.joinedWith && this.parsedLocus.self.joinedWith.state !== _LEFT_,\n          }\n        );\n      } else if (\n        this.parsedLocus.self &&\n        this.parsedLocus.self.state === MEETING_STATE.STATES.LEFT &&\n        (partner.state === MEETING_STATE.STATES.LEFT ||\n          partner.state === MEETING_STATE.STATES.DECLINED ||\n          partner.state === MEETING_STATE.STATES.NOTIFIED ||\n          partner.state === MEETING_STATE.STATES.IDLE) // Happens when user just joins and adds no Media\n      ) {\n        Metrics.postEvent({\n          event: eventType.REMOTE_ENDED,\n          meetingId: this.meetingId,\n        });\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive',\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: CALL_REMOVED_REASON.SELF_LEFT,\n            shouldLeave: false,\n          }\n        );\n      }\n    } else if (this.parsedLocus.fullState.type === _MEETING_) {\n      if (\n        this.fullState &&\n        (this.fullState.state === LOCUS.STATE.INACTIVE ||\n          // @ts-ignore\n          this.fullState.state === LOCUS.STATE.TERMINATING)\n      ) {\n        LoggerProxy.logger.warn(\n          'Locus-info:index#isMeetingActive --> Meeting is ending due to inactive or terminating'\n        );\n        Metrics.postEvent({\n          event: eventType.REMOTE_ENDED,\n          meetingId: this.meetingId,\n        });\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive',\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: MEETING_REMOVED_REASON.MEETING_INACTIVE_TERMINATING,\n            shouldLeave: false,\n          }\n        );\n      } else if (this.fullState && this.fullState.removed) {\n        // user has been dropped from a meeting\n        Metrics.postEvent({\n          event: eventType.REMOTE_ENDED,\n          meetingId: this.meetingId,\n        });\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive',\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: MEETING_REMOVED_REASON.FULLSTATE_REMOVED,\n            shouldLeave: false,\n          }\n        );\n      }\n      // If you are  guest and you are removed from the meeting\n      // You wont get any further events\n      else if (this.parsedLocus.self && this.parsedLocus.self.removed) {\n        // Check if we need to send an event\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'isMeetingActive',\n          },\n          EVENTS.DESTROY_MEETING,\n          {\n            reason: MEETING_REMOVED_REASON.SELF_REMOVED,\n            shouldLeave: false,\n          }\n        );\n      }\n    } else {\n      LoggerProxy.logger.warn('Locus-info:index#isMeetingActive --> Meeting Type is unknown.');\n    }\n  }\n\n  /**\n   * checks if the host permissions have changed while in the meeting\n   * This would be the case if your role as host or moderator has been updated\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  compareAndUpdate() {\n    // TODO: check with locus team on host and moderator doc\n    // use host as a validator if needed\n    if (\n      this.compareAndUpdateFlags.compareSelfAndHost ||\n      this.compareAndUpdateFlags.compareHostAndSelf\n    ) {\n      this.compareSelfAndHost();\n    }\n  }\n\n  /**\n   * compared the self object to check if the user has host permissions\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  compareSelfAndHost() {\n    // In some cases the host info is not present but the moderator values changes from null to false so it triggers an update\n    if (\n      this.parsedLocus.self.selfIdentity === this.parsedLocus.host?.hostId &&\n      this.parsedLocus.self.moderator\n    ) {\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'compareSelfAndHost',\n        },\n        EVENTS.LOCUS_INFO_CAN_ASSIGN_HOST,\n        {\n          canAssignHost: true,\n        }\n      );\n    } else {\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'compareSelfAndHost',\n        },\n        EVENTS.LOCUS_INFO_CAN_ASSIGN_HOST,\n        {\n          canAssignHost: false,\n        }\n      );\n    }\n  }\n\n  /**\n   * Update the deltaParticipants property of this object based on a list of\n   * provided participants.\n   *\n   * @param {Array} [participants] - The participants to update against.\n   * @returns {void}\n   */\n  updateParticipantDeltas(participants: Array<any> = []) {\n    // Used to find a participant within a participants collection.\n    const findParticipant = (participant, collection) =>\n      collection.find((item) => item.person.id === participant.person.id);\n\n    // Generates an object that indicates which state properties have changed.\n    const generateDelta = (prevState: any = {}, newState: any = {}) => {\n      // Setup deltas.\n      const deltas = {\n        audioStatus: prevState.audioStatus !== newState.audioStatus,\n        videoSlidesStatus: prevState.videoSlidesStatus !== newState.videoSlidesStatus,\n        videoStatus: prevState.videoStatus !== newState.videoStatus,\n      };\n\n      // Clean the object\n      Object.keys(deltas).forEach((key) => {\n        if (deltas[key] !== true) {\n          delete deltas[key];\n        }\n      });\n\n      return deltas;\n    };\n\n    this.deltaParticipants = participants.reduce((collection, participant) => {\n      const existingParticipant = findParticipant(participant, this.participants || []) || {};\n\n      const delta = generateDelta(existingParticipant.status, participant.status);\n\n      const changed = Object.keys(delta).length > 0;\n\n      if (changed) {\n        collection.push({\n          person: participant.person,\n          delta,\n        });\n      }\n\n      return collection;\n    }, []);\n  }\n\n  /**\n   *\n   * @param {Object} participants new participants object\n   * @param {boolen} deltaParticpantFlag  delta event\n   * @returns {Array} updatedParticipants\n   * @memberof LocusInfo\n   */\n  updateParticipants(participants: object) {\n    this.emitScoped(\n      {\n        file: 'locus-info',\n        function: 'updateParticipants',\n      },\n      EVENTS.LOCUS_INFO_UPDATE_PARTICIPANTS,\n      {\n        participants,\n        recordingId: this.parsedLocus.controls && this.parsedLocus.controls.record?.modifiedBy,\n        selfIdentity: this.parsedLocus.self && this.parsedLocus.self.selfIdentity,\n        selfId: this.parsedLocus.self && this.parsedLocus.self.selfId,\n        hostId: this.parsedLocus.host && this.parsedLocus.host.hostId,\n      }\n    );\n  }\n\n  /**\n   * @param {Object} controls\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateControls(controls: object) {\n    if (controls && !isEqual(this.controls, controls)) {\n      this.parsedLocus.controls = ControlsUtils.parse(controls);\n      const {\n        updates: {\n          hasRecordingChanged,\n          hasRecordingPausedChanged,\n          hasMeetingContainerChanged,\n          hasTranscribeChanged,\n          hasEntryExitToneChanged,\n        },\n        current,\n      } = ControlsUtils.getControls(this.controls, controls);\n\n      if (hasRecordingChanged || hasRecordingPausedChanged) {\n        let state = null;\n\n        if (hasRecordingPausedChanged) {\n          if (current.record.paused) {\n            state = RECORDING_STATE.PAUSED;\n          } else {\n            // state will be `IDLE` if the recording is not active, even when there is a `pause` status change.\n            state = current.record.recording ? RECORDING_STATE.RESUMED : RECORDING_STATE.IDLE;\n          }\n        } else if (hasRecordingChanged) {\n          state = current.record.recording ? RECORDING_STATE.RECORDING : RECORDING_STATE.IDLE;\n        }\n\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateControls',\n          },\n          LOCUSINFO.EVENTS.CONTROLS_RECORDING_UPDATED,\n          {\n            state,\n            modifiedBy: current.record.modifiedBy,\n            lastModified: current.record.lastModified,\n          }\n        );\n      }\n\n      if (hasMeetingContainerChanged) {\n        const {meetingContainerUrl} = current.meetingContainer;\n\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateControls',\n          },\n          LOCUSINFO.EVENTS.CONTROLS_MEETING_CONTAINER_UPDATED,\n          {\n            meetingContainerUrl,\n          }\n        );\n      }\n\n      if (hasTranscribeChanged) {\n        const {transcribing, caption} = current.transcribe;\n\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateControls',\n          },\n          LOCUSINFO.EVENTS.CONTROLS_MEETING_TRANSCRIBE_UPDATED,\n          {\n            transcribing,\n            caption,\n          }\n        );\n      }\n\n      if (hasEntryExitToneChanged) {\n        const {entryExitTone} = current;\n\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateControls',\n          },\n          LOCUSINFO.EVENTS.CONTROLS_ENTRY_EXIT_TONE_UPDATED,\n          {\n            entryExitTone,\n          }\n        );\n\n        this.updateMeeting({entryExitTone});\n      }\n\n      this.controls = controls;\n    }\n  }\n\n  /**\n   * @param {String} conversationUrl\n   * @param {Object} info\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateConversationUrl(conversationUrl: string, info: any) {\n    if (conversationUrl && !isEqual(this.conversationUrl, conversationUrl)) {\n      this.conversationUrl = conversationUrl;\n      this.updateMeeting({conversationUrl});\n    } else if (\n      info &&\n      info.conversationUrl &&\n      !isEqual(this.conversationUrl, info.conversationUrl)\n    ) {\n      this.conversationUrl = info.conversationUrl;\n      this.updateMeeting({conversationUrl: info.conversationUrl});\n    }\n  }\n\n  /**\n   * @param {Object} created\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateCreated(created: object) {\n    if (created && !isEqual(this.created, created)) {\n      this.created = created;\n    }\n  }\n\n  /**\n   * @param {Object} services\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateServices(services: Record<'breakout' | 'record', {url: string}>) {\n    if (services && !isEqual(this.services, services)) {\n      this.services = services;\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'updateServices',\n        },\n        LOCUSINFO.EVENTS.LINKS_SERVICES,\n        {\n          services,\n        }\n      );\n    }\n  }\n\n  /**\n   * @param {Object} fullState\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateFullState(fullState: object) {\n    if (fullState && !isEqual(this.fullState, fullState)) {\n      const result = FullState.getFullState(this.fullState, fullState);\n\n      this.updateMeeting(result.current);\n\n      if (result.updates.meetingStateChangedTo) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateFullState',\n          },\n          LOCUSINFO.EVENTS.FULL_STATE_MEETING_STATE_CHANGE,\n          {\n            previousState: result.previous && result.previous.meetingState,\n            currentState: result.current.meetingState,\n          }\n        );\n      }\n\n      if (result.updates.meetingTypeChangedTo) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateFullState',\n          },\n          LOCUSINFO.EVENTS.FULL_STATE_TYPE_UPDATE,\n          {\n            type: result.current.type,\n          }\n        );\n      }\n      this.parsedLocus.fullState = result.current;\n      this.fullState = fullState;\n    }\n  }\n\n  /**\n   * handles when the locus.host is updated\n   * @param {Object} host the locus.host property\n   * @returns {undefined}\n   * @memberof LocusInfo\n   * emits internal event locus_info_update_host\n   */\n  updateHostInfo(host: object) {\n    if (host && !isEqual(this.host, host)) {\n      const parsedHosts = HostUtils.getHosts(this.host, host);\n\n      this.updateMeeting(parsedHosts.current);\n      this.parsedLocus.host = parsedHosts.current;\n      if (parsedHosts.updates.isNewHost) {\n        this.compareAndUpdateFlags.compareSelfAndHost = true;\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateHostInfo',\n          },\n          EVENTS.LOCUS_INFO_UPDATE_HOST,\n          {\n            newHost: parsedHosts.current,\n            oldHost: parsedHosts.previous,\n          }\n        );\n      }\n      this.host = host;\n    } else {\n      this.compareAndUpdateFlags.compareSelfAndHost = false;\n    }\n  }\n\n  /**\n   * @param {Object} info\n   * @param {Object} self\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateMeetingInfo(info: object, self?: object) {\n    if (info && !isEqual(this.info, info)) {\n      const roles = self ? SelfUtils.getRoles(self) : this.parsedLocus.self?.roles || [];\n      const isJoined = SelfUtils.isJoined(self || this.parsedLocus.self);\n      const parsedInfo = InfoUtils.getInfos(this.parsedLocus.info, info, roles, isJoined);\n\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'updateMeetingInfo',\n        },\n        LOCUSINFO.EVENTS.MEETING_INFO_UPDATED,\n        {info: parsedInfo.current, self}\n      );\n\n      if (parsedInfo.updates.isLocked) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateMeetingInfo',\n          },\n          LOCUSINFO.EVENTS.MEETING_LOCKED,\n          info\n        );\n      }\n      if (parsedInfo.updates.isUnlocked) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateMeetingInfo',\n          },\n          LOCUSINFO.EVENTS.MEETING_UNLOCKED,\n          info\n        );\n      }\n\n      this.info = info;\n      this.parsedLocus.info = parsedInfo.current;\n      // Parses the info and adds necessary values\n      this.updateMeeting(parsedInfo.current);\n    }\n  }\n\n  /**\n   * @param {Object} embeddedApps\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateEmbeddedApps(embeddedApps: object) {\n    // don't do anything if the arrays of apps haven't changed significantly\n    if (EmbeddedAppsUtils.areSimilar(this.embeddedApps, embeddedApps)) {\n      return;\n    }\n\n    const parsedEmbeddedApps = EmbeddedAppsUtils.parse(embeddedApps);\n\n    this.updateMeeting({embeddedApps: parsedEmbeddedApps});\n\n    this.emitScoped(\n      {\n        file: 'locus-info',\n        function: 'updateEmbeddedApps',\n      },\n      LOCUSINFO.EVENTS.EMBEDDED_APPS_UPDATED,\n      parsedEmbeddedApps\n    );\n    this.embeddedApps = embeddedApps;\n  }\n\n  /**\n   * handles when the locus.mediaShares is updated\n   * @param {Object} mediaShares the locus.mediaShares property\n   * @returns {undefined}\n   * @memberof LocusInfo\n   * emits internal event locus_info_update_media_shares\n   */\n  updateMediaShares(mediaShares: object) {\n    if (mediaShares && !isEqual(this.mediaShares, mediaShares)) {\n      const parsedMediaShares = MediaSharesUtils.getMediaShares(this.mediaShares, mediaShares);\n\n      this.updateMeeting(parsedMediaShares.current);\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'updateMediaShares',\n        },\n        EVENTS.LOCUS_INFO_UPDATE_MEDIA_SHARES,\n        {\n          current: parsedMediaShares.current,\n          previous: parsedMediaShares.previous,\n        }\n      );\n      this.parsedLocus.mediaShares = parsedMediaShares.current;\n      this.mediaShares = mediaShares;\n    }\n  }\n\n  /**\n   * @param {String} participantsUrl\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateParticipantsUrl(participantsUrl: string) {\n    if (participantsUrl && !isEqual(this.participantsUrl, participantsUrl)) {\n      this.participantsUrl = participantsUrl;\n    }\n  }\n\n  /**\n   * @param {Object} replace\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateReplace(replace: object) {\n    if (replace && !isEqual(this.replace, replace)) {\n      this.replace = replace;\n    }\n  }\n\n  /**\n   * handles when the locus.self is updated\n   * @param {Object} self the locus.mediaShares property\n   * @param {Array} participants the locus.participants property\n   * @returns {undefined}\n   * @memberof LocusInfo\n   * emits internal events self_admitted_guest, self_unadmitted_guest, locus_info_update_self\n   */\n  updateSelf(self: any, participants: Array<any>) {\n    // @ts-ignore - check where this.self come from\n    if (self && !isEqual(this.self, self)) {\n      // @ts-ignore\n      const parsedSelves = SelfUtils.getSelves(this.self, self, this.webex.internal.device.url);\n\n      this.updateMeeting(parsedSelves.current);\n      this.parsedLocus.self = parsedSelves.current;\n\n      const element = this.parsedLocus.states[this.parsedLocus.states.length - 1];\n\n      if (element !== parsedSelves.current.state) {\n        this.parsedLocus.states.push(parsedSelves.current.state);\n      }\n\n      // TODO: check if we need to save the sipUri here as well\n      // this.emit(LOCUSINFO.EVENTS.MEETING_UPDATE, SelfUtils.getSipUrl(this.getLocusPartner(participants, self), this.parsedLocus.fullState.type, this.parsedLocus.info.sipUri));\n      const result = SelfUtils.getSipUrl(\n        this.getLocusPartner(participants, self),\n        this.parsedLocus.fullState.type,\n        this.parsedLocus.info.sipUri\n      );\n\n      if (result.sipUri) {\n        this.updateMeeting(result);\n      }\n\n      if (parsedSelves.updates.moderatorChanged) {\n        this.compareAndUpdateFlags.compareHostAndSelf = true;\n      } else {\n        this.compareAndUpdateFlags.compareHostAndSelf = false;\n      }\n\n      if (parsedSelves.updates.layoutChanged) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf',\n          },\n          LOCUSINFO.EVENTS.CONTROLS_MEETING_LAYOUT_UPDATED,\n          {layout: parsedSelves.current.layout}\n        );\n      }\n\n      if (parsedSelves.updates.isMediaInactiveOrReleased) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf',\n          },\n          LOCUSINFO.EVENTS.DISCONNECT_DUE_TO_INACTIVITY,\n          {reason: self.reason}\n        );\n      }\n\n      if (parsedSelves.updates.moderatorChanged) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf',\n          },\n          LOCUSINFO.EVENTS.SELF_MODERATOR_CHANGED,\n          self\n        );\n      }\n      if (parsedSelves.updates.localAudioUnmuteRequiredByServer) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf',\n          },\n          LOCUSINFO.EVENTS.LOCAL_UNMUTE_REQUIRED,\n          {\n            muted: parsedSelves.current.remoteMuted,\n            unmuteAllowed: parsedSelves.current.unmuteAllowed,\n          }\n        );\n      }\n      if (parsedSelves.updates.isMutedByOthersChanged) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf',\n          },\n          LOCUSINFO.EVENTS.SELF_REMOTE_MUTE_STATUS_UPDATED,\n          {\n            muted: parsedSelves.current.remoteMuted,\n            unmuteAllowed: parsedSelves.current.unmuteAllowed,\n          }\n        );\n      }\n      if (parsedSelves.updates.localAudioUnmuteRequestedByServer) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf',\n          },\n          LOCUSINFO.EVENTS.LOCAL_UNMUTE_REQUESTED,\n          {}\n        );\n      }\n      if (parsedSelves.updates.isUserUnadmitted) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf',\n          },\n          LOCUSINFO.EVENTS.SELF_UNADMITTED_GUEST,\n          self\n        );\n      }\n      if (parsedSelves.updates.isUserAdmitted) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf',\n          },\n          LOCUSINFO.EVENTS.SELF_ADMITTED_GUEST,\n          self\n        );\n      }\n\n      if (parsedSelves.updates.isMediaInactive) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf',\n          },\n          // @ts-ignore\n          LOCUSINFO.EVENTS.MEDIA_INACTIVITY,\n          SelfUtils.getMediaStatus(self.mediaSessions)\n        );\n      }\n\n      if (\n        parsedSelves.updates.audioStateChange ||\n        parsedSelves.updates.videoStateChange ||\n        parsedSelves.updates.shareStateChange\n      ) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf',\n          },\n          LOCUSINFO.EVENTS.MEDIA_STATUS_CHANGE,\n          {\n            audioStatus: parsedSelves.current.currentMediaStatus?.audio,\n            videoStatus: parsedSelves.current.currentMediaStatus?.video,\n            shareStatus: parsedSelves.current.currentMediaStatus?.share,\n          }\n        );\n      }\n\n      if (parsedSelves.updates.isUserObserving) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf',\n          },\n          LOCUSINFO.EVENTS.SELF_OBSERVING\n        );\n      }\n\n      if (parsedSelves.updates.canNotViewTheParticipantListChanged) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf',\n          },\n          LOCUSINFO.EVENTS.SELF_CANNOT_VIEW_PARTICIPANT_LIST_CHANGE,\n          {canNotViewTheParticipantList: parsedSelves.current.canNotViewTheParticipantList}\n        );\n      }\n\n      if (parsedSelves.updates.isSharingBlockedChanged) {\n        this.emitScoped(\n          {\n            file: 'locus-info',\n            function: 'updateSelf',\n          },\n          LOCUSINFO.EVENTS.SELF_IS_SHARING_BLOCKED_CHANGE,\n          {isSharingBlocked: parsedSelves.current.isSharingBlocked}\n        );\n      }\n\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'updateSelf',\n        },\n        EVENTS.LOCUS_INFO_UPDATE_SELF,\n        {\n          oldSelf: parsedSelves.previous,\n          newSelf: parsedSelves.current,\n        }\n      );\n      this.parsedLocus.self = parsedSelves.current;\n      // @ts-ignore\n      this.self = self;\n    } else {\n      this.compareAndUpdateFlags.compareHostAndSelf = false;\n    }\n  }\n\n  /**\n   * handles when the locus.url is updated\n   * @param {String} url\n   * @returns {undefined}\n   * emits internal event locus_info_update_url\n   */\n  updateLocusUrl(url: string) {\n    if (url && this.url !== url) {\n      this.url = url;\n      this.updateMeeting({locusUrl: url});\n      this.emitScoped(\n        {\n          file: 'locus-info',\n          function: 'updateLocusUrl',\n        },\n        EVENTS.LOCUS_INFO_UPDATE_URL,\n        url\n      );\n    }\n  }\n\n  /**\n   * @param {String} aclUrl\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateAclUrl(aclUrl: string) {\n    if (aclUrl && !isEqual(this.aclUrl, aclUrl)) {\n      this.aclUrl = aclUrl;\n    }\n  }\n\n  /**\n   * @param {Number} baseSequence\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateBasequence(baseSequence: number) {\n    if (baseSequence && !isEqual(this.baseSequence, baseSequence)) {\n      this.baseSequence = baseSequence;\n    }\n  }\n\n  /**\n   * @param {Number} sequence\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateSequence(sequence: number) {\n    if (sequence && !isEqual(this.sequence, sequence)) {\n      this.sequence = sequence;\n    }\n  }\n\n  /**\n   * @param {Object} membership\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateMemberShip(membership: object) {\n    if (membership && !isEqual(this.membership, membership)) {\n      this.membership = membership;\n    }\n  }\n\n  /**\n   * @param {Array} identities\n   * @returns {undefined}\n   * @memberof LocusInfo\n   */\n  updateIdentifiers(identities: Array<any>) {\n    if (identities && !isEqual(this.identities, identities)) {\n      this.identities = identities;\n    }\n  }\n}\n"],"mappings":"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"}