{"version":3,"names":["_constants","require","ownKeys","object","enumerableOnly","keys","_Object$keys","_Object$getOwnPropertySymbols","symbols","filter","sym","_Object$getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","Object","forEach","key","_defineProperty2","default","_Object$getOwnPropertyDescriptors","_Object$defineProperties","_Object$defineProperty","EmbeddedAppsUtils","SLIDO_REGEX","parseApp","embeddedApp","_parsedApp$instanceIn","parsedApp","type","EMBEDDED_APP_TYPES","OTHER","url","instanceInfo","appInstanceUrl","match","SLIDO","areSimilar","apps1","apps2","state","parse","embeddedApps","map","_default","exports"],"sources":["embeddedAppsUtils.ts"],"sourcesContent":["import {EMBEDDED_APP_TYPES} from '../constants';\n\nconst EmbeddedAppsUtils: any = {};\nconst SLIDO_REGEX = /.sli.do\\//;\n\n/**\n * Parse the relevant values that we care about\n * @param {Object} embeddedApp - raw embedded app object\n * @returns {Object} parsedObject - parsed embedded app object\n */\nEmbeddedAppsUtils.parseApp = (embeddedApp: object) => {\n  const parsedApp: any = {...embeddedApp};\n\n  parsedApp.type = EMBEDDED_APP_TYPES.OTHER;\n  const url = parsedApp.instanceInfo?.appInstanceUrl;\n\n  if (url && url.match(SLIDO_REGEX)) {\n    parsedApp.type = EMBEDDED_APP_TYPES.SLIDO;\n  }\n\n  return parsedApp;\n};\n\n/**\n * Determines if two embedded apps arrays are similar.\n * NOTE: This is a simple test for performance reasons.\n * @param {any[]} apps1 - an array of apps\n * @param {any[]} apps2 - an array of apps\n * @returns {boolean} true if the arrays are different\n */\nEmbeddedAppsUtils.areSimilar = (apps1: any[], apps2: any[]) => {\n  if (!apps1 || !apps2) {\n    return apps1 === apps2;\n  }\n\n  if (apps1?.length !== apps2?.length) {\n    return false;\n  }\n\n  for (let i = 0; i < apps1.length; i += 1) {\n    if (apps1[i].state !== apps2[i].state) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Parse the array of embedded apps\n * @param {array} embeddedApps\n * @returns {array} result - new array of parsed embedded app objects\n */\nEmbeddedAppsUtils.parse = (embeddedApps: Array<any>) =>\n  embeddedApps && embeddedApps.map(EmbeddedAppsUtils.parseApp);\n\nexport default EmbeddedAppsUtils;\n"],"mappings":";;;;;;;;;;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAAgD,SAAAC,QAAAC,MAAA,EAAAC,cAAA,QAAAC,IAAA,GAAAC,YAAA,CAAAH,MAAA,OAAAI,6BAAA,QAAAC,OAAA,GAAAD,6BAAA,CAAAJ,MAAA,GAAAC,cAAA,KAAAI,OAAA,GAAAA,OAAA,CAAAC,MAAA,WAAAC,GAAA,WAAAC,gCAAA,CAAAR,MAAA,EAAAO,GAAA,EAAAE,UAAA,OAAAP,IAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,IAAA,EAAAG,OAAA,YAAAH,IAAA;AAAA,SAAAU,cAAAC,MAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAF,CAAA,UAAAG,MAAA,WAAAF,SAAA,CAAAD,CAAA,IAAAC,SAAA,CAAAD,CAAA,QAAAA,CAAA,OAAAf,OAAA,CAAAmB,MAAA,CAAAD,MAAA,OAAAE,OAAA,WAAAC,GAAA,QAAAC,gBAAA,CAAAC,OAAA,EAAAT,MAAA,EAAAO,GAAA,EAAAH,MAAA,CAAAG,GAAA,SAAAG,iCAAA,GAAAC,wBAAA,CAAAX,MAAA,EAAAU,iCAAA,CAAAN,MAAA,KAAAlB,OAAA,CAAAmB,MAAA,CAAAD,MAAA,GAAAE,OAAA,WAAAC,GAAA,IAAAK,sBAAA,CAAAZ,MAAA,EAAAO,GAAA,EAAAZ,gCAAA,CAAAS,MAAA,EAAAG,GAAA,iBAAAP,MAAA;AAEhD,IAAMa,iBAAsB,GAAG,CAAC,CAAC;AACjC,IAAMC,WAAW,GAAG,WAAW;;AAE/B;AACA;AACA;AACA;AACA;AACAD,iBAAiB,CAACE,QAAQ,GAAG,UAACC,WAAmB,EAAK;EAAA,IAAAC,qBAAA;EACpD,IAAMC,SAAc,GAAAnB,aAAA,KAAOiB,WAAW,CAAC;EAEvCE,SAAS,CAACC,IAAI,GAAGC,6BAAkB,CAACC,KAAK;EACzC,IAAMC,GAAG,IAAAL,qBAAA,GAAGC,SAAS,CAACK,YAAY,cAAAN,qBAAA,uBAAtBA,qBAAA,CAAwBO,cAAc;EAElD,IAAIF,GAAG,IAAIA,GAAG,CAACG,KAAK,CAACX,WAAW,CAAC,EAAE;IACjCI,SAAS,CAACC,IAAI,GAAGC,6BAAkB,CAACM,KAAK;EAC3C;EAEA,OAAOR,SAAS;AAClB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACAL,iBAAiB,CAACc,UAAU,GAAG,UAACC,KAAY,EAAEC,KAAY,EAAK;EAC7D,IAAI,CAACD,KAAK,IAAI,CAACC,KAAK,EAAE;IACpB,OAAOD,KAAK,KAAKC,KAAK;EACxB;EAEA,IAAI,CAAAD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEzB,MAAM,OAAK0B,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAE1B,MAAM,GAAE;IACnC,OAAO,KAAK;EACd;EAEA,KAAK,IAAIF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2B,KAAK,CAACzB,MAAM,EAAEF,CAAC,IAAI,CAAC,EAAE;IACxC,IAAI2B,KAAK,CAAC3B,CAAC,CAAC,CAAC6B,KAAK,KAAKD,KAAK,CAAC5B,CAAC,CAAC,CAAC6B,KAAK,EAAE;MACrC,OAAO,KAAK;IACd;EACF;EAEA,OAAO,IAAI;AACb,CAAC;;AAED;AACA;AACA;AACA;AACA;AACAjB,iBAAiB,CAACkB,KAAK,GAAG,UAACC,YAAwB;EAAA,OACjDA,YAAY,IAAIA,YAAY,CAACC,GAAG,CAACpB,iBAAiB,CAACE,QAAQ,CAAC;AAAA;AAAC,IAAAmB,QAAA,GAEhDrB,iBAAiB;AAAAsB,OAAA,CAAA1B,OAAA,GAAAyB,QAAA"}