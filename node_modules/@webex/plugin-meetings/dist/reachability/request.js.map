{"version":3,"names":["_loggerProxy","_interopRequireDefault","require","_constants","ReachabilityRequest","_createClass2","default","webex","_this","_classCallCheck2","_defineProperty2","request","method","HTTP_VERBS","GET","shouldRefreshAccessToken","api","API","CALLIOPEDISCOVERY","resource","RESOURCE","CLUSTERS","then","res","clusters","body","_keys","forEach","key","_res$body$clusterClas","_res$body$clusterClas2","isVideoMesh","clusterClasses","hybridMedia","includes","LoggerProxy","logger","log","concat","_stringify","localSDPList","POST","REACHABILITY","offers","_default","exports"],"sources":["request.ts"],"sourcesContent":["import LoggerProxy from '../common/logs/logger-proxy';\nimport {HTTP_VERBS, RESOURCE, API} from '../constants';\n\nexport interface ClusterNode {\n  isVideoMesh: boolean;\n  udp: Array<string>;\n  tcp: Array<string>;\n  xtls: Array<string>;\n}\n\nexport type ClusterList = {\n  [key: string]: ClusterNode;\n};\n\n/**\n * @class ReachabilityRequest\n */\nclass ReachabilityRequest {\n  webex: any;\n\n  /**\n   * Creates an instance of ReachabilityRequest.\n   * @param {object} webex\n   * @memberof ReachabilityRequest\n   */\n  constructor(webex: object) {\n    this.webex = webex;\n  }\n\n  /**\n   * gets the cluster information\n   *\n   * @param {boolean} includeVideoMesh whether to include the video mesh clusters in the result or not\n   * @returns {Promise}\n   */\n  getClusters = (): Promise<ClusterList> =>\n    this.webex\n      .request({\n        method: HTTP_VERBS.GET,\n        shouldRefreshAccessToken: false,\n        api: API.CALLIOPEDISCOVERY,\n        resource: RESOURCE.CLUSTERS,\n      })\n      .then((res) => {\n        const {clusters} = res.body;\n\n        Object.keys(clusters).forEach((key) => {\n          clusters[key].isVideoMesh = res.body.clusterClasses?.hybridMedia?.includes(key);\n        });\n\n        LoggerProxy.logger.log(\n          `Reachability:request#getClusters --> get clusters successful:${JSON.stringify(clusters)}`\n        );\n\n        return clusters;\n      });\n\n  /**\n   * gets remote SDP For Clusters\n   * @param {Object} localSDPList localSDPs for the cluster\n   * @returns {Object}\n   */\n  remoteSDPForClusters = (localSDPList: object) =>\n    this.webex\n      .request({\n        method: HTTP_VERBS.POST,\n        shouldRefreshAccessToken: false,\n        api: API.CALLIOPEDISCOVERY,\n        resource: RESOURCE.REACHABILITY,\n        body: {offers: localSDPList},\n      })\n      .then((res) => {\n        LoggerProxy.logger.log(\n          'Reachability:request#remoteSDPForClusters --> Remote SDPs got succcessfully'\n        );\n\n        return res.body;\n      });\n}\n\nexport default ReachabilityRequest;\n"],"mappings":";;;;;;;;;;;;;AAAA,IAAAA,YAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AAaA;AACA;AACA;AAFA,IAGME,mBAAmB,oBAAAC,aAAA,CAAAC,OAAA;AAGvB;AACF;AACA;AACA;AACA;AACE,SAAAF,oBAAYG,KAAa,EAAE;EAAA,IAAAC,KAAA;EAAA,IAAAC,gBAAA,CAAAH,OAAA,QAAAF,mBAAA;EAAA,IAAAM,gBAAA,CAAAJ,OAAA;EAI3B;AACF;AACA;AACA;AACA;AACA;EALE,IAAAI,gBAAA,CAAAJ,OAAA,uBAMc;IAAA,OACZE,KAAI,CAACD,KAAK,CACPI,OAAO,CAAC;MACPC,MAAM,EAAEC,qBAAU,CAACC,GAAG;MACtBC,wBAAwB,EAAE,KAAK;MAC/BC,GAAG,EAAEC,cAAG,CAACC,iBAAiB;MAC1BC,QAAQ,EAAEC,mBAAQ,CAACC;IACrB,CAAC,CAAC,CACDC,IAAI,CAAC,UAACC,GAAG,EAAK;MACb,IAAOC,QAAQ,GAAID,GAAG,CAACE,IAAI,CAApBD,QAAQ;MAEf,IAAAE,KAAA,CAAApB,OAAA,EAAYkB,QAAQ,CAAC,CAACG,OAAO,CAAC,UAACC,GAAG,EAAK;QAAA,IAAAC,qBAAA,EAAAC,sBAAA;QACrCN,QAAQ,CAACI,GAAG,CAAC,CAACG,WAAW,IAAAF,qBAAA,GAAGN,GAAG,CAACE,IAAI,CAACO,cAAc,cAAAH,qBAAA,wBAAAC,sBAAA,GAAvBD,qBAAA,CAAyBI,WAAW,cAAAH,sBAAA,uBAApCA,sBAAA,CAAsCI,QAAQ,CAACN,GAAG,CAAC;MACjF,CAAC,CAAC;MAEFO,oBAAW,CAACC,MAAM,CAACC,GAAG,iEAAAC,MAAA,CAC4C,IAAAC,UAAA,CAAAjC,OAAA,EAAekB,QAAQ,CAAC,EACzF;MAED,OAAOA,QAAQ;IACjB,CAAC,CAAC;EAAA;EAEN;AACF;AACA;AACA;AACA;EAJE,IAAAd,gBAAA,CAAAJ,OAAA,gCAKuB,UAACkC,YAAoB;IAAA,OAC1ChC,KAAI,CAACD,KAAK,CACPI,OAAO,CAAC;MACPC,MAAM,EAAEC,qBAAU,CAAC4B,IAAI;MACvB1B,wBAAwB,EAAE,KAAK;MAC/BC,GAAG,EAAEC,cAAG,CAACC,iBAAiB;MAC1BC,QAAQ,EAAEC,mBAAQ,CAACsB,YAAY;MAC/BjB,IAAI,EAAE;QAACkB,MAAM,EAAEH;MAAY;IAC7B,CAAC,CAAC,CACDlB,IAAI,CAAC,UAACC,GAAG,EAAK;MACbY,oBAAW,CAACC,MAAM,CAACC,GAAG,CACpB,6EAA6E,CAC9E;MAED,OAAOd,GAAG,CAACE,IAAI;IACjB,CAAC,CAAC;EAAA;EAnDJ,IAAI,CAAClB,KAAK,GAAGA,KAAK;AACpB,CAAC;AAAA,IAAAqC,QAAA,GAqDYxC,mBAAmB;AAAAyC,OAAA,CAAAvC,OAAA,GAAAsC,QAAA"}