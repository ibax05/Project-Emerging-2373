export interface ClusterNode {
    isVideoMesh: boolean;
    udp: Array<string>;
    tcp: Array<string>;
    xtls: Array<string>;
}
export type ClusterList = {
    [key: string]: ClusterNode;
};
/**
 * @class ReachabilityRequest
 */
declare class ReachabilityRequest {
    webex: any;
    /**
     * Creates an instance of ReachabilityRequest.
     * @param {object} webex
     * @memberof ReachabilityRequest
     */
    constructor(webex: object);
    /**
     * gets the cluster information
     *
     * @param {boolean} includeVideoMesh whether to include the video mesh clusters in the result or not
     * @returns {Promise}
     */
    getClusters: () => Promise<ClusterList>;
    /**
     * gets remote SDP For Clusters
     * @param {Object} localSDPList localSDPs for the cluster
     * @returns {Object}
     */
    remoteSDPForClusters: (localSDPList: object) => any;
}
export default ReachabilityRequest;
