{"version":3,"names":["_uuid","_interopRequireDefault","require","_webexCore","_common","_loggerProxy","_constants","ownKeys","object","enumerableOnly","keys","_Object$keys","_Object$getOwnPropertySymbols","symbols","filter","sym","_Object$getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","Object","forEach","key","_defineProperty2","default","_Object$getOwnPropertyDescriptors","_Object$defineProperties","_Object$defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","_Reflect$construct","_possibleConstructorReturn2","Reflect","sham","Proxy","Boolean","prototype","valueOf","call","e","MeetingRequest","_StatelessWebexPlugin","_inherits2","_super","attrs","options","_this","_classCallCheck2","_assertThisInitialized2","changeVideoLayoutDebounced","_debounce2","changeVideoLayout","leading","trailing","_createClass2","value","_joinMeeting","_asyncToGenerator2","_regenerator","mark","_callee","asResourceOccupant","inviteeAddress","meetingNumber","permissionToken","deviceUrl","locusUrl","resourceId","correlationId","ensureConversation","moderator","pin","moveToResource","roapMessage","preferTranscoding","url","body","wrap","_callee$","_context","prev","next","LoggerProxy","logger","info","device","deviceType","config","meetings","usingResource","moveMediaToResource","respOnlySdp","allowMultiDevice","supportsNativeLobby","clientMediaPreferences","webex","clientRegion","countryCode","regionCode","undefined","concat","PARTICIPANT","internal","services","waitForCatalog","get","LOCI","CALL","invitee","address","t0","error","ALTERNATE_REDIRECT_TRUE","callPreferences","requestedMedia","_SLIDES_","localMedias","abrupt","request","method","HTTP_VERBS","POST","uri","stop","joinMeeting","_x","refreshCaptcha","_ref","captchaRefreshUrl","captchaId","catch","err","dialIn","_ref2","dialInUrl","clientUrl","PROVISIONAL","provisionalType","PROVISIONAL_TYPE_DIAL_IN","dialOut","_ref3","dialOutUrl","phoneNumber","PROVISIONAL_TYPE_DIAL_OUT","dialoutAddress","syncMeeting","desync","syncUrl","split","LOCUS","SYNCDEBUG","GET","getFullLocus","_promise","reject","disconnectPhoneAudio","_ref4","phoneUrl","selfId","LEAVE","PUT","leaveMeeting","_ref5","acknowledgeMeeting","ALERT","lockMeeting","CONTROLS","lock","locked","PATCH","declineMeeting","DECLINE","reason","remoteAudioVideoToggle","_options$preferTransc","MEDIA","changeMeetingFloor","floorReq","disposition","FLOOR_ACTION","GRANTED","beneficiary","personUrl","devices","requester","floor","resourceUrl","resourceToken","sendDTMF","_ref6","tones","SEND_DTMF_ENDPOINT","dtmf","uuid","v4","_ref7","layoutType","main","content","width","height","Error","_stringify","renderInfoMain","renderInfoContent","layoutParams","renderInfo","layout","type","endMeetingForAll","_ref8","END","keepAlive","_ref9","keepAliveUrl","sendReaction","_ref10","reactionChannelUrl","reaction","participantId","sender","StatelessWebexPlugin","exports"],"sources":["request.ts"],"sourcesContent":["import uuid from 'uuid';\nimport {debounce} from 'lodash';\n// @ts-ignore\nimport {StatelessWebexPlugin} from '@webex/webex-core';\n// @ts-ignore\nimport {deviceType} from '@webex/common';\n\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {\n  ALERT,\n  ALTERNATE_REDIRECT_TRUE,\n  CALL,\n  CONTROLS,\n  DECLINE,\n  END,\n  FLOOR_ACTION,\n  HTTP_VERBS,\n  LEAVE,\n  LOCI,\n  LOCUS,\n  MEDIA,\n  PARTICIPANT,\n  PROVISIONAL_TYPE_DIAL_IN,\n  PROVISIONAL_TYPE_DIAL_OUT,\n  SEND_DTMF_ENDPOINT,\n  _SLIDES_,\n} from '../constants';\nimport {Reaction} from '../reactions/reactions.type';\n\n/**\n * @class MeetingRequest\n */\nexport default class MeetingRequest extends StatelessWebexPlugin {\n  changeVideoLayoutDebounced: any;\n\n  constructor(attrs: any, options: any) {\n    super(attrs, options);\n    this.changeVideoLayoutDebounced = debounce(this.changeVideoLayout, 2000, {\n      leading: true,\n      trailing: true,\n    });\n  }\n\n  /**\n   * Make a network request to join a meeting\n   * @param {Object} options\n   * @param {String} options.sipUri\n   * @param {String} options.deviceUrl\n   * @param {String} options.locusUrl\n   * @param {String} options.resourceId,\n   * @param {String} options.correlationId\n   * @param {boolean} options.ensureConversation\n   * @param {boolean} options.moderator\n   * @param {boolean} options.pin\n   * @param {boolean} options.moveToResource\n   * @param {Object} options.roapMessage\n   * @returns {Promise}\n   */\n  async joinMeeting(options: {\n    sipUri: string;\n    deviceUrl: string;\n    locusUrl: string;\n    resourceId: string;\n    correlationId: string;\n    ensureConversation: boolean;\n    moderator: boolean;\n    pin: boolean;\n    moveToResource: boolean;\n    roapMessage: any;\n    asResourceOccupant: any;\n    inviteeAddress: any;\n    meetingNumber: any;\n    permissionToken: any;\n    preferTranscoding: any;\n  }) {\n    const {\n      asResourceOccupant,\n      inviteeAddress,\n      meetingNumber,\n      permissionToken,\n      deviceUrl,\n      locusUrl,\n      resourceId,\n      correlationId,\n      ensureConversation,\n      moderator,\n      pin,\n      moveToResource,\n      roapMessage,\n      preferTranscoding,\n    } = options;\n\n    LoggerProxy.logger.info('Meeting:request#joinMeeting --> Joining a meeting', correlationId);\n\n    let url = '';\n\n    const body: any = {\n      asResourceOccupant,\n      device: {\n        url: deviceUrl,\n        // @ts-ignore - config comes from registerPlugin\n        deviceType: this.config.meetings.deviceType,\n      },\n      usingResource: resourceId || null,\n      moveMediaToResource: (resourceId && moveToResource) || false,\n      correlationId,\n      respOnlySdp: true,\n      allowMultiDevice: true,\n      ensureConversation: ensureConversation || false,\n      supportsNativeLobby: 1,\n      clientMediaPreferences: {\n        preferTranscoding: preferTranscoding ?? true,\n      },\n    };\n\n    // @ts-ignore\n    if (this.webex.meetings.clientRegion) {\n      // @ts-ignore\n      body.device.countryCode = this.webex.meetings.clientRegion.countryCode;\n      // @ts-ignore\n      body.device.regionCode = this.webex.meetings.clientRegion.regionCode;\n    }\n\n    if (moderator !== undefined) {\n      body.moderator = moderator;\n    }\n\n    if (permissionToken) {\n      body.permissionToken = permissionToken;\n    }\n\n    if (pin !== undefined) {\n      body.pin = pin;\n    }\n\n    if (locusUrl) {\n      url = `${locusUrl}/${PARTICIPANT}`;\n    } else if (inviteeAddress || meetingNumber) {\n      try {\n        // @ts-ignore\n        await this.webex.internal.services.waitForCatalog('postauth');\n        // @ts-ignore\n        url = `${this.webex.internal.services.get('locus')}/${LOCI}/${CALL}`;\n        body.invitee = {\n          address: inviteeAddress || `wbxmn:${meetingNumber}`,\n        };\n      } catch (e) {\n        LoggerProxy.logger.error(\n          `Meeting:request#joinMeeting Error Joining ${inviteeAddress || meetingNumber} --> ${e}`\n        );\n        throw e;\n      }\n    }\n\n    // TODO: -- this will be resolved in SDK request\n    url = url.concat(`?${ALTERNATE_REDIRECT_TRUE}`);\n\n    if (resourceId === inviteeAddress) {\n      body.callPreferences = {\n        requestedMedia: [_SLIDES_],\n      };\n    }\n\n    if (roapMessage) {\n      body.localMedias = roapMessage.localMedias;\n    }\n\n    /// @ts-ignore\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri: url,\n      body,\n    });\n  }\n\n  /**\n   * Send a request to refresh the captcha\n   * @param {Object} options\n   * @param {String} options.captchaRefreshUrl\n   * @param {String} options.captchaId\n   * @returns {Promise}\n   * @private\n   */\n  private refreshCaptcha({\n    captchaRefreshUrl,\n    captchaId,\n  }: {\n    captchaRefreshUrl: string;\n    captchaId: string;\n  }) {\n    const body = {\n      captchaId,\n    };\n\n    // @ts-ignore\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri: captchaRefreshUrl,\n      body,\n    }).catch((err) => {\n      LoggerProxy.logger.error(`Meeting:request#refreshCaptcha --> Error: ${err}`);\n\n      throw err;\n    });\n  }\n\n  /**\n   * Make a network request to add a dial in device\n   * @param {Object} options\n   * @param {String} options.correlationId\n   * @param {String} options.locusUrl url for the meeting\n   * @param {String} options.dialInUrl identifier for the to-be provisioned device\n   * @param {String} options.clientUrl identifier for the web device\n   * @returns {Promise}\n   * @private\n   */\n  private dialIn({\n    locusUrl,\n    dialInUrl,\n    clientUrl,\n    correlationId,\n  }: {\n    correlationId: string;\n    locusUrl: string;\n    dialInUrl: string;\n    clientUrl: string;\n  }) {\n    LoggerProxy.logger.info(\n      'Meeting:request#dialIn --> Provisioning a dial in device',\n      correlationId\n    );\n    const uri = `${locusUrl}/${PARTICIPANT}`;\n\n    const body = {\n      device: {\n        deviceType: deviceType.PROVISIONAL,\n        provisionalType: PROVISIONAL_TYPE_DIAL_IN,\n        url: dialInUrl,\n        clientUrl,\n      },\n      correlationId,\n    };\n\n    // @ts-ignore\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri,\n      body,\n    }).catch((err) => {\n      LoggerProxy.logger.error(\n        `Meeting:request#dialIn --> Error provisioning a dial in device, error ${err}`\n      );\n\n      throw err;\n    });\n  }\n\n  /**\n   * Make a network request to add a dial out device\n   * @param {Object} options\n   * @param {String} options.correlationId\n   * @param {String} options.locusUrl url for the meeting\n   * @param {String} options.dialOutUrl identifier for the to-be provisioned device\n   * @param {String} options.phoneNumber phone number to dial out to\n   * @param {String} options.clientUrl identifier for the web device\n   * @returns {Promise}\n   * @private\n   */\n  private dialOut({\n    locusUrl,\n    dialOutUrl,\n    phoneNumber,\n    clientUrl,\n    correlationId,\n  }: {\n    correlationId: string;\n    locusUrl: string;\n    dialOutUrl: string;\n    phoneNumber: string;\n    clientUrl: string;\n  }) {\n    LoggerProxy.logger.info(\n      'Meeting:request#dialOut --> Provisioning a dial out device',\n      correlationId\n    );\n    const uri = `${locusUrl}/${PARTICIPANT}`;\n\n    const body = {\n      device: {\n        deviceType: deviceType.PROVISIONAL,\n        provisionalType: PROVISIONAL_TYPE_DIAL_OUT,\n        url: dialOutUrl,\n        dialoutAddress: phoneNumber,\n        clientUrl,\n      },\n      correlationId,\n    };\n\n    // @ts-ignore\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri,\n      body,\n    }).catch((err) => {\n      LoggerProxy.logger.error(\n        `Meeting:request#dialOut --> Error provisioning a dial out device, error ${err}`\n      );\n\n      throw err;\n    });\n  }\n\n  /**\n   * Syns the missed delta event\n   * @param {Object} options\n   * @param {boolean} options.desync flag to get partial or whole locus object\n   * @param {String} options.syncUrl sync url to get ht elatest locus delta\n   * @returns {Promise}\n   */\n  syncMeeting(options: {desync: boolean; syncUrl: string}) {\n    /* eslint-disable no-else-return */\n    const {desync} = options;\n    let {syncUrl} = options;\n\n    /* istanbul ignore else */\n    if (desync) {\n      // check for existing URL parameters\n      syncUrl = syncUrl\n        .concat(syncUrl.split('?')[1] ? '&' : '?')\n        .concat(`${LOCUS.SYNCDEBUG}=${desync}`);\n    }\n\n    // @ts-ignore\n    return this.request({\n      method: HTTP_VERBS.GET,\n      uri: syncUrl,\n    }) // TODO: Handle if delta sync failed . Get the full locus object\n      .catch((err) => {\n        LoggerProxy.logger.error(\n          `Meeting:request#syncMeeting --> Error syncing meeting, error ${err}`\n        );\n\n        return err;\n      });\n  }\n\n  /**\n   * Request to get the complete locus object\n   * @param {Object} options\n   * @param {boolean} options.desync flag to get partial or whole locus object\n   * @param {String} options.locusUrl sync url to get ht elatest locus delta\n   * @returns {Promise}\n   */\n  getFullLocus(options: {desync: boolean; locusUrl: string}) {\n    let {locusUrl} = options;\n    const {desync} = options;\n\n    if (locusUrl) {\n      if (desync) {\n        locusUrl += `?${LOCUS.SYNCDEBUG}=${desync}`;\n      }\n\n      // @ts-ignore\n      return this.request({\n        method: HTTP_VERBS.GET,\n        uri: locusUrl,\n      }).catch((err) => {\n        LoggerProxy.logger.error(\n          `Meeting:request#getFullLocus --> Error getting full locus, error ${err}`\n        );\n\n        return err;\n      });\n    }\n\n    return Promise.reject();\n  }\n\n  /**\n   * Make a network request to make a provisioned phone leave the meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.phoneUrl\n   * @param {String} options.correlationId\n   * @param {String} options.selfId\n   * @returns {Promise}\n   * @private\n   */\n  private disconnectPhoneAudio({\n    locusUrl,\n    phoneUrl,\n    correlationId,\n    selfId,\n  }: {\n    locusUrl: string;\n    phoneUrl: string;\n    correlationId: string;\n    selfId: string;\n  }) {\n    LoggerProxy.logger.info(\n      `Meeting:request#disconnectPhoneAudio --> request phone ${phoneUrl} to leave`,\n      correlationId\n    );\n    const uri = `${locusUrl}/${PARTICIPANT}/${selfId}/${LEAVE}`;\n\n    const body = {\n      device: {\n        deviceType: deviceType.PROVISIONAL,\n        url: phoneUrl,\n      },\n      correlationId,\n    };\n\n    // @ts-ignore\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body,\n    }).catch((err) => {\n      LoggerProxy.logger.error(\n        `Meeting:request#disconnectPhoneAudio --> Error when requesting phone ${phoneUrl} to leave, error ${err}`\n      );\n\n      throw err;\n    });\n  }\n\n  /**\n   * Make a network request to leave a meeting\n   * @param {Object} options\n   * @param {Url} options.locusUrl\n   * @param {String} options.selfId\n   * @param {Url} options.deviceUrl\n   * @param {String} options.resourceId,\n   * @param {String} options.correlationId\n   * @returns {Promise}\n   */\n  leaveMeeting({\n    locusUrl,\n    selfId,\n    deviceUrl: url,\n    resourceId,\n    correlationId,\n  }: {\n    locusUrl: string;\n    selfId: string;\n    deviceUrl: string;\n    resourceId: string;\n    correlationId: string;\n  }) {\n    LoggerProxy.logger.info('Meeting:request#leaveMeeting --> Leaving a meeting', correlationId);\n\n    const uri = `${locusUrl}/${PARTICIPANT}/${selfId}/${LEAVE}`;\n    const body = {\n      device: {\n        // @ts-ignore\n        deviceType: this.config.meetings.deviceType,\n        url,\n      },\n      usingResource: resourceId || null,\n      correlationId,\n    };\n\n    // @ts-ignore\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body,\n    });\n  }\n\n  /**\n   * Make a network request to acknowledge a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.correlationId\n   * @returns {Promise}\n   */\n  acknowledgeMeeting(options: {locusUrl: string; deviceUrl: string; correlationId: string}) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${ALERT}`;\n    const body = {\n      device: {\n        // @ts-ignore\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl,\n      },\n      correlationId: options.correlationId,\n    };\n\n    // @ts-ignore\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body,\n    });\n  }\n\n  lockMeeting(options) {\n    const uri = `${options.locusUrl}/${CONTROLS}`;\n    const body = {\n      lock: {\n        locked: options.lock,\n      },\n    };\n\n    // @ts-ignore\n    return this.request({\n      method: HTTP_VERBS.PATCH,\n      uri,\n      body,\n    });\n  }\n\n  /**\n   * Make a network request to decline a meeting\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.reason\n   * @returns {Promise}\n   */\n  declineMeeting(options: {locusUrl: string; deviceUrl: string; reason: string}) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${DECLINE}`;\n    const body = {\n      device: {\n        // @ts-ignore\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl,\n      },\n      ...(options.reason && {reason: options.reason}),\n    };\n\n    // @ts-ignore\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body,\n    });\n  }\n\n  /**\n   * Toggle remote audio and/or video\n   * @param {Object} options options for toggling\n   * @param {String} options.selfId Locus self id??\n   * @param {String} options.locusUrl Locus url\n   * @param {String} options.deviceUrl Url of a device\n   * @param {String} options.resourceId Populated if you are paired to a device\n   * @param {String} options.localMedias local sdps\n   * @returns {Promise}\n   */\n  remoteAudioVideoToggle(\n    options:\n      | {\n          selfId: string;\n          locusUrl: string;\n          deviceUrl: string;\n          resourceId: string;\n          localMedias: string;\n        }\n      | any\n  ) {\n    const uri = `${options.locusUrl}/${PARTICIPANT}/${options.selfId}/${MEDIA}`;\n    const body = {\n      device: {\n        // @ts-ignore\n        deviceType: this.config.meetings.deviceType,\n        url: options.deviceUrl,\n      },\n      usingResource: options.resourceId || null,\n      correlationId: options.correlationId,\n      respOnlySdp: true,\n      localMedias: options.localMedias,\n      clientMediaPreferences: {\n        preferTranscoding: options.preferTranscoding ?? true,\n      },\n    };\n\n    // @ts-ignore\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri,\n      body,\n    });\n  }\n\n  /**\n   * change the content floor grant\n   * @param {Object} options options for floor grant\n   * @param {String} options.disposition floor action (granted/released)\n   * @param {String} options.personUrl personUrl who is requesting floor\n   * @param {String} options.deviceUrl Url of a device\n   * @param {String} options.resourceId Populated if you are paired to a device\n   * @param {String} options.uri floor grant uri\n   * @returns {Promise}\n   */\n  changeMeetingFloor(\n    options:\n      | {\n          disposition: string;\n          personUrl: string;\n          deviceUrl: string;\n          resourceId: string;\n          uri: string;\n        }\n      | any\n  ) {\n    let floorReq: any = {disposition: options.disposition};\n\n    /* istanbul ignore else */\n    if (options.disposition === FLOOR_ACTION.GRANTED) {\n      floorReq = {\n        beneficiary: {\n          url: options.personUrl,\n          devices: [\n            {\n              // @ts-ignore\n              deviceType: this.config.meetings.deviceType,\n              url: options.deviceUrl,\n            },\n          ],\n        },\n        disposition: options.disposition,\n        requester: {\n          url: options.personUrl,\n        },\n      };\n    }\n\n    const body: any = {\n      floor: floorReq,\n      resourceUrl: options.resourceUrl,\n    };\n\n    if (options?.resourceToken) {\n      body.resourceToken = options?.resourceToken;\n    }\n\n    // @ts-ignore\n    return this.request({\n      uri: options.uri,\n      method: HTTP_VERBS.PUT,\n      body,\n    });\n  }\n\n  /**\n   * Sends a request to the DTMF endpoint to send tones\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.tones a string of one or more DTMF tones to send\n   * @returns {Promise}\n   */\n  sendDTMF({locusUrl, deviceUrl, tones}: {locusUrl: string; deviceUrl: string; tones: string}) {\n    // @ts-ignore\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri: `${locusUrl}/${SEND_DTMF_ENDPOINT}`,\n      body: {\n        deviceUrl,\n        dtmf: {\n          correlationId: uuid.v4(),\n          tones,\n        },\n      },\n    });\n  }\n\n  /**\n   * Sends a request to the controls endpoint to set the video layout\n   * @param {Object} options\n   * @param {String} options.locusUrl\n   * @param {String} options.deviceUrl\n   * @param {String} options.layoutType a layout type that should be available in meeting constants {@link #layout_types}\n   * @param {Object} options.main preferred dimensions for the remote main video stream\n   * @param {Number} options.main.width preferred width of main video stream\n   * @param {Number} options.main.height preferred height of main video stream\n   * @param {Object} options.content preferred dimensions for the remote content share stream\n   * @param {Number} options.content.width preferred width of content share stream\n   * @param {Number} options.content.height preferred height of content share stream\n   * @returns {Promise}\n   */\n  changeVideoLayout({\n    locusUrl,\n    deviceUrl,\n    layoutType,\n    main,\n    content,\n  }: {\n    locusUrl: string;\n    deviceUrl: string;\n    layoutType: string;\n    main: {\n      width: number;\n      height: number;\n    };\n    content: {\n      width: number;\n      height: number;\n    };\n  }) {\n    // send main/content renderInfo only if both width and height are specified\n    if (main && (!main.width || !main.height)) {\n      return Promise.reject(\n        new Error(\n          `Both width and height must be specified. One of them is missing for main: ${JSON.stringify(\n            main\n          )}`\n        )\n      );\n    }\n\n    if (content && (!content.width || !content.height)) {\n      return Promise.reject(\n        new Error(\n          `Both width and height must be specified. One of them is missing for content: ${JSON.stringify(\n            content\n          )}`\n        )\n      );\n    }\n\n    const renderInfoMain = main ? {width: main.width, height: main.height} : undefined;\n    const renderInfoContent = content ? {width: content.width, height: content.height} : undefined;\n\n    const layoutParams =\n      renderInfoMain || renderInfoContent\n        ? {\n            renderInfo: {\n              main: renderInfoMain,\n              content: renderInfoContent,\n            },\n          }\n        : undefined;\n\n    // @ts-ignore\n    return this.request({\n      method: HTTP_VERBS.PUT,\n      uri: `${locusUrl}/${CONTROLS}`,\n      body: {\n        layout: {\n          deviceUrl,\n          type: layoutType,\n          layoutParams,\n        },\n      },\n    });\n  }\n\n  /**\n   * Make a network request to end meeting for all\n   * @param {Object} options\n   * @param {Url} options.locusUrl\n   * @returns {Promise}\n   */\n  endMeetingForAll({locusUrl}: {locusUrl: string}) {\n    const uri = `${locusUrl}/${END}`;\n\n    // @ts-ignore\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri,\n    });\n  }\n\n  /**\n   * Send a locus keepAlive (used in lobby)\n   * @param {Object} options\n   * @param {Url} options.keepAliveUrl\n   * @returns {Promise}\n   */\n  keepAlive({keepAliveUrl}: {keepAliveUrl: string}) {\n    // @ts-ignore\n    return this.request({\n      method: HTTP_VERBS.GET,\n      uri: keepAliveUrl,\n    });\n  }\n\n  /**\n   * Make a network request to send a reaction.\n   * @param {Object} options\n   * @param {Url} options.reactionChannelUrl\n   * @param {Reaction} options.reaction\n   * @param {string} options.senderID\n   * @returns {Promise}\n   */\n  sendReaction({\n    reactionChannelUrl,\n    reaction,\n    participantId,\n  }: {\n    reactionChannelUrl: string;\n    reaction: Reaction;\n    participantId: string;\n  }) {\n    const uri = reactionChannelUrl;\n\n    // @ts-ignore\n    return this.request({\n      method: HTTP_VERBS.POST,\n      uri,\n      body: {\n        sender: {participantId},\n        reaction,\n      },\n    });\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AAGA,IAAAC,UAAA,GAAAD,OAAA;AAEA,IAAAE,OAAA,GAAAF,OAAA;AAEA,IAAAG,YAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,UAAA,GAAAJ,OAAA;AAkBsB,SAAAK,QAAAC,MAAA,EAAAC,cAAA,QAAAC,IAAA,GAAAC,YAAA,CAAAH,MAAA,OAAAI,6BAAA,QAAAC,OAAA,GAAAD,6BAAA,CAAAJ,MAAA,GAAAC,cAAA,KAAAI,OAAA,GAAAA,OAAA,CAAAC,MAAA,WAAAC,GAAA,WAAAC,gCAAA,CAAAR,MAAA,EAAAO,GAAA,EAAAE,UAAA,OAAAP,IAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,IAAA,EAAAG,OAAA,YAAAH,IAAA;AAAA,SAAAU,cAAAC,MAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAF,CAAA,UAAAG,MAAA,WAAAF,SAAA,CAAAD,CAAA,IAAAC,SAAA,CAAAD,CAAA,QAAAA,CAAA,OAAAf,OAAA,CAAAmB,MAAA,CAAAD,MAAA,OAAAE,OAAA,WAAAC,GAAA,QAAAC,gBAAA,CAAAC,OAAA,EAAAT,MAAA,EAAAO,GAAA,EAAAH,MAAA,CAAAG,GAAA,SAAAG,iCAAA,GAAAC,wBAAA,CAAAX,MAAA,EAAAU,iCAAA,CAAAN,MAAA,KAAAlB,OAAA,CAAAmB,MAAA,CAAAD,MAAA,GAAAE,OAAA,WAAAC,GAAA,IAAAK,sBAAA,CAAAZ,MAAA,EAAAO,GAAA,EAAAZ,gCAAA,CAAAS,MAAA,EAAAG,GAAA,iBAAAP,MAAA;AAAA,SAAAa,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,OAAAC,gBAAA,CAAAV,OAAA,EAAAK,OAAA,GAAAM,MAAA,MAAAL,yBAAA,QAAAM,SAAA,OAAAF,gBAAA,CAAAV,OAAA,QAAAa,WAAA,EAAAF,MAAA,GAAAG,kBAAA,CAAAL,KAAA,EAAAhB,SAAA,EAAAmB,SAAA,YAAAD,MAAA,GAAAF,KAAA,CAAApB,KAAA,OAAAI,SAAA,gBAAAsB,2BAAA,CAAAf,OAAA,QAAAW,MAAA;AAAA,SAAAJ,0BAAA,eAAAS,OAAA,qBAAAF,kBAAA,oBAAAA,kBAAA,CAAAG,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAR,kBAAA,CAAAK,OAAA,8CAAAI,CAAA;AAGtB;AACA;AACA;AAFA,IAGqBC,cAAc,0BAAAC,qBAAA;EAAA,IAAAC,UAAA,CAAA1B,OAAA,EAAAwB,cAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAvB,YAAA,CAAAoB,cAAA;EAGjC,SAAAA,eAAYI,KAAU,EAAEC,OAAY,EAAE;IAAA,IAAAC,KAAA;IAAA,IAAAC,gBAAA,CAAA/B,OAAA,QAAAwB,cAAA;IACpCM,KAAA,GAAAH,MAAA,CAAAL,IAAA,OAAMM,KAAK,EAAEC,OAAO;IAAE,IAAA9B,gBAAA,CAAAC,OAAA,MAAAgC,uBAAA,CAAAhC,OAAA,EAAA8B,KAAA;IACtBA,KAAA,CAAKG,0BAA0B,GAAG,IAAAC,UAAA,CAAAlC,OAAA,EAAS8B,KAAA,CAAKK,iBAAiB,EAAE,IAAI,EAAE;MACvEC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE;IACZ,CAAC,CAAC;IAAC,OAAAP,KAAA;EACL;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAdE,IAAAQ,aAAA,CAAAtC,OAAA,EAAAwB,cAAA;IAAA1B,GAAA;IAAAyC,KAAA;MAAA,IAAAC,YAAA,OAAAC,kBAAA,CAAAzC,OAAA,gBAAA0C,YAAA,CAAA1C,OAAA,CAAA2C,IAAA,CAeA,SAAAC,QAAkBf,OAgBjB;QAAA,IAAAgB,kBAAA,EAAAC,cAAA,EAAAC,aAAA,EAAAC,eAAA,EAAAC,SAAA,EAAAC,QAAA,EAAAC,UAAA,EAAAC,aAAA,EAAAC,kBAAA,EAAAC,SAAA,EAAAC,GAAA,EAAAC,cAAA,EAAAC,WAAA,EAAAC,iBAAA,EAAAC,GAAA,EAAAC,IAAA;QAAA,OAAAlB,YAAA,CAAA1C,OAAA,CAAA6D,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAEGpB,kBAAkB,GAchBhB,OAAO,CAdTgB,kBAAkB,EAClBC,cAAc,GAaZjB,OAAO,CAbTiB,cAAc,EACdC,aAAa,GAYXlB,OAAO,CAZTkB,aAAa,EACbC,eAAe,GAWbnB,OAAO,CAXTmB,eAAe,EACfC,SAAS,GAUPpB,OAAO,CAVToB,SAAS,EACTC,QAAQ,GASNrB,OAAO,CATTqB,QAAQ,EACRC,UAAU,GAQRtB,OAAO,CARTsB,UAAU,EACVC,aAAa,GAOXvB,OAAO,CAPTuB,aAAa,EACbC,kBAAkB,GAMhBxB,OAAO,CANTwB,kBAAkB,EAClBC,SAAS,GAKPzB,OAAO,CALTyB,SAAS,EACTC,GAAG,GAID1B,OAAO,CAJT0B,GAAG,EACHC,cAAc,GAGZ3B,OAAO,CAHT2B,cAAc,EACdC,WAAW,GAET5B,OAAO,CAFT4B,WAAW,EACXC,iBAAiB,GACf7B,OAAO,CADT6B,iBAAiB;cAGnBQ,oBAAW,CAACC,MAAM,CAACC,IAAI,CAAC,mDAAmD,EAAEhB,aAAa,CAAC;cAEvFO,GAAG,GAAG,EAAE;cAENC,IAAS,GAAG;gBAChBf,kBAAkB,EAAlBA,kBAAkB;gBAClBwB,MAAM,EAAE;kBACNV,GAAG,EAAEV,SAAS;kBACd;kBACAqB,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACF;gBACnC,CAAC;gBACDG,aAAa,EAAEtB,UAAU,IAAI,IAAI;gBACjCuB,mBAAmB,EAAGvB,UAAU,IAAIK,cAAc,IAAK,KAAK;gBAC5DJ,aAAa,EAAbA,aAAa;gBACbuB,WAAW,EAAE,IAAI;gBACjBC,gBAAgB,EAAE,IAAI;gBACtBvB,kBAAkB,EAAEA,kBAAkB,IAAI,KAAK;gBAC/CwB,mBAAmB,EAAE,CAAC;gBACtBC,sBAAsB,EAAE;kBACtBpB,iBAAiB,EAAEA,iBAAiB,aAAjBA,iBAAiB,cAAjBA,iBAAiB,GAAI;gBAC1C;cACF,CAAC,EAED;cACA,IAAI,IAAI,CAACqB,KAAK,CAACP,QAAQ,CAACQ,YAAY,EAAE;gBACpC;gBACApB,IAAI,CAACS,MAAM,CAACY,WAAW,GAAG,IAAI,CAACF,KAAK,CAACP,QAAQ,CAACQ,YAAY,CAACC,WAAW;gBACtE;gBACArB,IAAI,CAACS,MAAM,CAACa,UAAU,GAAG,IAAI,CAACH,KAAK,CAACP,QAAQ,CAACQ,YAAY,CAACE,UAAU;cACtE;cAEA,IAAI5B,SAAS,KAAK6B,SAAS,EAAE;gBAC3BvB,IAAI,CAACN,SAAS,GAAGA,SAAS;cAC5B;cAEA,IAAIN,eAAe,EAAE;gBACnBY,IAAI,CAACZ,eAAe,GAAGA,eAAe;cACxC;cAEA,IAAIO,GAAG,KAAK4B,SAAS,EAAE;gBACrBvB,IAAI,CAACL,GAAG,GAAGA,GAAG;cAChB;cAAC,KAEGL,QAAQ;gBAAAa,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACVN,GAAG,MAAAyB,MAAA,CAAMlC,QAAQ,OAAAkC,MAAA,CAAIC,sBAAW,CAAE;cAACtB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAA,MAC1BnB,cAAc,IAAIC,aAAa;gBAAAgB,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAGhC,IAAI,CAACc,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;YAAA;cAC7D;cACA7B,GAAG,MAAAyB,MAAA,CAAM,IAAI,CAACL,KAAK,CAACO,QAAQ,CAACC,QAAQ,CAACE,GAAG,CAAC,OAAO,CAAC,OAAAL,MAAA,CAAIM,eAAI,OAAAN,MAAA,CAAIO,eAAI,CAAE;cACpE/B,IAAI,CAACgC,OAAO,GAAG;gBACbC,OAAO,EAAE/C,cAAc,aAAAsC,MAAA,CAAarC,aAAa;cACnD,CAAC;cAACgB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAA+B,EAAA,GAAA/B,QAAA;cAEFG,oBAAW,CAACC,MAAM,CAAC4B,KAAK,8CAAAX,MAAA,CACuBtC,cAAc,IAAIC,aAAa,WAAAqC,MAAA,CAAArB,QAAA,CAAA+B,EAAA,EAC7E;cAAC,MAAA/B,QAAA,CAAA+B,EAAA;YAAA;cAKN;cACAnC,GAAG,GAAGA,GAAG,CAACyB,MAAM,KAAAA,MAAA,CAAKY,kCAAuB,EAAG;cAE/C,IAAI7C,UAAU,KAAKL,cAAc,EAAE;gBACjCc,IAAI,CAACqC,eAAe,GAAG;kBACrBC,cAAc,EAAE,CAACC,mBAAQ;gBAC3B,CAAC;cACH;cAEA,IAAI1C,WAAW,EAAE;gBACfG,IAAI,CAACwC,WAAW,GAAG3C,WAAW,CAAC2C,WAAW;cAC5C;;cAEA;cAAA,OAAArC,QAAA,CAAAsC,MAAA,WACO,IAAI,CAACC,OAAO,CAAC;gBAClBC,MAAM,EAAEC,qBAAU,CAACC,IAAI;gBACvBC,GAAG,EAAE/C,GAAG;gBACRC,IAAI,EAAJA;cACF,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAG,QAAA,CAAA4C,IAAA;UAAA;QAAA,GAAA/D,OAAA;MAAA,CACH;MAAA,SAAAgE,YAAAC,EAAA;QAAA,OAAArE,YAAA,CAAAnD,KAAA,OAAAI,SAAA;MAAA;MAAA,OAAAmH,WAAA;IAAA;IAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA9G,GAAA;IAAAyC,KAAA,EAQA,SAAAuE,eAAAC,IAAA,EAMG;MAAA,IALDC,iBAAiB,GAAAD,IAAA,CAAjBC,iBAAiB;QACjBC,SAAS,GAAAF,IAAA,CAATE,SAAS;MAKT,IAAMrD,IAAI,GAAG;QACXqD,SAAS,EAATA;MACF,CAAC;;MAED;MACA,OAAO,IAAI,CAACX,OAAO,CAAC;QAClBC,MAAM,EAAEC,qBAAU,CAACC,IAAI;QACvBC,GAAG,EAAEM,iBAAiB;QACtBpD,IAAI,EAAJA;MACF,CAAC,CAAC,CAACsD,KAAK,CAAC,UAACC,GAAG,EAAK;QAChBjD,oBAAW,CAACC,MAAM,CAAC4B,KAAK,8CAAAX,MAAA,CAA8C+B,GAAG,EAAG;QAE5E,MAAMA,GAAG;MACX,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAArH,GAAA;IAAAyC,KAAA,EAUA,SAAA6E,OAAAC,KAAA,EAUG;MAAA,IATDnE,QAAQ,GAAAmE,KAAA,CAARnE,QAAQ;QACRoE,SAAS,GAAAD,KAAA,CAATC,SAAS;QACTC,SAAS,GAAAF,KAAA,CAATE,SAAS;QACTnE,aAAa,GAAAiE,KAAA,CAAbjE,aAAa;MAObc,oBAAW,CAACC,MAAM,CAACC,IAAI,CACrB,0DAA0D,EAC1DhB,aAAa,CACd;MACD,IAAMsD,GAAG,MAAAtB,MAAA,CAAMlC,QAAQ,OAAAkC,MAAA,CAAIC,sBAAW,CAAE;MAExC,IAAMzB,IAAI,GAAG;QACXS,MAAM,EAAE;UACNC,UAAU,EAAEA,kBAAU,CAACkD,WAAW;UAClCC,eAAe,EAAEC,mCAAwB;UACzC/D,GAAG,EAAE2D,SAAS;UACdC,SAAS,EAATA;QACF,CAAC;QACDnE,aAAa,EAAbA;MACF,CAAC;;MAED;MACA,OAAO,IAAI,CAACkD,OAAO,CAAC;QAClBC,MAAM,EAAEC,qBAAU,CAACC,IAAI;QACvBC,GAAG,EAAHA,GAAG;QACH9C,IAAI,EAAJA;MACF,CAAC,CAAC,CAACsD,KAAK,CAAC,UAACC,GAAG,EAAK;QAChBjD,oBAAW,CAACC,MAAM,CAAC4B,KAAK,0EAAAX,MAAA,CACmD+B,GAAG,EAC7E;QAED,MAAMA,GAAG;MACX,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVE;IAAArH,GAAA;IAAAyC,KAAA,EAWA,SAAAoF,QAAAC,KAAA,EAYG;MAAA,IAXD1E,QAAQ,GAAA0E,KAAA,CAAR1E,QAAQ;QACR2E,UAAU,GAAAD,KAAA,CAAVC,UAAU;QACVC,WAAW,GAAAF,KAAA,CAAXE,WAAW;QACXP,SAAS,GAAAK,KAAA,CAATL,SAAS;QACTnE,aAAa,GAAAwE,KAAA,CAAbxE,aAAa;MAQbc,oBAAW,CAACC,MAAM,CAACC,IAAI,CACrB,4DAA4D,EAC5DhB,aAAa,CACd;MACD,IAAMsD,GAAG,MAAAtB,MAAA,CAAMlC,QAAQ,OAAAkC,MAAA,CAAIC,sBAAW,CAAE;MAExC,IAAMzB,IAAI,GAAG;QACXS,MAAM,EAAE;UACNC,UAAU,EAAEA,kBAAU,CAACkD,WAAW;UAClCC,eAAe,EAAEM,oCAAyB;UAC1CpE,GAAG,EAAEkE,UAAU;UACfG,cAAc,EAAEF,WAAW;UAC3BP,SAAS,EAATA;QACF,CAAC;QACDnE,aAAa,EAAbA;MACF,CAAC;;MAED;MACA,OAAO,IAAI,CAACkD,OAAO,CAAC;QAClBC,MAAM,EAAEC,qBAAU,CAACC,IAAI;QACvBC,GAAG,EAAHA,GAAG;QACH9C,IAAI,EAAJA;MACF,CAAC,CAAC,CAACsD,KAAK,CAAC,UAACC,GAAG,EAAK;QAChBjD,oBAAW,CAACC,MAAM,CAAC4B,KAAK,4EAAAX,MAAA,CACqD+B,GAAG,EAC/E;QAED,MAAMA,GAAG;MACX,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAArH,GAAA;IAAAyC,KAAA,EAOA,SAAA0F,YAAYpG,OAA2C,EAAE;MACvD;MACA,IAAOqG,MAAM,GAAIrG,OAAO,CAAjBqG,MAAM;MACb,IAAKC,OAAO,GAAItG,OAAO,CAAlBsG,OAAO;;MAEZ;MACA,IAAID,MAAM,EAAE;QACV;QACAC,OAAO,GAAGA,OAAO,CACd/C,MAAM,CAAC+C,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CACzChD,MAAM,IAAAA,MAAA,CAAIiD,gBAAK,CAACC,SAAS,OAAAlD,MAAA,CAAI8C,MAAM,EAAG;MAC3C;;MAEA;MACA,OAAO,IAAI,CAAC5B,OAAO,CAAC;QAClBC,MAAM,EAAEC,qBAAU,CAAC+B,GAAG;QACtB7B,GAAG,EAAEyB;MACP,CAAC,CAAC,CAAC;MAAA,CACAjB,KAAK,CAAC,UAACC,GAAG,EAAK;QACdjD,oBAAW,CAACC,MAAM,CAAC4B,KAAK,iEAAAX,MAAA,CAC0C+B,GAAG,EACpE;QAED,OAAOA,GAAG;MACZ,CAAC,CAAC;IACN;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;EANE;IAAArH,GAAA;IAAAyC,KAAA,EAOA,SAAAiG,aAAa3G,OAA4C,EAAE;MACzD,IAAKqB,QAAQ,GAAIrB,OAAO,CAAnBqB,QAAQ;MACb,IAAOgF,MAAM,GAAIrG,OAAO,CAAjBqG,MAAM;MAEb,IAAIhF,QAAQ,EAAE;QACZ,IAAIgF,MAAM,EAAE;UACVhF,QAAQ,QAAAkC,MAAA,CAAQiD,gBAAK,CAACC,SAAS,OAAAlD,MAAA,CAAI8C,MAAM,CAAE;QAC7C;;QAEA;QACA,OAAO,IAAI,CAAC5B,OAAO,CAAC;UAClBC,MAAM,EAAEC,qBAAU,CAAC+B,GAAG;UACtB7B,GAAG,EAAExD;QACP,CAAC,CAAC,CAACgE,KAAK,CAAC,UAACC,GAAG,EAAK;UAChBjD,oBAAW,CAACC,MAAM,CAAC4B,KAAK,qEAAAX,MAAA,CAC8C+B,GAAG,EACxE;UAED,OAAOA,GAAG;QACZ,CAAC,CAAC;MACJ;MAEA,OAAOsB,QAAA,CAAAzI,OAAA,CAAQ0I,MAAM,EAAE;IACzB;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAA5I,GAAA;IAAAyC,KAAA,EAUA,SAAAoG,qBAAAC,KAAA,EAUG;MAAA,IATD1F,QAAQ,GAAA0F,KAAA,CAAR1F,QAAQ;QACR2F,QAAQ,GAAAD,KAAA,CAARC,QAAQ;QACRzF,aAAa,GAAAwF,KAAA,CAAbxF,aAAa;QACb0F,MAAM,GAAAF,KAAA,CAANE,MAAM;MAON5E,oBAAW,CAACC,MAAM,CAACC,IAAI,2DAAAgB,MAAA,CACqCyD,QAAQ,gBAClEzF,aAAa,CACd;MACD,IAAMsD,GAAG,MAAAtB,MAAA,CAAMlC,QAAQ,OAAAkC,MAAA,CAAIC,sBAAW,OAAAD,MAAA,CAAI0D,MAAM,OAAA1D,MAAA,CAAI2D,gBAAK,CAAE;MAE3D,IAAMnF,IAAI,GAAG;QACXS,MAAM,EAAE;UACNC,UAAU,EAAEA,kBAAU,CAACkD,WAAW;UAClC7D,GAAG,EAAEkF;QACP,CAAC;QACDzF,aAAa,EAAbA;MACF,CAAC;;MAED;MACA,OAAO,IAAI,CAACkD,OAAO,CAAC;QAClBC,MAAM,EAAEC,qBAAU,CAACwC,GAAG;QACtBtC,GAAG,EAAHA,GAAG;QACH9C,IAAI,EAAJA;MACF,CAAC,CAAC,CAACsD,KAAK,CAAC,UAACC,GAAG,EAAK;QAChBjD,oBAAW,CAACC,MAAM,CAAC4B,KAAK,yEAAAX,MAAA,CACkDyD,QAAQ,uBAAAzD,MAAA,CAAoB+B,GAAG,EACxG;QAED,MAAMA,GAAG;MACX,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAArH,GAAA;IAAAyC,KAAA,EAUA,SAAA0G,aAAAC,KAAA,EAYG;MAAA,IAXDhG,QAAQ,GAAAgG,KAAA,CAARhG,QAAQ;QACR4F,MAAM,GAAAI,KAAA,CAANJ,MAAM;QACKnF,GAAG,GAAAuF,KAAA,CAAdjG,SAAS;QACTE,UAAU,GAAA+F,KAAA,CAAV/F,UAAU;QACVC,aAAa,GAAA8F,KAAA,CAAb9F,aAAa;MAQbc,oBAAW,CAACC,MAAM,CAACC,IAAI,CAAC,oDAAoD,EAAEhB,aAAa,CAAC;MAE5F,IAAMsD,GAAG,MAAAtB,MAAA,CAAMlC,QAAQ,OAAAkC,MAAA,CAAIC,sBAAW,OAAAD,MAAA,CAAI0D,MAAM,OAAA1D,MAAA,CAAI2D,gBAAK,CAAE;MAC3D,IAAMnF,IAAI,GAAG;QACXS,MAAM,EAAE;UACN;UACAC,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACF,UAAU;UAC3CX,GAAG,EAAHA;QACF,CAAC;QACDc,aAAa,EAAEtB,UAAU,IAAI,IAAI;QACjCC,aAAa,EAAbA;MACF,CAAC;;MAED;MACA,OAAO,IAAI,CAACkD,OAAO,CAAC;QAClBC,MAAM,EAAEC,qBAAU,CAACwC,GAAG;QACtBtC,GAAG,EAAHA,GAAG;QACH9C,IAAI,EAAJA;MACF,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA9D,GAAA;IAAAyC,KAAA,EAQA,SAAA4G,mBAAmBtH,OAAqE,EAAE;MACxF,IAAM6E,GAAG,MAAAtB,MAAA,CAAMvD,OAAO,CAACqB,QAAQ,OAAAkC,MAAA,CAAIC,sBAAW,OAAAD,MAAA,CAAIgE,gBAAK,CAAE;MACzD,IAAMxF,IAAI,GAAG;QACXS,MAAM,EAAE;UACN;UACAC,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACF,UAAU;UAC3CX,GAAG,EAAE9B,OAAO,CAACoB;QACf,CAAC;QACDG,aAAa,EAAEvB,OAAO,CAACuB;MACzB,CAAC;;MAED;MACA,OAAO,IAAI,CAACkD,OAAO,CAAC;QAClBC,MAAM,EAAEC,qBAAU,CAACwC,GAAG;QACtBtC,GAAG,EAAHA,GAAG;QACH9C,IAAI,EAAJA;MACF,CAAC,CAAC;IACJ;EAAC;IAAA9D,GAAA;IAAAyC,KAAA,EAED,SAAA8G,YAAYxH,OAAO,EAAE;MACnB,IAAM6E,GAAG,MAAAtB,MAAA,CAAMvD,OAAO,CAACqB,QAAQ,OAAAkC,MAAA,CAAIkE,mBAAQ,CAAE;MAC7C,IAAM1F,IAAI,GAAG;QACX2F,IAAI,EAAE;UACJC,MAAM,EAAE3H,OAAO,CAAC0H;QAClB;MACF,CAAC;;MAED;MACA,OAAO,IAAI,CAACjD,OAAO,CAAC;QAClBC,MAAM,EAAEC,qBAAU,CAACiD,KAAK;QACxB/C,GAAG,EAAHA,GAAG;QACH9C,IAAI,EAAJA;MACF,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA9D,GAAA;IAAAyC,KAAA,EAQA,SAAAmH,eAAe7H,OAA8D,EAAE;MAC7E,IAAM6E,GAAG,MAAAtB,MAAA,CAAMvD,OAAO,CAACqB,QAAQ,OAAAkC,MAAA,CAAIC,sBAAW,OAAAD,MAAA,CAAIuE,kBAAO,CAAE;MAC3D,IAAM/F,IAAI,GAAAtE,aAAA;QACR+E,MAAM,EAAE;UACN;UACAC,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACF,UAAU;UAC3CX,GAAG,EAAE9B,OAAO,CAACoB;QACf;MAAC,GACGpB,OAAO,CAAC+H,MAAM,IAAI;QAACA,MAAM,EAAE/H,OAAO,CAAC+H;MAAM,CAAC,CAC/C;;MAED;MACA,OAAO,IAAI,CAACtD,OAAO,CAAC;QAClBC,MAAM,EAAEC,qBAAU,CAACwC,GAAG;QACtBtC,GAAG,EAAHA,GAAG;QACH9C,IAAI,EAAJA;MACF,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAA9D,GAAA;IAAAyC,KAAA,EAUA,SAAAsH,uBACEhI,OAQO,EACP;MAAA,IAAAiI,qBAAA;MACA,IAAMpD,GAAG,MAAAtB,MAAA,CAAMvD,OAAO,CAACqB,QAAQ,OAAAkC,MAAA,CAAIC,sBAAW,OAAAD,MAAA,CAAIvD,OAAO,CAACiH,MAAM,OAAA1D,MAAA,CAAI2E,gBAAK,CAAE;MAC3E,IAAMnG,IAAI,GAAG;QACXS,MAAM,EAAE;UACN;UACAC,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACF,UAAU;UAC3CX,GAAG,EAAE9B,OAAO,CAACoB;QACf,CAAC;QACDwB,aAAa,EAAE5C,OAAO,CAACsB,UAAU,IAAI,IAAI;QACzCC,aAAa,EAAEvB,OAAO,CAACuB,aAAa;QACpCuB,WAAW,EAAE,IAAI;QACjByB,WAAW,EAAEvE,OAAO,CAACuE,WAAW;QAChCtB,sBAAsB,EAAE;UACtBpB,iBAAiB,GAAAoG,qBAAA,GAAEjI,OAAO,CAAC6B,iBAAiB,cAAAoG,qBAAA,cAAAA,qBAAA,GAAI;QAClD;MACF,CAAC;;MAED;MACA,OAAO,IAAI,CAACxD,OAAO,CAAC;QAClBC,MAAM,EAAEC,qBAAU,CAACwC,GAAG;QACtBtC,GAAG,EAAHA,GAAG;QACH9C,IAAI,EAAJA;MACF,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EATE;IAAA9D,GAAA;IAAAyC,KAAA,EAUA,SAAAyH,mBACEnI,OAQO,EACP;MACA,IAAIoI,QAAa,GAAG;QAACC,WAAW,EAAErI,OAAO,CAACqI;MAAW,CAAC;;MAEtD;MACA,IAAIrI,OAAO,CAACqI,WAAW,KAAKC,uBAAY,CAACC,OAAO,EAAE;QAChDH,QAAQ,GAAG;UACTI,WAAW,EAAE;YACX1G,GAAG,EAAE9B,OAAO,CAACyI,SAAS;YACtBC,OAAO,EAAE,CACP;cACE;cACAjG,UAAU,EAAE,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACF,UAAU;cAC3CX,GAAG,EAAE9B,OAAO,CAACoB;YACf,CAAC;UAEL,CAAC;UACDiH,WAAW,EAAErI,OAAO,CAACqI,WAAW;UAChCM,SAAS,EAAE;YACT7G,GAAG,EAAE9B,OAAO,CAACyI;UACf;QACF,CAAC;MACH;MAEA,IAAM1G,IAAS,GAAG;QAChB6G,KAAK,EAAER,QAAQ;QACfS,WAAW,EAAE7I,OAAO,CAAC6I;MACvB,CAAC;MAED,IAAI7I,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAE8I,aAAa,EAAE;QAC1B/G,IAAI,CAAC+G,aAAa,GAAG9I,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAE8I,aAAa;MAC7C;;MAEA;MACA,OAAO,IAAI,CAACrE,OAAO,CAAC;QAClBI,GAAG,EAAE7E,OAAO,CAAC6E,GAAG;QAChBH,MAAM,EAAEC,qBAAU,CAACwC,GAAG;QACtBpF,IAAI,EAAJA;MACF,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAA9D,GAAA;IAAAyC,KAAA,EAQA,SAAAqI,SAAAC,KAAA,EAA6F;MAAA,IAAnF3H,QAAQ,GAAA2H,KAAA,CAAR3H,QAAQ;QAAED,SAAS,GAAA4H,KAAA,CAAT5H,SAAS;QAAE6H,KAAK,GAAAD,KAAA,CAALC,KAAK;MAClC;MACA,OAAO,IAAI,CAACxE,OAAO,CAAC;QAClBC,MAAM,EAAEC,qBAAU,CAACC,IAAI;QACvBC,GAAG,KAAAtB,MAAA,CAAKlC,QAAQ,OAAAkC,MAAA,CAAI2F,6BAAkB,CAAE;QACxCnH,IAAI,EAAE;UACJX,SAAS,EAATA,SAAS;UACT+H,IAAI,EAAE;YACJ5H,aAAa,EAAE6H,aAAI,CAACC,EAAE,EAAE;YACxBJ,KAAK,EAALA;UACF;QACF;MACF,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAbE;IAAAhL,GAAA;IAAAyC,KAAA,EAcA,SAAAJ,kBAAAgJ,KAAA,EAkBG;MAAA,IAjBDjI,QAAQ,GAAAiI,KAAA,CAARjI,QAAQ;QACRD,SAAS,GAAAkI,KAAA,CAATlI,SAAS;QACTmI,UAAU,GAAAD,KAAA,CAAVC,UAAU;QACVC,IAAI,GAAAF,KAAA,CAAJE,IAAI;QACJC,OAAO,GAAAH,KAAA,CAAPG,OAAO;MAcP;MACA,IAAID,IAAI,KAAK,CAACA,IAAI,CAACE,KAAK,IAAI,CAACF,IAAI,CAACG,MAAM,CAAC,EAAE;QACzC,OAAO/C,QAAA,CAAAzI,OAAA,CAAQ0I,MAAM,CACnB,IAAI+C,KAAK,8EAAArG,MAAA,CACsE,IAAAsG,UAAA,CAAA1L,OAAA,EAC3EqL,IAAI,CACL,EACF,CACF;MACH;MAEA,IAAIC,OAAO,KAAK,CAACA,OAAO,CAACC,KAAK,IAAI,CAACD,OAAO,CAACE,MAAM,CAAC,EAAE;QAClD,OAAO/C,QAAA,CAAAzI,OAAA,CAAQ0I,MAAM,CACnB,IAAI+C,KAAK,iFAAArG,MAAA,CACyE,IAAAsG,UAAA,CAAA1L,OAAA,EAC9EsL,OAAO,CACR,EACF,CACF;MACH;MAEA,IAAMK,cAAc,GAAGN,IAAI,GAAG;QAACE,KAAK,EAAEF,IAAI,CAACE,KAAK;QAAEC,MAAM,EAAEH,IAAI,CAACG;MAAM,CAAC,GAAGrG,SAAS;MAClF,IAAMyG,iBAAiB,GAAGN,OAAO,GAAG;QAACC,KAAK,EAAED,OAAO,CAACC,KAAK;QAAEC,MAAM,EAAEF,OAAO,CAACE;MAAM,CAAC,GAAGrG,SAAS;MAE9F,IAAM0G,YAAY,GAChBF,cAAc,IAAIC,iBAAiB,GAC/B;QACEE,UAAU,EAAE;UACVT,IAAI,EAAEM,cAAc;UACpBL,OAAO,EAAEM;QACX;MACF,CAAC,GACDzG,SAAS;;MAEf;MACA,OAAO,IAAI,CAACmB,OAAO,CAAC;QAClBC,MAAM,EAAEC,qBAAU,CAACwC,GAAG;QACtBtC,GAAG,KAAAtB,MAAA,CAAKlC,QAAQ,OAAAkC,MAAA,CAAIkE,mBAAQ,CAAE;QAC9B1F,IAAI,EAAE;UACJmI,MAAM,EAAE;YACN9I,SAAS,EAATA,SAAS;YACT+I,IAAI,EAAEZ,UAAU;YAChBS,YAAY,EAAZA;UACF;QACF;MACF,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA/L,GAAA;IAAAyC,KAAA,EAMA,SAAA0J,iBAAAC,KAAA,EAAiD;MAAA,IAA/BhJ,QAAQ,GAAAgJ,KAAA,CAARhJ,QAAQ;MACxB,IAAMwD,GAAG,MAAAtB,MAAA,CAAMlC,QAAQ,OAAAkC,MAAA,CAAI+G,cAAG,CAAE;;MAEhC;MACA,OAAO,IAAI,CAAC7F,OAAO,CAAC;QAClBC,MAAM,EAAEC,qBAAU,CAACC,IAAI;QACvBC,GAAG,EAAHA;MACF,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAA5G,GAAA;IAAAyC,KAAA,EAMA,SAAA6J,UAAAC,KAAA,EAAkD;MAAA,IAAvCC,YAAY,GAAAD,KAAA,CAAZC,YAAY;MACrB;MACA,OAAO,IAAI,CAAChG,OAAO,CAAC;QAClBC,MAAM,EAAEC,qBAAU,CAAC+B,GAAG;QACtB7B,GAAG,EAAE4F;MACP,CAAC,CAAC;IACJ;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAxM,GAAA;IAAAyC,KAAA,EAQA,SAAAgK,aAAAC,MAAA,EAQG;MAAA,IAPDC,kBAAkB,GAAAD,MAAA,CAAlBC,kBAAkB;QAClBC,QAAQ,GAAAF,MAAA,CAARE,QAAQ;QACRC,aAAa,GAAAH,MAAA,CAAbG,aAAa;MAMb,IAAMjG,GAAG,GAAG+F,kBAAkB;;MAE9B;MACA,OAAO,IAAI,CAACnG,OAAO,CAAC;QAClBC,MAAM,EAAEC,qBAAU,CAACC,IAAI;QACvBC,GAAG,EAAHA,GAAG;QACH9C,IAAI,EAAE;UACJgJ,MAAM,EAAE;YAACD,aAAa,EAAbA;UAAa,CAAC;UACvBD,QAAQ,EAARA;QACF;MACF,CAAC,CAAC;IACJ;EAAC;EAAA,OAAAlL,cAAA;AAAA,EAxwByCqL,+BAAoB;AAAAC,OAAA,CAAA9M,OAAA,GAAAwB,cAAA"}