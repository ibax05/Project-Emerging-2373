{"version":3,"names":["_internalMediaCore","require","_constants","_interopRequireDefault","_metrics","_util","_loggerProxy","_constants2","createEffectsState","type","LoggerProxy","logger","info","concat","EffectsState","_classCallCheck2","default","_defineProperty2","effectType","state","bnr","enabled","BNR_STATUS","NOT_ENABLED","callToWebrtcBNRInProgress","pendingPromiseResolve","pendingPromiseReject","_createClass2","key","value","_handleClientRequest","_asyncToGenerator2","_regenerator","mark","_callee","isEnable","meeting","_this","wrap","_callee$","_context","prev","next","abrupt","_promise","resolve","reject","enableBNR","disableBNR","stop","handleClientRequest","_x","_x2","apply","arguments","isBnrEnabled","ENABLED","resolvePromise","rejectPromise","e","_enableBNR","_callee2","audioStream","_callee2$","_context2","warn","SHOULD_ENABLE","MediaUtil","createMediaStream","mediaProperties","audioTrack","updateAudio","sendAudio","receiveAudio","mediaDirection","stream","Metrics","sendBehavioralMetric","BEHAVIORAL_METRICS","ENABLE_BNR_SUCCESS","t0","error","ENABLE_BNR_FAILURE","reason","message","stack","_x3","_disableBNR","_callee3","_callee3$","_context3","SHOULD_DISABLE","WebRTCMedia","Effects","BNR","DISABLE_BNR_SUCCESS","DISABLE_BNR_FAILURE","_x4","_default","exports"],"sources":["effectsState.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\nimport {Media as WebRTCMedia} from '@webex/internal-media-core';\n\nimport BEHAVIORAL_METRICS from '../metrics/constants';\nimport Metrics from '../metrics';\nimport MediaUtil from '../media/util';\nimport LoggerProxy from '../common/logs/logger-proxy';\nimport {BNR_STATUS} from '../constants';\n\nconst createEffectsState = (type: any) => {\n  LoggerProxy.logger.info(\n    `Meeting:effectState#createEffectsState --> creating effectsState for effect ${type}`\n  );\n\n  return new EffectsState(type);\n};\n\n/* The purpose of this class is to manage the effects state(for eg., BNR).\n */\nclass EffectsState {\n  effectType: any;\n  pendingPromiseReject: any;\n  pendingPromiseResolve: any;\n  state: any;\n\n  constructor(type: any) {\n    this.effectType = type;\n    this.state = {\n      bnr: {\n        enabled: BNR_STATUS.NOT_ENABLED,\n      },\n      callToWebrtcBNRInProgress: false,\n    };\n    // these 2 hold the resolve, reject methods for the promise we returned to the client in last handleClientRequest() call\n    this.pendingPromiseResolve = null;\n    this.pendingPromiseReject = null;\n  }\n\n  /**\n   * @memberof EffectsState\n   * @param {Boolean} [isEnable] true for enableBNR, false for disableBNR request\n   * @param {Object} [meeting] the meeting object\n   * @returns {Promise}\n   */\n  async handleClientRequest(isEnable?: boolean, meeting?: object) {\n    return new Promise((resolve, reject) => {\n      if (this.pendingPromiseResolve) {\n        // resolve the last promise we returned to the client as the client has issued a new request that has superseded the previous one\n        this.pendingPromiseResolve(true);\n      }\n      this.pendingPromiseResolve = resolve;\n      this.pendingPromiseReject = reject;\n\n      if (isEnable) this.enableBNR(meeting);\n      else this.disableBNR(meeting);\n    });\n  }\n\n  /**\n   * Internal API to return status of BNR\n   * @memberof EffectsState\n   * @returns {Boolean}\n   * @public\n   * @memberof Meeting\n   */\n  public isBnrEnabled() {\n    return this.state.bnr.enabled === BNR_STATUS.ENABLED;\n  }\n\n  resolvePromise() {\n    if (this.pendingPromiseResolve) {\n      this.pendingPromiseResolve(true);\n    }\n    this.pendingPromiseResolve = null;\n    this.pendingPromiseReject = null;\n  }\n\n  rejectPromise(e) {\n    if (this.pendingPromiseReject) {\n      this.pendingPromiseReject(e);\n    }\n    this.pendingPromiseResolve = null;\n    this.pendingPromiseReject = null;\n  }\n\n  /**\n   * enableBNR API\n   * @param {Object} meeting the meeting object\n   * @returns {Promise<Boolean>}\n   * @public\n   * @memberof EffectsState\n   */\n  public async enableBNR(meeting: any) {\n    LoggerProxy.logger.info('Meeting:effectState#enableBNR. Enable BNR called');\n\n    if (this.isBnrEnabled()) {\n      LoggerProxy.logger.warn('Meeting:index#enableBNR. BNR is already enabled');\n\n      return this.resolvePromise();\n    }\n\n    if (this.state.callToWebrtcBNRInProgress) {\n      LoggerProxy.logger.warn(\n        'Meeting:effectState#enableBNR. Call to WebRTC in progress, we need to wait for it to complete'\n      );\n\n      return this.resolvePromise();\n    }\n\n    const {bnr} = this.state;\n\n    try {\n      bnr.enabled = BNR_STATUS.SHOULD_ENABLE;\n      this.state.callToWebrtcBNRInProgress = true;\n      const audioStream = MediaUtil.createMediaStream([meeting.mediaProperties.audioTrack]);\n\n      LoggerProxy.logger.info(\n        'Meeting:effectState#enableBNR. MediaStream created from meeting & sent to updateAudio'\n      );\n      await meeting.updateAudio({\n        sendAudio: true,\n        receiveAudio: meeting.mediaProperties.mediaDirection.receiveAudio,\n        stream: audioStream,\n      });\n\n      LoggerProxy.logger.info(\n        'Meeting:effectState#enableBNR. Updated meeting audio with bnr enabled track'\n      );\n      bnr.enabled = BNR_STATUS.ENABLED;\n      this.state.callToWebrtcBNRInProgress = false;\n      Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.ENABLE_BNR_SUCCESS);\n    } catch (error) {\n      bnr.enabled = BNR_STATUS.NOT_ENABLED;\n      this.state.callToWebrtcBNRInProgress = false;\n      LoggerProxy.logger.error('Meeting:index#enableBNR.', error);\n\n      Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.ENABLE_BNR_FAILURE, {\n        reason: error.message,\n        stack: error.stack,\n      });\n\n      return this.rejectPromise(error);\n    }\n\n    return this.resolvePromise();\n  }\n\n  /**\n   * disableBNR API\n   * @param {Object} meeting the meeting object\n   * @returns {Promise<Boolean>}\n   * @public\n   * @memberof EffectsState\n   */\n  public async disableBNR(meeting: any) {\n    LoggerProxy.logger.info('Meeting:effectState#disableBNR. Disable BNR called');\n\n    const {bnr} = this.state;\n\n    try {\n      if (this.state.callToWebrtcBNRInProgress) {\n        LoggerProxy.logger.info(\n          'Meeting:effectState#disableBNR. Call to WebRTC in progress, we need to wait for it to complete'\n        );\n\n        return this.resolvePromise();\n      }\n\n      bnr.enabled = BNR_STATUS.SHOULD_DISABLE;\n      this.state.callToWebrtcBNRInProgress = true;\n\n      // @ts-ignore - disableBNR does not expect an argument\n      const audioTrack = WebRTCMedia.Effects.BNR.disableBNR(meeting.mediaProperties.audioTrack);\n\n      const audioStream = MediaUtil.createMediaStream([audioTrack]);\n\n      LoggerProxy.logger.info(\n        'Meeting:effectState#disableBNR. Raw media track obtained from WebRTC & sent to updateAudio'\n      );\n\n      await meeting.updateAudio({\n        sendAudio: true,\n        receiveAudio: meeting.mediaProperties.mediaDirection.receiveAudio,\n        stream: audioStream,\n      });\n\n      bnr.enabled = BNR_STATUS.NOT_ENABLED;\n\n      this.state.callToWebrtcBNRInProgress = false;\n\n      Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.DISABLE_BNR_SUCCESS);\n    } catch (error) {\n      bnr.enabled = BNR_STATUS.ENABLED;\n      this.state.callToWebrtcBNRInProgress = false;\n      LoggerProxy.logger.error(`Meeting:index#disableBNR. ${error}`);\n\n      Metrics.sendBehavioralMetric(BEHAVIORAL_METRICS.DISABLE_BNR_FAILURE, {\n        reason: error.message,\n        stack: error.stack,\n      });\n\n      return this.rejectPromise(error);\n    }\n\n    return this.resolvePromise();\n  }\n}\n\nexport default createEffectsState;\n"],"mappings":"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"}