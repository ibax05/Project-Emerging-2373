/**
 * @description Meeting Webex assistance transcription feature.
 * @exports
 * @class Transcription
 */
export default class Transcription {
    webSocketUrl: any;
    sessionID: any;
    members: any;
    memberCSIs: any;
    webSocket: any;
    /**
     * @param {string} webSocketUrl
     * @param {sessionID} sessionId
     * @param {object} members
     * @constructor
     * @memberof Transcription
     */
    constructor(webSocketUrl: string, sessionId: any, members: object);
    /**
     * open the Low Latency Mercury connection
     * An event parameter will be send to the callback.
     *
     * @param {string} token
     * @param {string} sessionID
     * @returns {void}
     */
    connect(token: string): void;
    /**
     * Sets callback to invoke when the web socket connection is closed.
     *
     * @param {Function} callback
     * @returns {void}
     */
    onCloseSocket(callback: any): void;
    /**
     * Sets callback to invoke when a web socket connection error occurs.
     * An event parameter will be send to the callback.
     *
     * @param {Function} callback
     * @returns {void}
     */
    onErrorSocket(callback: any): void;
    /**
     * Get current speaker from the given csis payload and update the global csis map
     *
     * @private
     * @param {object} csis
     * @returns {object}
     */
    private getSpeaker;
    /**
     * Sends transcription data to given callback as it arrives.
     *
     * @param {Function} callback
     * @returns {void}
     */
    subscribe(callback: any): void;
    /**
     * Close the LLM web socket connection
     * @returns {void}
     */
    closeSocket(): void;
}
