import { StatelessWebexPlugin } from '@webex/webex-core';
/**
 * @class MembersRequest
 */
export default class MembersRequest extends StatelessWebexPlugin {
    namespace: string;
    /**
     *
     * @param {Object} options with format of {invitee: string, locusUrl: string}
     * @returns {Promise}
     * @throws {Error} if the options are not valid and complete, must have invitee with emailAddress OR email AND locusUrl
     * @memberof MembersRequest
     */
    addMembers(options: any): any;
    /**
     *
     * @param {Object} options
     * @returns {Promise}
     * @throws {Error} if the options are not valid and complete, must have memberIds AND locusUrl
     * @memberof MembersRequest
     */
    admitMember(options: any): any;
    removeMember(options: any): any;
    muteMember(options: any): any;
    raiseOrLowerHandMember(options: any): any;
    lowerAllHandsMember(options: any): any;
    transferHostToMember(options: any): any;
    /**
     * Sends a request to the DTMF endpoint to send tones
     * @param {Object} options
     * @param {String} options.locusUrl
     * @param {String} options.url device url SIP user
     * @param {String} options.tones a string of one or more DTMF tones to send
     * @param {String} options.memberId ID of PSTN user
     * @returns {Promise}
     */
    sendDialPadKey(options: {
        locusUrl: string;
        url: string;
        tones: string;
        memberId: string;
    }): any;
    /**
     * @param {Object} options with format of {invitee: string, locusUrl: string}
     * @returns {Promise}
     * @throws {Error} if the options are not valid and complete, must have invitee with emailAddress OR email AND locusUrl
     * @memberof MembersRequest
     */
    cancelPhoneInvite(options: any): any;
}
