{"version":3,"names":["_uuid","_interopRequireDefault","require","_loggerProxy","LogsRequest","options","_classCallCheck2","default","_defineProperty2","webex","_createClass2","key","value","_uploadLogs","_asyncToGenerator2","_regenerator","mark","_callee","id","locusId","correlationId","meetingId","callStart","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","feedbackId","uuid","v4","LoggerProxy","logger","info","concat","internal","support","submitLogs","t0","error","abrupt","_promise","reject","stop","uploadLogs","apply","exports"],"sources":["request.ts"],"sourcesContent":["import uuid from 'uuid';\n\nimport LoggerProxy from './logger-proxy';\n\n/**\n * @class LogsRequest\n */\nexport default class LogsRequest {\n  webex: any;\n\n  /**\n   *\n   * @param {Object} options\n   * @param {Object} options.webex Webex SDK instance\n   * @param {ClientMetrics} metrics\n   */\n  constructor(options: {webex: object}) {\n    this.webex = options.webex;\n  }\n\n  /**\n   * Uploads logs to the support server\n   *\n   * @param {Object} [options={}]\n   * @param {String} [options.feedbackId=uuid.v4] ID used for tracking\n   * @param {String} [options.locusId]\n   * @param {String} [options.correlationId]\n   * @param {String} [options.callStart] Call Start Time\n   * @param {String} [options.meetingId] webex meeting ID\n   * @returns {Promise.<String>} Feedback ID\n   * @memberof LogsRequest\n   */\n  async uploadLogs(\n    options: {\n      feedbackId?: string;\n      locusId?: string;\n      correlationId?: string;\n      callStart?: string;\n      meetingId?: string;\n    } = {}\n  ) {\n    const id = options.feedbackId || uuid.v4();\n    const {locusId, correlationId, meetingId, callStart} = options;\n\n    LoggerProxy.logger.info(\n      `Logs:request#uploadLogs --> uploading user logs for feedbackId: ${id}`\n    );\n\n    try {\n      await this.webex.internal.support.submitLogs({\n        feedbackId: id,\n        locusId,\n        correlationId,\n        meetingId,\n        callStart,\n      });\n    } catch (error) {\n      LoggerProxy.logger.error('Logs:request#uploadLogs --> uploading user logs failed', error);\n\n      return Promise.reject(error);\n    }\n\n    return id;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;AAAA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,YAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEA;AACA;AACA;AAFA,IAGqBE,WAAW;EAG9B;AACF;AACA;AACA;AACA;AACA;EACE,SAAAA,YAAYC,OAAwB,EAAE;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAH,WAAA;IAAA,IAAAI,gBAAA,CAAAD,OAAA;IACpC,IAAI,CAACE,KAAK,GAAGJ,OAAO,CAACI,KAAK;EAC5B;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAXE,IAAAC,aAAA,CAAAH,OAAA,EAAAH,WAAA;IAAAO,GAAA;IAAAC,KAAA;MAAA,IAAAC,WAAA,OAAAC,kBAAA,CAAAP,OAAA,gBAAAQ,YAAA,CAAAR,OAAA,CAAAS,IAAA,CAYA,SAAAC,QAAA;QAAA,IAAAZ,OAAA;UAAAa,EAAA;UAAAC,OAAA;UAAAC,aAAA;UAAAC,SAAA;UAAAC,SAAA;UAAAC,KAAA,GAAAC,SAAA;QAAA,OAAAT,YAAA,CAAAR,OAAA,CAAAkB,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cACExB,OAMC,GAAAkB,KAAA,CAAAO,MAAA,QAAAP,KAAA,QAAAQ,SAAA,GAAAR,KAAA,MAAG,CAAC,CAAC;cAEAL,EAAE,GAAGb,OAAO,CAAC2B,UAAU,IAAIC,aAAI,CAACC,EAAE,EAAE;cACnCf,OAAO,GAAyCd,OAAO,CAAvDc,OAAO,EAAEC,aAAa,GAA0Bf,OAAO,CAA9Ce,aAAa,EAAEC,SAAS,GAAehB,OAAO,CAA/BgB,SAAS,EAAEC,SAAS,GAAIjB,OAAO,CAApBiB,SAAS;cAEnDa,oBAAW,CAACC,MAAM,CAACC,IAAI,oEAAAC,MAAA,CAC8CpB,EAAE,EACtE;cAACS,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAGM,IAAI,CAACpB,KAAK,CAAC8B,QAAQ,CAACC,OAAO,CAACC,UAAU,CAAC;gBAC3CT,UAAU,EAAEd,EAAE;gBACdC,OAAO,EAAPA,OAAO;gBACPC,aAAa,EAAbA,aAAa;gBACbC,SAAS,EAATA,SAAS;gBACTC,SAAS,EAATA;cACF,CAAC,CAAC;YAAA;cAAAK,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAe,EAAA,GAAAf,QAAA;cAEFQ,oBAAW,CAACC,MAAM,CAACO,KAAK,CAAC,wDAAwD,EAAAhB,QAAA,CAAAe,EAAA,CAAQ;cAAC,OAAAf,QAAA,CAAAiB,MAAA,WAEnFC,QAAA,CAAAtC,OAAA,CAAQuC,MAAM,CAAAnB,QAAA,CAAAe,EAAA,CAAO;YAAA;cAAA,OAAAf,QAAA,CAAAiB,MAAA,WAGvB1B,EAAE;YAAA;YAAA;cAAA,OAAAS,QAAA,CAAAoB,IAAA;UAAA;QAAA,GAAA9B,OAAA;MAAA,CACV;MAAA,SAAA+B,WAAA;QAAA,OAAAnC,WAAA,CAAAoC,KAAA,OAAAzB,SAAA;MAAA;MAAA,OAAAwB,UAAA;IAAA;EAAA;EAAA,OAAA5C,WAAA;AAAA;AAAA8C,OAAA,CAAA3C,OAAA,GAAAH,WAAA"}