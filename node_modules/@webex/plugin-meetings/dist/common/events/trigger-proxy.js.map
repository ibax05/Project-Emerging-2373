{"version":3,"names":["_loggerProxy","_interopRequireDefault","require","_loggerConfig","_parameter","_util","TriggerProxy","trigger","instance","scope","payload","ParameterError","LoggerProxy","logger","debug","concat","EventsUtil","getScopeLog","LoggerConfig","verboseEvents","getEventLog","_default","exports","default"],"sources":["trigger-proxy.ts"],"sourcesContent":["import LoggerProxy from '../logs/logger-proxy';\nimport LoggerConfig from '../logs/logger-config';\nimport ParameterError from '../errors/parameter';\n\nimport EventsUtil from './util';\n\nconst TriggerProxy: any = {};\n\nTriggerProxy.trigger = (instance, scope, trigger, payload) => {\n  if (!instance || !instance.trigger) {\n    throw new ParameterError(\n      'Instance to trigger from must be defined and have a trigger function.'\n    );\n  }\n\n  LoggerProxy.logger.debug(\n    `${EventsUtil.getScopeLog(scope)}event#${trigger}${\n      LoggerConfig.verboseEvents ? ` -- ${EventsUtil.getEventLog(payload)}` : ''\n    }`\n  );\n\n  return instance.trigger(trigger, payload);\n};\n\nexport default TriggerProxy;\n"],"mappings":";;;;;;;;AAAA,IAAAA,YAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,UAAA,GAAAH,sBAAA,CAAAC,OAAA;AAEA,IAAAG,KAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAEA,IAAMI,YAAiB,GAAG,CAAC,CAAC;AAE5BA,YAAY,CAACC,OAAO,GAAG,UAACC,QAAQ,EAAEC,KAAK,EAAEF,OAAO,EAAEG,OAAO,EAAK;EAC5D,IAAI,CAACF,QAAQ,IAAI,CAACA,QAAQ,CAACD,OAAO,EAAE;IAClC,MAAM,IAAII,kBAAc,CACtB,uEAAuE,CACxE;EACH;EAEAC,oBAAW,CAACC,MAAM,CAACC,KAAK,IAAAC,MAAA,CACnBC,aAAU,CAACC,WAAW,CAACR,KAAK,CAAC,YAAAM,MAAA,CAASR,OAAO,EAAAQ,MAAA,CAC9CG,qBAAY,CAACC,aAAa,UAAAJ,MAAA,CAAUC,aAAU,CAACI,WAAW,CAACV,OAAO,CAAC,IAAK,EAAE,EAE7E;EAED,OAAOF,QAAQ,CAACD,OAAO,CAACA,OAAO,EAAEG,OAAO,CAAC;AAC3C,CAAC;AAAC,IAAAW,QAAA,GAEaf,YAAY;AAAAgB,OAAA,CAAAC,OAAA,GAAAF,QAAA"}