{"version":3,"names":["_common","require","_webexCore","_jsonwebtoken","_interopRequireDefault","_uuid","_dec","_obj","Authorization","WebexPlugin","extend","whileInFlight","derived","isAuthenticating","deps","fn","isAuthorizing","session","default","type","namespace","logout","options","arguments","length","undefined","webex","request","method","uri","config","logoutUrl","body","token","cisService","service","requestAuthorizationCodeGrant","_this","logger","info","code","_promise","reject","Error","tokenUrl","form","grant_type","redirect_uri","self_contained_token","auth","user","client_id","pass","client_secret","sendImmediately","shouldRefreshAccessToken","then","res","credentials","set","supertoken","catch","statusCode","ErrorConstructor","grantErrors","select","error","_res","requestAccessTokenFromJwt","_ref","_this2","jwt","hydraUri","internal","services","get","slice","process","env","HYDRA_SERVICE_URL","concat","headers","authorization","_ref2","access_token","token_type","expires_in","expiresIn","initServiceCatalogs","createJwt","_ref3","issuer","secretId","displayName","secret","Buffer","from","payload","uuid","jwtToken","sign","resolve","e","version","_applyDecoratedDescriptor2","oneFlight","_getOwnPropertyDescriptor","_default","exports"],"sources":["authorization.js"],"sourcesContent":["/*!\n * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.\n */\n\n/* eslint camelcase: [0] */\n\nimport {oneFlight, whileInFlight} from '@webex/common';\nimport {grantErrors, WebexPlugin} from '@webex/webex-core';\n\nimport jwt from 'jsonwebtoken';\nimport uuid from 'uuid';\n\n/**\n * NodeJS support for OAuth2\n * @class\n * @name AuthorizationNode\n */\nconst Authorization = WebexPlugin.extend({\n  derived: {\n    /**\n     * Alias of {@link AuthorizationNode#isAuthorizing}\n     * @instance\n     * @memberof AuthorizationNode\n     * @type {boolean}\n     */\n    isAuthenticating: {\n      deps: ['isAuthorizing'],\n      fn() {\n        return this.isAuthorizing;\n      },\n    },\n  },\n\n  session: {\n    /**\n     * Indicates if an Authorization Code exchange is inflight\n     * @instance\n     * @memberof AuthorizationNode\n     * @type {boolean}\n     */\n    isAuthorizing: {\n      default: false,\n      type: 'boolean',\n    },\n  },\n\n  namespace: 'Credentials',\n\n  logout(options = {}) {\n    this.webex.request({\n      method: 'POST',\n      uri: this.config.logoutUrl,\n      body: {\n        token: options.token,\n        cisService: this.config.service,\n      },\n    });\n  },\n\n  @whileInFlight('isAuthorizing')\n  @oneFlight\n  /**\n   * Exchanges an authorization code for an access token\n   * @instance\n   * @memberof AuthorizationNode\n   * @param {Object} options\n   * @param {Object} options.code\n   * @returns {Promise}\n   */\n  requestAuthorizationCodeGrant(options = {}) {\n    this.logger.info('credentials: requesting authorization code grant');\n\n    if (!options.code) {\n      return Promise.reject(new Error('`options.code` is required'));\n    }\n\n    return this.webex\n      .request({\n        method: 'POST',\n        uri: this.config.tokenUrl,\n        form: {\n          grant_type: 'authorization_code',\n          redirect_uri: this.config.redirect_uri,\n          code: options.code,\n          self_contained_token: true,\n        },\n        auth: {\n          user: this.config.client_id,\n          pass: this.config.client_secret,\n          sendImmediately: true,\n        },\n        shouldRefreshAccessToken: false,\n      })\n      .then((res) => {\n        this.webex.credentials.set({supertoken: res.body});\n      })\n      .catch((res) => {\n        if (res.statusCode !== 400) {\n          return Promise.reject(res);\n        }\n\n        const ErrorConstructor = grantErrors.select(res.body.error);\n\n        return Promise.reject(new ErrorConstructor(res._res || res));\n      });\n  },\n\n  @oneFlight\n  /**\n   * Requests a Webex access token for a user already authenticated into\n   * your product.\n   *\n   * Note: You'll need to supply a jwtRefreshCallback of the form\n   * `Promise<jwt> = jwtRefreshCallback(webex)` for automatic token refresh to\n   * work.\n   *\n   * @instance\n   * @memberof AuthorizationNode\n   * @param {Object} options\n   * @param {Object} options.jwt This is a jwt generated by your backend that\n   * identifies a user in your system\n   * @returns {Promise}\n   */\n  requestAccessTokenFromJwt({jwt}) {\n    let hydraUri = this.webex.internal.services.get('hydra', true);\n\n    if (hydraUri && hydraUri.slice(-1) !== '/') {\n      // add a `/` to hydra's uri from the services catalog so that\n      // it matches the current env service format.\n      hydraUri += '/';\n    }\n\n    hydraUri = hydraUri || process.env.HYDRA_SERVICE_URL || 'https://api.ciscospark.com/v1/';\n\n    return this.webex\n      .request({\n        method: 'POST',\n        uri: `${hydraUri}jwt/login`,\n        headers: {\n          authorization: jwt,\n        },\n      })\n      .then(({body}) => ({\n        access_token: body.token,\n        token_type: 'Bearer',\n        expires_in: body.expiresIn,\n      }))\n      .then((token) => {\n        this.webex.credentials.set({\n          supertoken: token,\n        });\n      })\n      .then(() => this.webex.internal.services.initServiceCatalogs());\n  },\n\n  /**\n   * Creates a jwt user token\n   * @param {object} options\n   * @param {String} options.issuer Guest Issuer ID\n   * @param {String} options.secretId Guest Secret ID\n   * @param {String} options.displayName Guest Display Name | optional\n   * @param {String} options.expiresIn\n   * @returns {Promise<object>}\n   */\n  createJwt({issuer, secretId, displayName, expiresIn}) {\n    const secret = Buffer.from(secretId, 'base64');\n    const payload = {\n      \"sub\": `guest-user-${uuid()}`,\n      \"iss\": issuer,\n      \"name\": displayName || `Guest User - ${uuid()}`\n    };\n\n    try {\n      const jwtToken = jwt.sign(payload, secret,{ expiresIn });\n\n      return Promise.resolve({jwt: jwtToken});\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  },\n\n});\n\nexport default Authorization;\n"],"mappings":"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"}