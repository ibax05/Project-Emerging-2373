"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");
var _regenerator = _interopRequireDefault(require("@babel/runtime-corejs2/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime-corejs2/helpers/asyncToGenerator"));
var _promise = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/promise"));
var _deleteProperty = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/reflect/delete-property"));
/* eslint-disable no-underscore-dangle */
/*!
 * Copyright (c) 2015-2020 Cisco Systems, Inc. See LICENSE file.
 */

/* eslint-env mocha */
/* eslint camelcase: [0] */

var assert = require('assert');
var _ = require('lodash');
var retry = require('@webex/test-helper-retry');
var _require = require('@webex/test-users'),
  createTestUser = _require.createTestUser,
  removeTestUser = _require.removeTestUser,
  createWhistlerTestUser = _require.createWhistlerTestUser,
  removeWhistlerTestUser = _require.removeWhistlerTestUser;
var allUsers = [];
if (after) {
  after(function () {
    /* eslint no-invalid-this: [0] */
    this.timeout(120000);
    allUsers.forEach(function (user) {
      return user.webex && user.webex.internal.mercury && user.webex.internal.mercury.disconnect();
    });
    return _remove(allUsers);
  });
}

/**
 * Helper
 * @param {Object} options
 * @param {number} options.count amount of users to create
 * @param {boolean} options.whistler use Whistler Service to generate test users
 * @param {Object} options.config configuration to pass to test-users library
 * see test-users package for full options
 * @private
 * @returns {Promise<Array<User>>}
 */
function _create(options) {
  options = options || {};
  var _options = options,
    count = _options.count;
  if (!count) {
    count = 1;
  }
  var promises = [];
  for (var i = 0; i < count; i += 1) {
    promises.push(retry(makeUser));
  }
  return _promise.default.all(promises);

  /**
   * Helper
   * @private
   * @returns {Promise<User>}
   */
  function makeUser() {
    var config = _.defaults({
      scopes: process.env.WEBEX_SCOPE
    }, options.config);
    return options.whistler ? createWhistlerTestUser(config).then(function (user) {
      allUsers.push(user);
      return user;
    }) : createTestUser(config).then(function (user) {
      allUsers.push(user);
      return user;
    });
  }
}

/**
 * Helper
 * @param {Array<User>} users
 * @returns {Promise}
 */
function _remove(users) {
  return _promise.default.all(users.map( /*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(user) {
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            if (!user.reservationUrl) {
              _context.next = 5;
              break;
            }
            _context.next = 3;
            return removeWhistlerTestUser(user).catch(function (reason) {
              console.warn('failed to delete test user', reason);
            });
          case 3:
            _context.next = 8;
            break;
          case 5:
            if (user.token && !user.token.authorization) {
              (0, _deleteProperty.default)(user, 'token');
            }
            _context.next = 8;
            return removeTestUser(user).catch(function (reason) {
              console.warn('failed to delete test user', reason);
            });
          case 8:
            return _context.abrupt("return", new _promise.default(function (resolve) {
              setTimeout(resolve, 500);
            }));
          case 9:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }()));
}
module.exports = {
  create: function create(options) {
    assert(process.env.WEBEX_CLIENT_ID, 'WEBEX_CLIENT_ID must be defined');
    assert(process.env.WEBEX_CLIENT_SECRET, 'WEBEX_CLIENT_SECRET must be defined');
    return _create(options);
  },
  remove: _remove
};
//# sourceMappingURL=index.js.map
