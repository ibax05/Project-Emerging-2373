{"version":3,"names":["DeviceCollection","devices","get","deviceId","set","device","id","identity","existingDevice","_merge2","default","reset","getAll","_values","_default","exports"],"sources":["collection.js"],"sourcesContent":["import {merge} from 'lodash';\n\nconst DeviceCollection = {\n  devices: {},\n\n  get(deviceId) {\n    return this.devices[deviceId];\n  },\n\n  set(device) {\n    const deviceId = device.id || (device.identity && device.identity.id);\n    // check if the device is already existing, if so then merge else add\n    const existingDevice = this.devices[deviceId];\n\n    if (existingDevice) {\n      // already existing, merge for any new binding information\n      merge(existingDevice, device);\n    } else {\n      this.devices[deviceId] = device;\n    }\n  },\n\n  reset() {\n    this.devices = {};\n  },\n\n  getAll() {\n    return Object.values(this.devices);\n  },\n};\n\nexport default DeviceCollection;\n"],"mappings":";;;;;;;;;;AAEA,IAAMA,gBAAgB,GAAG;EACvBC,OAAO,EAAE,CAAC,CAAC;EAEXC,GAAG,WAAAA,IAACC,QAAQ,EAAE;IACZ,OAAO,IAAI,CAACF,OAAO,CAACE,QAAQ,CAAC;EAC/B,CAAC;EAEDC,GAAG,WAAAA,IAACC,MAAM,EAAE;IACV,IAAMF,QAAQ,GAAGE,MAAM,CAACC,EAAE,IAAKD,MAAM,CAACE,QAAQ,IAAIF,MAAM,CAACE,QAAQ,CAACD,EAAG;IACrE;IACA,IAAME,cAAc,GAAG,IAAI,CAACP,OAAO,CAACE,QAAQ,CAAC;IAE7C,IAAIK,cAAc,EAAE;MAClB;MACA,IAAAC,OAAA,CAAAC,OAAA,EAAMF,cAAc,EAAEH,MAAM,CAAC;IAC/B,CAAC,MAAM;MACL,IAAI,CAACJ,OAAO,CAACE,QAAQ,CAAC,GAAGE,MAAM;IACjC;EACF,CAAC;EAEDM,KAAK,WAAAA,MAAA,EAAG;IACN,IAAI,CAACV,OAAO,GAAG,CAAC,CAAC;EACnB,CAAC;EAEDW,MAAM,WAAAA,OAAA,EAAG;IACP,OAAO,IAAAC,OAAA,CAAAH,OAAA,EAAc,IAAI,CAACT,OAAO,CAAC;EACpC;AACF,CAAC;AAAC,IAAAa,QAAA,GAEad,gBAAgB;AAAAe,OAAA,CAAAL,OAAA,GAAAI,QAAA"}